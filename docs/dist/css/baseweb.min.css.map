{"version":3,"sources":["baseweb.css","../../../src/scss/core/_colophon.scss","../../../src/scss/elements/_base.scss","../../../src/scss/core/_settings.scss","../../../src/scss/core/_grid.scss","../../../src/scss/core/_media.scss","../../../src/scss/core/_mixins.scss","../../../src/scss/elements/_typography.scss","../../../src/scss/core/_palette.scss","../../../src/scss/core/_functions.scss","../../../src/scss/elements/_lists.scss","../../../src/scss/elements/_tables.scss","../../../src/scss/elements/_blockquotes.scss","../../../src/scss/elements/_code.scss","../../../src/scss/elements/_images.scss","../../../src/scss/elements/_videos.scss","../../../src/scss/elements/_rules.scss","../../../src/scss/elements/_forms.scss","../../../src/scss/elements/_buttons.scss","../../../src/scss/elements/_icons.scss","../../../src/scss/elements/_chips.scss","../../../src/scss/blocks/_badges.scss","../../../src/scss/blocks/_breadcrumbs.scss","../../../src/scss/blocks/_button-groups.scss","../../../src/scss/blocks/_dropdowns.scss","../../../src/scss/blocks/_notices.scss","../../../src/scss/blocks/_offcanvas.scss","../../../src/scss/blocks/_tabs.scss","../../../src/scss/blocks/_tooltips.scss","elements/_lists-ascii.scss","elements/_code-highlight.scss","blocks/_nav-posts.scss","custom/_docs-demos.scss","custom/_docs-swatches.scss","custom/_docs-icons.scss","custom/_custom.scss"],"names":[],"mappings":"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","file":"baseweb.min.css","sourcesContent":["/*!\n * BaseWeb\n * A fresh front-end development framework\n * @version 3.0.6\n *\n * @author Sebastian Nitu\n * @url https://github.com/sebnitu/BaseWeb\n * @url http://sebnitu.com\n *\n * Copyright (c) 2020 Sebastian Nitu (MIT Licensed)\n */html,body{margin:0;padding:0}html{-webkit-text-size-adjust:100%;-ms-text-size-adjust:100%}article,aside,details,figcaption,figure,footer,header,hgroup,menu,nav,section{display:block}html{box-sizing:border-box}*,*:before,*:after{box-sizing:inherit}::selection{background:rgba(76,175,80,0.25);text-shadow:none}.container{box-sizing:border-box;width:100%;min-width:none;max-width:none;margin:0;padding:0 1.5rem}.row{box-sizing:border-box;width:100%;margin-left:0;margin-right:0}.col{box-sizing:border-box;width:100%;float:none;padding-left:0;padding-right:0}@media (min-width: 760px){.container{box-sizing:border-box;width:100%;min-width:none;max-width:75rem;margin:0 auto;padding:0 1.5rem}.container:after{content:'';display:table;clear:both}.row{box-sizing:border-box;width:auto;margin-left:-.75rem;margin-right:-.75rem}.row:after{content:'';display:table;clear:both}.col{box-sizing:border-box;min-height:1px;float:left;padding-left:.75rem;padding-right:.75rem}.col.col-left{float:left}.col.col-right{float:right}.col-no-inner-gutter{padding-left:0;padding-right:0}.col-1{width:8.33333%}.col-2{width:16.66667%}.col-3{width:25%}.col-4{width:33.33333%}.col-5{width:41.66667%}.col-6{width:50%}.col-7{width:58.33333%}.col-8{width:66.66667%}.col-9{width:75%}.col-10{width:83.33333%}.col-11{width:91.66667%}.col-12{width:100%}.prefix-1{margin-left:8.33333%}.prefix-2{margin-left:16.66667%}.prefix-3{margin-left:25%}.prefix-4{margin-left:33.33333%}.prefix-5{margin-left:41.66667%}.prefix-6{margin-left:50%}.prefix-7{margin-left:58.33333%}.prefix-8{margin-left:66.66667%}.prefix-9{margin-left:75%}.prefix-10{margin-left:83.33333%}.prefix-11{margin-left:91.66667%}.suffix-1{margin-right:8.33333%}.suffix-2{margin-right:16.66667%}.suffix-3{margin-right:25%}.suffix-4{margin-right:33.33333%}.suffix-5{margin-right:41.66667%}.suffix-6{margin-right:50%}.suffix-7{margin-right:58.33333%}.suffix-8{margin-right:66.66667%}.suffix-9{margin-right:75%}.suffix-10{margin-right:83.33333%}.suffix-11{margin-right:91.66667%}}.clearfix:after{content:'';display:table;clear:both}.remove-clearfix:after{content:none;display:none;clear:none}.float-left{float:left}.float-right{float:right}.show{display:block !important}.show-inline-block{display:inline-block !important}.show-flex{display:flex !important}.show-inline-flex{display:inline-flex !important}.show-inherit{display:inherit !important}.hide{display:none !important}@media (min-width: 480px){.show-small-down{display:none !important}.hide-small-up{display:none !important}}@media (max-width: 479px){.hide-small-down{display:none !important}.show-small-up{display:none !important}}@media (min-width: 760px){.show-medium-down{display:none !important}.hide-medium-up{display:none !important}}@media (max-width: 759px){.hide-medium-down{display:none !important}.show-medium-up{display:none !important}}@media (min-width: 990px){.show-large-down{display:none !important}.hide-large-up{display:none !important}}@media (max-width: 989px){.hide-large-down{display:none !important}.show-large-up{display:none !important}}@media (min-width: 1380px){.show-huge-down{display:none !important}.hide-huge-up{display:none !important}}@media (max-width: 1379px){.hide-huge-down{display:none !important}.show-huge-up{display:none !important}}html{font-size:16px}body{font-family:-apple-system,system-ui,BlinkMacSystemFont,\"Segoe UI\",\"Roboto\",\"Helvetica Neue\",Arial,sans-serif;font-size:16px;line-height:1.5em;font-weight:400;color:#424242;-webkit-font-smoothing:subpixel-antialiased}a{color:#2196F3;text-decoration:none;border-bottom:1px solid rgba(0,0,0,0.1)}a:hover{color:#1976D2;border-color:#1976D2}h1,h2,h3,h4,h5,h6,.h1,.h2,.h3,.h4,.block-action h2,.h5,.widget h2,.subheading,.h6{margin:1rem 0;font-family:inherit;line-height:1.25em;font-weight:600;color:#212121}h1 a,h2 a,h3 a,h4 a,h5 a,h6 a,.h1 a,.h2 a,.h3 a,.h4 a,.block-action h2 a,.h5 a,.widget h2 a,.subheading a,.h6 a{color:#212121;text-decoration:none;border:none;border-bottom:1px solid rgba(0,0,0,0.1)}h1 a:hover,h2 a:hover,h3 a:hover,h4 a:hover,h5 a:hover,h6 a:hover,.h1 a:hover,.h2 a:hover,.h3 a:hover,.h4 a:hover,.block-action h2 a:hover,.h5 a:hover,.widget h2 a:hover,.subheading a:hover,.h6 a:hover{color:#2196F3;border-color:#1976D2}h1,.h1{font-size:2.5em}h2,.h2{font-size:2em}h3,.h3{font-size:1.75em}h4,.h4,.block-action h2{font-size:1.5em}h5,.h5,.widget h2,.subheading{font-size:1.25em}h6,.h6{font-size:1em}p{margin:1em 0}strong{font-weight:bold}em{font-style:italic}small{font-size:0.8em}mark{background:rgba(255,255,0,0.5)}cite{font-style:italic}abbr[title],abbr[data-original-title]{cursor:help;text-decoration:underline dotted}.text-lead{font-size:1.5em;line-height:1.4em;color:#212121;font-weight:300}.text-lead a{text-decoration:none}.text-small{font-size:0.8em;line-height:1.5em}.text-soften{font-weight:400;color:#9E9E9E}.text-harden{font-weight:bold;color:#212121}.text-left{text-align:left}.text-center{text-align:center}.text-right{text-align:right}.text-justify{text-align:justify}.text-nowrap{white-space:nowrap}.text-lowercase{text-transform:lowercase}.text-uppercase{text-transform:uppercase}.text-capitalize{text-transform:capitalize}ul,ol{margin:1em 0 1em 2em;padding:0}ul ul,ul ol,ul li,ol ul,ol ol,ol li{margin-top:0.5em;margin-bottom:0.5em}ul,ul ul ul ul{list-style:disc}ul ul{list-style:circle}ul ul ul{list-style:disc}ol,ol ol ol ol{list-style:decimal}ol ol{list-style:lower-alpha}ol ol ol{list-style:lower-roman}dl{margin:1em 0}dl dt{margin:1em 0 0;font-weight:bold;color:#212121}dl dd{margin:0 0 1em 1em}.list{list-style:none;margin:1rem 0}.list>li{margin:0;padding:1rem;background-clip:padding-box}.list>li:after{content:'';display:table;clear:both}.list.flush>li{padding-left:0;padding-right:0}.list.rowed>li{border-bottom:1px solid rgba(0,0,0,0.1)}.list.rowed>li:first-child{border-top:1px solid rgba(0,0,0,0.1)}.list.bordered{border:1px solid rgba(0,0,0,0.1)}.list.bordered>li{border-bottom:1px solid rgba(0,0,0,0.1)}.list.bordered>li:last-child{border-bottom:0 none}.list.linked>li{padding:0}.list.linked>li>a{display:block;padding:1rem;background-clip:padding-box;text-decoration:none}.list.linked>li>a:after{content:'';display:table;clear:both}.list.rounded{border-radius:3px}.list.rounded>li:first-child{border-top-left-radius:3px;border-top-right-radius:3px}.list.rounded>li:last-child{border-bottom-left-radius:3px;border-bottom-right-radius:3px}.list.striped>li:nth-of-type(odd){background-color:rgba(0,0,0,0.025)}.list.hover>li{transition:background-color .25s linear}.list.hover>li:hover{background-color:#FFFDE7}table{border-collapse:collapse;border-spacing:0;width:100%;max-width:100%;margin:1rem 0;overflow:auto}table tr{vertical-align:top}table th{color:#212121;font-weight:bold;text-align:left}.table{margin:2em 0;background:none;border-collapse:separate}.table td,.table th{padding:0.5em 0.75em}.table.rowed td,.table-docs td,.table.rowed th,.table-docs th{border-bottom:1px solid rgba(0,0,0,0.1)}.table.rowed thead:first-child tr:first-child td,.table-docs thead:first-child tr:first-child td,.table.rowed thead:first-child tr:first-child th,.table-docs thead:first-child tr:first-child th,.table.rowed tfoot:first-child tr:first-child td,.table-docs tfoot:first-child tr:first-child td,.table.rowed tfoot:first-child tr:first-child th,.table-docs tfoot:first-child tr:first-child th,.table.rowed tbody:first-child tr:first-child td,.table-docs tbody:first-child tr:first-child td,.table.rowed tbody:first-child tr:first-child th,.table-docs tbody:first-child tr:first-child th{border-top:1px solid rgba(0,0,0,0.1)}.table.columned td,.table.columned th{border-right:1px solid rgba(0,0,0,0.1)}.table.columned tr td:first-child,.table.columned tr th:first-child{border-left:1px solid rgba(0,0,0,0.1)}.table.bordered td,.table.bordered th{border-bottom:1px solid rgba(0,0,0,0.1)}.table.bordered thead:first-child tr:first-child td,.table.bordered thead:first-child tr:first-child th,.table.bordered tfoot:first-child tr:first-child td,.table.bordered tfoot:first-child tr:first-child th,.table.bordered tbody:first-child tr:first-child td,.table.bordered tbody:first-child tr:first-child th{border-top:1px solid rgba(0,0,0,0.1)}.table.bordered td,.table.bordered th{border-right:1px solid rgba(0,0,0,0.1)}.table.bordered tr td:first-child,.table.bordered tr th:first-child{border-left:1px solid rgba(0,0,0,0.1)}.table.condensed td,.table.condensed th{padding:0.25em 0.5em}.table.expanded td,.table-docs td,.table.expanded th,.table-docs th{padding:1em 1.25em}.table.rounded{border-radius:3px}.table.rounded thead:first-child tr:first-child td:first-child,.table.rounded thead:first-child tr:first-child th:first-child,.table.rounded tfoot:first-child tr:first-child td:first-child,.table.rounded tfoot:first-child tr:first-child th:first-child,.table.rounded tbody:first-child tr:first-child td:first-child,.table.rounded tbody:first-child tr:first-child th:first-child{border-top-left-radius:3px}.table.rounded thead:first-child tr:first-child td:last-child,.table.rounded thead:first-child tr:first-child th:last-child,.table.rounded tfoot:first-child tr:first-child td:last-child,.table.rounded tfoot:first-child tr:first-child th:last-child,.table.rounded tbody:first-child tr:first-child td:last-child,.table.rounded tbody:first-child tr:first-child th:last-child{border-top-right-radius:3px}.table.rounded thead:last-child tr:last-child td:first-child,.table.rounded thead:last-child tr:last-child th:first-child,.table.rounded tfoot:last-child tr:last-child td:first-child,.table.rounded tfoot:last-child tr:last-child th:first-child,.table.rounded tbody:last-child tr:last-child td:first-child,.table.rounded tbody:last-child tr:last-child th:first-child{border-bottom-left-radius:3px}.table.rounded thead:last-child tr:last-child td:last-child,.table.rounded thead:last-child tr:last-child th:last-child,.table.rounded tfoot:last-child tr:last-child td:last-child,.table.rounded tfoot:last-child tr:last-child th:last-child,.table.rounded tbody:last-child tr:last-child td:last-child,.table.rounded tbody:last-child tr:last-child th:last-child{border-bottom-right-radius:3px}.table.striped tbody tr:nth-of-type(odd) td,.table.striped tbody tr:nth-of-type(odd) th{background-color:rgba(0,0,0,0.05)}.table.striped-horizontal tbody tr:nth-of-type(odd) td,.table.striped-horizontal tbody tr:nth-of-type(odd) th{background-color:rgba(0,0,0,0.05)}.table.striped-vertical tr td:nth-of-type(odd),.table.striped-vertical tr th:nth-of-type(odd){background-color:rgba(0,0,0,0.05)}.table.hover tbody tr td{transition:background-color .25s linear}.table.hover tbody tr:hover td{background-color:#FFFDE7}.table.valign-baseline tr{vertical-align:baseline}.table.valign-top tr{vertical-align:top}.table.valign-middle tr,.table-docs tr{vertical-align:middle}.table.valign-bottom tr{vertical-align:bottom}.table.align-left tr td,.table.align-left tr th{text-align:left}.table.align-center tr td,.table.align-center tr th{text-align:center}.table.align-right tr td,.table.align-right tr th{text-align:right}.table-responsive{margin:2em 0}.table-responsive>table{margin:0}@media (max-width: 759px){.table-responsive{overflow:auto}.table-responsive>table td,.table-responsive>table th{white-space:nowrap}}blockquote{margin:1rem 0;padding:0.5em 1.5em;background:#f5f5f5;border-radius:3px}blockquote footer,blockquote .blockquote-footer{display:block;position:relative;margin:1rem 0;font-size:100%}@media (min-width: 760px){blockquote{padding:1em 2em}}code,pre{background:#f5f5f5;font-family:Menlo,Monaco,Consolas,\"Courier New\",monospace;font-size:1em;line-height:1.5em;border-radius:3px}code{display:inline;margin:0;padding:0;white-space:nowrap;line-height:inherit;color:#F44336;background:none}pre{margin:1.5rem 0;padding:0.75rem;overflow:auto;color:#212121}pre code{display:block;margin:0;padding:0.75rem;overflow:auto;white-space:pre;font-size:100%;color:inherit;background:none;border:0 none}pre.max-height{max-height:400px}img{display:block;margin:1rem 0;max-width:100%;height:auto}img.align-center{display:block;margin-left:auto;margin-right:auto}p img.align-center{margin-top:0;margin-bottom:0}img.align-left{float:left;margin:1rem 1.5rem 1rem 0}p img.align-left{margin-top:0}img.align-right{float:right;margin:1rem 0 1rem 1.5rem}p img.align-right{margin-top:0}img.rounded{border-radius:3px}img.circle{border-radius:50%}img.polaroid{background:#fff;background-clip:padding-box;padding:0.5rem;border:1px solid rgba(0,0,0,0.2);box-shadow:0 1px 3px rgba(0,0,0,0.1)}.video-wrapper{position:relative;display:block;height:0;margin:2em 0;padding-bottom:56.25%;overflow:hidden}.video-wrapper .video-item,.video-wrapper embed,.video-wrapper iframe,.video-wrapper object,.video-wrapper video{position:absolute;top:0;left:0;width:100%;height:100%;border:0 none}.video-wrapper.ratio-16x9{padding-bottom:56.25%}.video-wrapper.ratio-4x3{padding-bottom:75%}.video-wrapper.ratio-3x2{padding-bottom:66.66667%}hr{display:block;height:0;width:100%;clear:both;margin:2rem 0;padding:0;background:none;border:0 none;border-bottom:1px solid rgba(0,0,0,0.1)}hr.dotted{border-bottom:1px dotted rgba(0,0,0,0.25)}hr.dashed{border-bottom:1px dashed rgba(0,0,0,0.25)}hr.double{border-bottom:3px double rgba(0,0,0,0.1)}form{margin:2.25rem 0;font-size:1em;line-height:1.5em}fieldset{margin:1.5rem 0;padding:0;border:0 none}legend{display:inline-block;margin:-.75rem .75rem;padding:0 .75rem;font-size:1.375em;line-height:1.5em;font-weight:bold;color:#212121;border:0 none}form .row{margin-bottom:.75rem}form .row:last-child{margin-bottom:0}form .col{margin-bottom:.75rem}form .col:last-child{margin-bottom:0}@media (min-width: 760px){form .col{margin-bottom:0}}.form-group{margin-bottom:1.5rem}.form-group:last-child{margin-bottom:0}.form-group.inline{margin-right:-0.75rem;margin-bottom:.75rem}.form-group.inline:after{content:'';display:table;clear:both}.form-group.inline:last-child{margin-bottom:-.75rem}.form-group.inline>*{float:left;width:auto;margin-right:0.75rem;margin-bottom:.75rem}.form-group.inline>*.float-right{float:right}.form-group.inline .form-group,.form-group.inline .input-group{display:inline-block;vertical-align:top;margin:0 .75rem 0 0}.form-group.inline .form-group:last-child,.form-group.inline .input-group:last-child{margin-right:0}.form-header{margin-bottom:1.5rem;color:#9E9E9E}.form-header:last-child{margin-bottom:0}.form-header h1,.form-header h2,.form-header h3,.form-header h4,.form-header h5,.form-header h6{margin:.5rem 0;font-size:1.4em;line-height:1.2em}.form-header p{margin:.5rem 0;color:#9E9E9E}.form-action{margin-bottom:1.5rem}.form-action:last-child{margin-bottom:0}.form-action:after{content:'';display:table;clear:both}.form-action .button,.form-action .input-align{float:left;margin:0 .75rem 0 0}.form-action .button:last-child,.form-action .input-align:last-child{margin-right:0}.form-action .button.float-right,.form-action .input-align.float-right{float:right}.form-action .input-align{margin-top:0.75rem;border-top:1px solid rgba(0,0,0,0.2);border-color:transparent}.form-action.form-action-center{text-align:center}.form-action.form-action-center .button,.form-action.form-action-center .input-align{display:inline-block;float:none}.input-group{margin-bottom:1.5rem}.input-group:last-child{margin-bottom:0}.input-group.inline{margin-right:-0.75rem;margin-bottom:.75rem}.input-group.inline:after{content:'';display:table;clear:both}.input-group.inline:last-child{margin-bottom:-.75rem}.input-group.inline>*{float:left;width:auto;margin-right:0.75rem;margin-bottom:.75rem}.input-group.inline>*.float-right{float:right}label{display:inline-block;margin:0 0 .5rem 0;font-size:1em;line-height:1.5em;font-weight:600;color:#212121}label:last-child{margin-bottom:0}label.sub{font-weight:normal}label.hide{position:absolute;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0, 0, 0, 0);border:0}label.block{display:block;padding-top:0.75rem;border-top:1px solid rgba(0,0,0,0.2);border-color:transparent}label.inline{display:inline-block;padding-top:0.75rem;border-top:1px solid rgba(0,0,0,0.2);border-color:transparent}.inline label.block,.inline label.inline{padding-bottom:0.75rem;border-top:1px solid rgba(0,0,0,0.2);border-color:transparent}.input,.checkbox,.radio,.choice{position:relative;display:block;width:100%;margin:0 0 .75rem 0}.input:last-child,.checkbox:last-child,.radio:last-child,.choice:last-child{margin-bottom:0}.input{padding:.75em;font-family:inherit;font-size:1em;line-height:1.5em;color:#424242;background-color:rgba(255,255,255,0.5);border:1px solid rgba(0,0,0,0.2);box-shadow:0 1px 3px transparent,inset 0 1px 3px rgba(0,0,0,0.05);box-sizing:border-box;border-radius:3px;transition:border-color .25s,background-color .25s,box-shadow .25s}.input::-webkit-input-placeholder{color:#aaa}.input::-moz-placeholder{color:#aaa}.input:-moz-placeholder{color:#aaa}.input:-ms-input-placeholder{color:#aaa}.input::placeholder{color:#aaa}.input:focus{outline:none;background-color:#fff;border:1px solid #2196f3;box-shadow:0 1px 3px rgba(0,0,0,0.05),inset 0 1px 3px transparent}.input.disabled,.input[readonly],.input[disabled]{opacity:0.5;background:rgba(0,0,0,0.05)}.checkbox,.radio,.choice{cursor:pointer;color:#424242;font-weight:normal}.checkbox.disabled,.radio.disabled,.choice.disabled{opacity:0.5}.choice{padding:0.75em 0.75em 0.75em 2.25em;background:rgba(0,0,0,0.05);border:1px solid transparent;box-shadow:none;border-radius:3px}.choice input[type=\"checkbox\"],.choice input[type=\"radio\"]{position:absolute;top:auto;margin:5px 0 0 -20px}input[type=\"checkbox\"],input[type=\"radio\"]{position:relative;top:-1px;margin:0 5px 0 0}input[type=\"file\"],input[type=\"range\"]{display:block;margin:0 0 .75rem 0}input[type=\"range\"]{width:100%}input[type=\"search\"]{-webkit-appearance:none}input[type=\"color\"].input{width:3.125rem;height:3.125rem;padding:.25em}textarea.input{height:auto;max-width:100%}select.input{-webkit-appearance:none;-moz-appearance:none;background-image:url(\"data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='20' height='4'><polygon fill='#212121' points='0,0 3,4 3,4 6,0 '/></svg>\");background-position:100% center;background-repeat:no-repeat;padding-right:30px}select[multiple].input,select[size].input{height:auto;padding:.75em;background-image:none}.note{margin-bottom:.75rem;font-size:1em;color:#9E9E9E}.note:last-child{margin-bottom:0}.note p{margin:0 0 .75rem 0}.note p:last-child{margin-bottom:0}label+.note{margin-top:0}.form-group+.note,.input-group+.note{margin-top:-.75rem}.req{color:#F44336}label.inline,.button.inline,.input.inline,.checkbox.inline,.radio.inline,.choice.inline,.inline label,.inline .button,.inline .input,.inline .checkbox,.inline .radio,.inline .choice{float:left;width:auto;margin-right:0.75rem;margin-bottom:.75rem}label.inline.float-right,.button.inline.float-right,.input.inline.float-right,.checkbox.inline.float-right,.radio.inline.float-right,.choice.inline.float-right,.inline label.float-right,.inline .button.float-right,.inline .input.float-right,.inline .checkbox.float-right,.inline .radio.float-right,.inline .choice.float-right{float:right}.disabled input[type=\"file\"],.disabled input[type=\"range\"],.disabled input[type=\"checkbox\"],.disabled input[type=\"radio\"],.disabled .input,.disabled .checkbox,.disabled .radio,.disabled .choice,fieldset[disabled] input[type=\"file\"],fieldset[disabled] input[type=\"range\"],fieldset[disabled] input[type=\"checkbox\"],fieldset[disabled] input[type=\"radio\"],fieldset[disabled] .input,fieldset[disabled] .checkbox,fieldset[disabled] .radio,fieldset[disabled] .choice{opacity:0.5}.disabled .input,fieldset[disabled] .input{background:rgba(0,0,0,0.05)}.input.success{border-color:#4CAF50}.checkbox.success,.radio.success,.note.success{color:#1B5E20}.choice.success{background-color:#E8F5E9}.success .input{border-color:#4CAF50}.success .checkbox,.success .radio,.success .note{color:#1B5E20}.success .choice{background-color:#E8F5E9}.input.warning{border-color:#FBC02D}.checkbox.warning,.radio.warning,.note.warning{color:#FBC02D}.choice.warning{background-color:#FFF9C4}.warning .input{border-color:#FBC02D}.warning .checkbox,.warning .radio,.warning .note{color:#FBC02D}.warning .choice{background-color:#FFF9C4}.input.error{border-color:#F44336}.checkbox.error,.radio.error,.note.error{color:#B71C1C}.choice.error{background-color:#FFEBEE}.error .input{border-color:#F44336}.error .checkbox,.error .radio,.error .note{color:#B71C1C}.error .choice{background-color:#FFEBEE}.input.active{border-color:#2196F3}.checkbox.active,.radio.active,.note.active{color:#0D47A1}.choice.active{background-color:#E3F2FD}.active .input{border-color:#2196F3}.active .checkbox,.active .radio,.active .note{color:#0D47A1}.active .choice{background-color:#E3F2FD}.button{cursor:pointer;display:inline-block;margin:0;padding:.75rem 1.5rem;vertical-align:top;font-family:inherit;font-size:1em;line-height:1.5rem;font-weight:inherit;text-decoration:none;background:#f5f5f5;background-clip:border-box;border:1px solid transparent;border-radius:3px;transition-property:all;transition-duration:0.75s;transition-timing-function:linear;transition-duration:0.75s;color:#424242;background:#f5f5f5;transition-duration:0.75s;transition-duration:0.75s}.button:hover{color:#424242;background:#e8e8e8;border-color:transparent;transition-duration:.1s;transition-duration:.1s}.button:focus{background:#e8e8e8;transition-duration:.1s;transition-duration:.1s}.button:active{transition-duration:0;transition-duration:0}.button.primary,.button.blue{color:#fff;background:#2196F3}.button.primary:hover,.button.blue:hover{color:#fff;background:#1976D2}.button.secondary,.button.gray{color:#fff;background:#9E9E9E}.button.secondary:hover,.button.gray:hover{color:#fff;background:#616161}.button.success,.button.green{color:#fff;background:#4CAF50}.button.success:hover,.button.green:hover{color:#fff;background:#388E3C}.button.warning,.button.yellow{color:#424242;background:#FFEB3B}.button.warning:hover,.button.yellow:hover{color:#424242;background:#FDD835}.button.danger,.button.red{color:#fff;background:#F44336}.button.danger:hover,.button.red:hover{color:#fff;background:#D32F2F}.button.light{color:#424242;background:rgba(255,255,255,0.75)}.button.light:hover{color:#424242;background:#fff}.button.dark{color:#fff;background:rgba(0,0,0,0.5)}.button.dark:hover{color:#fff;background:rgba(0,0,0,0.75)}.button.small{padding:.375rem .875rem;font-size:.875em;line-height:1.25rem}.button.large{padding:1rem 2rem;font-size:1.25em;line-height:1.625rem}.button.block{display:block;width:100%}.svg-symbols{border:0 !important;clip:rect(0 0 0 0) !important;height:1px !important;margin:-1px !important;overflow:hidden !important;padding:0 !important;position:absolute !important;width:1px !important}.icon{display:inline-block;width:1em;height:1em;margin-top:-0.3em;margin-bottom:-0.1em;font-size:1.5rem;stroke:currentColor;stroke-width:2px;stroke-linecap:round;stroke-linejoin:round;fill:none}.button .icon{font-size:1.5rem;line-height:1em;vertical-align:middle}.button.small .icon{font-size:1.125rem}.button.large .icon{font-size:1.875rem;margin-top:-.2em}.button-icon{padding:.75rem}.button-icon.small{padding:.375rem}.button-icon.large{padding:1rem}.button-icon-left .icon{margin-right:.25em;margin-left:-.25em}.button-icon-left.small .icon{margin-left:-.125em}.button-icon-left.large .icon{margin-left:-.35em}.button-icon-right .icon{margin-left:.25em;margin-right:-.25em}.button-icon-right.small .icon{margin-right:-.125em}.button-icon-right.large .icon{margin-right:-.35em}.chip{cursor:pointer;display:inline-flex;justify-content:center;align-items:center;margin:0;padding:0.25em;font-size:1rem;border:none;border-radius:50%;transition:all .25s linear;color:#fff;background:rgba(0,0,0,0.25)}.chip:hover{color:#fff;background:rgba(0,0,0,0.5)}.chip .icon{margin:0;font-size:1em}.chip.light{color:#424242;background:rgba(255,255,255,0.5)}.chip.light:hover{color:#424242;background:#fff}.chip.red,.chip.danger{background:#F44336}.chip.red:hover,.chip.danger:hover{background:#D32F2F}.chip.yellow,.chip.warning{background:#FF9800}.chip.yellow:hover,.chip.warning:hover{background:#F57C00}.chip.green,.chip.success{background:#4CAF50}.chip.green:hover,.chip.success:hover{background:#388E3C}.badge{display:inline-flex;justify-content:center;align-items:center;padding:0.25rem 0.5rem;font-size:0.9em;line-height:1.4em;border:none;border-radius:3px;transition:all .25s linear;color:#424242;background:rgba(0,0,0,0.05)}.badge.dot{font-size:0;line-height:0;text-indent:100%;white-space:nowrap;overflow:hidden}a.badge:hover,button.badge:hover{cursor:pointer;color:#424242;background:rgba(0,0,0,0.15)}.badge.inverted{color:#fff;background:#9E9E9E}.badge.active{color:#fff;background:#2196F3}.badge.blue{color:#2196F3;background:#E3F2FD}.badge.blue.inverted{color:#fff;background:#2196F3}.badge.green{color:#4CAF50;background:#E8F5E9}.badge.green.inverted{color:#fff;background:#4CAF50}.badge.yellow{color:#424242;background:#FFF9C4}.badge.yellow.inverted,.meta .badge.version{color:#424242;background:#FFEB3B}.badge.orange{color:#F57C00;background:#FFF3E0}.badge.orange.inverted{color:#fff;background:#FF9800}.badge.red{color:#F44336;background:#FFEBEE}.badge.red.inverted{color:#fff;background:#F44336}.badge.purple{color:#9C27B0;background:#F3E5F5}.badge.purple.inverted{color:#fff;background:#9C27B0}.badge.light{color:#424242;background:rgba(255,255,255,0.75)}.badge.dark{color:#fff;background:rgba(0,0,0,0.5)}.badge.square{border-radius:0}.badge.pill{padding:0.25rem 0.75rem;border-radius:3rem}.badge.dot{display:inline-block;width:8px;height:8px;padding:0;vertical-align:top;border-radius:50%}.badge .chip{margin:0 -0.25em 0 0.5em;padding:0.125em}.badge.pill .chip{margin:0 -0.5rem 0 0.5rem}a.badge.inverted:hover,button.badge.inverted:hover{color:#fff;background:#616161}a.badge.active:hover,button.badge.active:hover{color:#fff;background:#1976D2}a.badge.blue:hover,button.badge.blue:hover{color:#2196F3;background:#BBDEFB}a.badge.blue.inverted:hover,button.badge.blue.inverted:hover{color:#fff;background:#1976D2}a.badge.green:hover,button.badge.green:hover{color:#388E3C;background:#C8E6C9}a.badge.green.inverted:hover,button.badge.green.inverted:hover{color:#fff;background:#388E3C}a.badge.yellow:hover,button.badge.yellow:hover{color:#424242;background:#FFF176}a.badge.yellow.inverted:hover,.meta a.badge.version:hover,button.badge.yellow.inverted:hover,.meta button.badge.version:hover{color:#424242;background:#FDD835}a.badge.orange:hover,button.badge.orange:hover{color:#F57C00;background:#FFE0B2}a.badge.orange.inverted:hover,button.badge.orange.inverted:hover{color:#fff;background:#F57C00}a.badge.red:hover,button.badge.red:hover{color:#D32F2F;background:#FFCDD2}a.badge.red.inverted:hover,button.badge.red.inverted:hover{color:#fff;background:#D32F2F}a.badge.purple:hover,button.badge.purple:hover{color:#7B1FA2;background:#E1BEE7}a.badge.purple.inverted:hover,button.badge.purple.inverted:hover{color:#fff;background:#7B1FA2}a.badge.light:hover,button.badge.light:hover{color:#424242;background:#fff}a.badge.dark:hover,button.badge.dark:hover{color:#fff;background:rgba(0,0,0,0.75)}.button .badge:not(.dot){display:inline;padding:0.25em 0.5em}.button-icon{position:relative}.button-icon .badge.dot{position:absolute;top:8px;right:8px}.button-icon.small .badge.dot{width:6px;height:6px;top:4px;right:4px}.button-icon.large .badge.dot{width:10px;height:10px;top:10px;right:10px}.button-badge-left .badge{margin-left:-.5em;margin-right:.5em}.button-badge-right .badge{margin-left:.5em;margin-right:-.5em}.breadcrumb{display:block;margin:1em 0;font-size:1em}.breadcrumb .current{color:#9E9E9E}.breadcrumb ul,.breadcrumb ol{margin:0;list-style:none}.breadcrumb ul:after,.breadcrumb ol:after{content:'';display:table;clear:both}.breadcrumb li{float:left;margin:0}.breadcrumb li:after{padding:0 0.75em;content:\"/\";color:#BDBDBD}.breadcrumb li:last-child:after{content:none}.button-group{display:inline-flex;flex-flow:row}.button-group>.button{border-radius:0}.button-group>.button+.button{margin-top:0;margin-left:0.25em}.button-group>.button:first-child{border-radius:3px 0 0 3px}.button-group>.button:last-child{border-radius:0 3px 3px 0}.button-group>.button{position:relative;z-index:1;flex:1 1 auto;margin:0}.button-group>.button:hover{z-index:2}.button-group>.button:focus{z-index:3}.button-group>.button:active{z-index:4}.button-group>.button.active{z-index:5}.button-group>.button.static{flex-grow:0}.button-group.inline{display:inline-flex}.button-group.block{display:flex}.button-group.hori,.button-group.horizontal{flex-flow:row}.button-group.hori>.button,.button-group.horizontal>.button{border-radius:0}.button-group.hori>.button+.button,.button-group.horizontal>.button+.button{margin-top:0;margin-left:0.25em}.button-group.hori>.button:first-child,.button-group.horizontal>.button:first-child{border-radius:3px 0 0 3px}.button-group.hori>.button:last-child,.button-group.horizontal>.button:last-child{border-radius:0 3px 3px 0}.button-group.vert,.button-group.vertical{flex-flow:column}.button-group.vert>.button,.button-group.vertical>.button{border-radius:0}.button-group.vert>.button+.button,.button-group.vertical>.button+.button{margin-top:0.25em;margin-left:0}.button-group.vert>.button:first-child,.button-group.vertical>.button:first-child{border-radius:3px 3px 0 0}.button-group.vert>.button:last-child,.button-group.vertical>.button:last-child{border-radius:0 0 3px 3px}.dropdown,.dropdown-content,.dropdown-menu{position:relative;display:block;width:16rem;margin:0;font-size:.875rem;line-height:1.35em;background:#fff;background-clip:padding-box;border:1px solid rgba(0,0,0,0.1);box-shadow:0 2px 6px rgba(0,0,0,0.15);border-radius:3px}.dropdown{padding:0}.dropdown>.dropdown-content,.dropdown>.dropdown-menu{width:auto;margin:0;background:none;border:none;border-top:1px solid rgba(0,0,0,0.1);box-shadow:none;border-radius:0}.dropdown>.dropdown-content:first-child,.dropdown>.dropdown-menu:first-child{border-top:none;border-top-left-radius:3px;border-top-right-radius:3px}.dropdown>.dropdown-content:last-child,.dropdown>.dropdown-menu:last-child{border-bottom-left-radius:3px;border-bottom-right-radius:3px}.dropdown-content{padding:1em}.dropdown-content>*{margin-top:0.5em;margin-bottom:0.5em}.dropdown-content>:first-child{margin-top:0}.dropdown-content>:last-child{margin-bottom:0}.dropdown-content>hr{margin:1em 0}.dropdown-content>a.block{display:block;margin:-0.5em;padding:1em;color:#424242;text-decoration:none;border:none;border-radius:3px}.dropdown-content>a.block:hover{background:rgba(0,0,0,0.05);color:#424242}.dropdown-content>a.block>*{margin-top:0.5em;margin-bottom:0.5em}.dropdown-content>a.block>:first-child{margin-top:0}.dropdown-content>a.block>:last-child{margin-bottom:0}.dropdown-content>.button{display:block}.dropdown-menu{list-style:none;padding:0.5em}.dropdown-menu li{position:relative;margin:0;border-bottom:1px solid rgba(0,0,0,0.1)}.dropdown-menu li:hover{background:rgba(0,0,0,0.05);background-clip:padding-box}.dropdown-menu li:hover>a{color:#424242}.dropdown-menu li.active>a{color:#9E9E9E}.dropdown-menu li.active:hover{background:none}.dropdown-menu li:first-child{border-top-left-radius:3px;border-top-right-radius:3px}.dropdown-menu li:last-child{border-bottom:none;border-bottom-left-radius:3px;border-bottom-right-radius:3px}.dropdown-menu a{display:block;padding:0.75em 1em;color:#424242;border:none;text-decoration:none}.dropdown-trigger{position:relative}.dropdown-trigger .dropdown{position:absolute;z-index:100;display:none}.dropdown-trigger:not(.on-click):not(.on-hover):hover>.dropdown,.dropdown-trigger.active>.dropdown{display:block}.dropdown-trigger:hover>.dropdown{z-index:105}.dropdown-trigger .dropdown{margin:-1px 0 0 0;top:100%;left:0;right:auto;bottom:auto}.dropdown-menu{position:relative}.dropdown-menu .dropdown-menu{position:absolute;z-index:100;display:none}.dropdown-menu>li:hover>.dropdown-menu,.dropdown-menu.active>li>.dropdown-menu{display:block}.dropdown-menu:hover>.dropdown{z-index:105}.dropdown-menu .dropdown-menu{margin:-1px 0 0 -1px;top:-0.5em;left:100%;right:auto;bottom:auto}.anchor-bottom-left .dropdown{margin:-1px 0 0 0;top:100%;left:0;right:auto;bottom:auto}.anchor-bottom-right .dropdown{margin:-1px 0 0 0;top:100%;left:auto;right:0;bottom:auto}.anchor-bottom-center .dropdown{margin:-1px 0 0 0;top:100%;left:50%;right:auto;bottom:auto;transform:translate3d(-50%, 0, 0)}.anchor-top-left .dropdown{margin:0 0 -1px 0;top:auto;left:0;right:auto;bottom:100%}.anchor-top-right .dropdown{margin:0 0 -1px 0;top:auto;left:auto;right:0;bottom:100%}.anchor-top-center .dropdown{margin:0 0 -1px 0;top:auto;left:50%;right:auto;bottom:100%;transform:translate3d(-50%, 0, 0)}.anchor-left-top .dropdown{margin:0 -1px 0 0;top:0;left:auto;right:100%;bottom:auto}.anchor-left-bottom .dropdown{margin:0 -1px 0 0;top:auto;left:auto;right:100%;bottom:0}.anchor-left-center .dropdown{margin:0 -1px 0 0;top:50%;left:auto;right:100%;bottom:auto;transform:translate3d(0, -50%, 0)}.anchor-right-top .dropdown{margin:0 0 0 -1px;top:0;left:100%;right:auto;bottom:auto}.anchor-right-bottom .dropdown{margin:0 0 0 -1px;top:auto;left:100%;right:auto;bottom:0}.anchor-right-center .dropdown{margin:0 0 0 -1px;top:50%;left:100%;right:auto;bottom:auto;transform:translate3d(0, -50%, 0)}.notice{margin:2em 0;padding:0.25em 1.25em;font-size:1em;line-height:1.5em;box-shadow:0 1px 3px rgba(0,0,0,0.1);border:1px solid rgba(0,0,0,0.15);border-radius:3px;color:#424242;background:#f5f5f5}.notice.inverted{color:#fff;background:#424242}.notice.info{background:#E3F2FD}.notice.info.inverted{color:#fff;background:#2196F3}.notice.success{background:#E8F5E9}.notice.success.inverted{color:#fff;background:#4CAF50}.notice.warning{background:#FFF9C4}.notice.warning.inverted{color:#424242;background:#FFEB3B}.notice.danger{background:#FFEBEE}.notice.danger.inverted{color:#fff;background:#F44336}.notice .chip{float:right;margin:1em 0 1em 1em;padding:0.25em;font-size:1em}.notice.inverted .chip{color:#424242;background:rgba(255,255,255,0.5)}.notice.inverted .chip:hover{color:#424242;background:#fff}.notice.warning.inverted .chip{color:#fff;background:rgba(0,0,0,0.25)}.notice.warning.inverted .chip:hover{color:#fff;background:rgba(0,0,0,0.5)}.oc-wrap{height:100%;overflow-y:scroll;-webkit-overflow-scrolling:touch;transition:top linear 0.2s, bottom linear 0.2s}.oc-content,.oc-inner,.oc-aside{height:100%}.oc-wrap{position:relative;overflow:hidden}.oc-content{position:relative;left:0;z-index:5;transition:transform 0.5s;background:#f5f5f5}.oc-inner{position:relative;overflow-y:auto}.oc-aside{position:fixed;top:0;z-index:10;visibility:hidden;width:280px;overflow-y:auto;transition:all 0.5s;background:#fff}.oc-content:after{position:absolute;top:0;right:0;width:0;height:0;background:rgba(0,0,0,0.2);content:'';opacity:0;transition:opacity 0.5s,width 0.1s 0.5s,height 0.1s 0.5s}.oc-active>.oc-content:after{width:100%;height:100%;opacity:1;transition:opacity 0.5s}.oc-aside:after{position:absolute;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.2);content:'';opacity:1;transition:opacity 0.5s}.oc-active>.oc-aside:after{width:0;height:0;opacity:0;transition:opacity 0.5s,width 0.1s 0.5s,height 0.1s 0.5s}.oc-aside-nav-mobile.oc-aside{right:0;visibility:visible;transform:translate3d(100%, 0, 0)}.oc-aside-nav-mobile.oc-active .oc-aside-nav-mobile.oc-aside{visibility:visible;transform:translate3d(0, 0, 0)}.oc-aside-nav-mobile.oc-aside:after{display:none}.tabs{position:relative;margin:2em 0}.tabs .tabs-nav,.tabs .tabs-content{margin:0}.tabs .tabs-nav{z-index:10}.tabs .tabs-content{z-index:5}.tabs-nav{margin:2em 0;text-align:center}.tabs-nav ul{display:flex;list-style:none;margin:0}.tabs-nav ul li{flex:1 0 auto;margin:0}.tabs-nav a{display:block;padding:1em;border:none;text-decoration:none}.tabs-nav.inline ul{flex-wrap:wrap}.tabs-nav.inline ul li{flex:0 0 auto}.tabs-nav.inline ul li a{padding:1em 2em}.tabs-content{margin:2em 0}.tabs-content .tabs-panel{display:none}.tabs-content .tabs-panel.active{display:block}.style-fold .tabs-nav ul,.tabs-nav.style-fold ul{background:#f5f5f5;border:1px solid #E0E0E0;border-radius:3px}.style-fold .tabs-nav ul li,.tabs-nav.style-fold ul li{border-right:1px solid #E0E0E0}.style-fold .tabs-nav ul li:first-child,.tabs-nav.style-fold ul li:first-child{border-top-left-radius:3px;border-bottom-left-radius:3px}.style-fold .tabs-nav ul li:last-child,.tabs-nav.style-fold ul li:last-child{border-right:none;border-top-right-radius:3px;border-bottom-right-radius:3px}.style-fold .tabs-nav a,.tabs-nav.style-fold a{color:#424242}.style-fold .tabs-nav a:hover,.tabs-nav.style-fold a:hover{background:#eee;color:#424242}.style-fold .tabs-nav ul li.active,.tabs-nav.style-fold ul li.active{background:#fff}.style-fold .tabs-nav .active a,.tabs-nav.style-fold .active a{color:#424242}.style-fold .tabs-nav .active a:hover,.tabs-nav.style-fold .active a:hover{background:#fff}.style-fold .tabs-nav.inline ul li:last-child,.tabs-nav.style-fold.inline ul li:last-child{border-right:1px solid #E0E0E0}.style-fold .tabs-nav ul{border-bottom-left-radius:0;border-bottom-right-radius:0}.style-fold .tabs-nav ul li{border-bottom:1px solid transparent;margin-bottom:-1px}.style-fold .tabs-nav ul li:first-child{border-bottom-left-radius:0}.style-fold .tabs-nav ul li:last-child{border-bottom-right-radius:0}.style-fold .tabs-nav ul li.active{border-bottom:1px solid #fff}.style-fold .tabs-content{padding:1em 2em;border:1px solid #E0E0E0;border-top:none;border-bottom-left-radius:3px;border-bottom-right-radius:3px}.style-line .tabs-nav ul,.tabs-nav.style-line ul{border-bottom:1px solid #E0E0E0}.style-line .tabs-nav ul li,.tabs-nav.style-line ul li{border-bottom:3px solid transparent;margin-bottom:-1px}.style-line .tabs-nav a,.tabs-nav.style-line a{color:#9E9E9E}.style-line .tabs-nav a:hover,.tabs-nav.style-line a:hover{color:#2196F3;text-decoration:none}.style-line .tabs-nav ul li.active,.tabs-nav.style-line ul li.active{border-bottom:3px solid #2196F3}.style-line .tabs-nav .active a,.tabs-nav.style-line .active a{color:#424242}.style-line .tabs-nav .active a:hover,.tabs-nav.style-line .active a:hover{color:#2196F3}.style-line .tabs-content{padding:1em 2em;border:1px solid #E0E0E0;border-top:none}.tooltip{position:relative}.tooltip:after{content:attr(data-tooltip);pointer-events:none;position:absolute;z-index:100;display:block;max-width:30em;padding:0.5em 1em;background:rgba(66,66,66,0.9);border-radius:3px;font-size:.75rem;line-height:1.5em;color:#fff;opacity:0;transition:opacity 0.2s,transform 0.2s;overflow:hidden;white-space:nowrap;text-overflow:ellipsis}.tooltip:after{top:auto;left:50%;right:auto;bottom:100%;transform:translate(-50%, 0)}.tooltip:hover:after,.tooltip:focus:after{opacity:1;transform:translate(-50%, -0.5em)}.tooltip-top:after{top:auto;left:50%;right:auto;bottom:100%;transform:translate(-50%, 0)}.tooltip-top:hover:after,.tooltip-top:focus:after{opacity:1;transform:translate(-50%, -0.5em)}.tooltip-top-left:after{top:auto;left:0;right:auto;bottom:100%;transform:translate(0, 0)}.tooltip-top-left:hover:after,.tooltip-top-left:focus:after{opacity:1;transform:translate(0, -0.5em)}.tooltip-top-right:after{top:auto;left:auto;right:0;bottom:100%;transform:translate(0, 0)}.tooltip-top-right:hover:after,.tooltip-top-right:focus:after{opacity:1;transform:translate(0, -0.5em)}.tooltip-left:after{top:50%;left:auto;right:100%;bottom:auto;transform:translate(0, -50%)}.tooltip-left:hover:after,.tooltip-left:focus:after{transform:translate(-0.5em, -50%)}.tooltip-left-top:after{top:0;left:auto;right:100%;bottom:auto;transform:translate(0, 0)}.tooltip-left-top:hover:after,.tooltip-left-top:focus:after{transform:translate(-0.5em, 0)}.tooltip-left-bottom:after{top:auto;left:auto;right:100%;bottom:0;transform:translate(0, 0)}.tooltip-left-bottom:hover:after,.tooltip-left-bottom:focus:after{transform:translate(-0.5em, 0)}.tooltip-right:after{top:auto;left:100%;right:auto;bottom:50%;transform:translate(0, 50%)}.tooltip-right:hover:after,.tooltip-right:focus:after{transform:translate(0.5em, 50%)}.tooltip-right-top:after{top:0;left:100%;right:auto;bottom:auto;transform:translate(0, 0)}.tooltip-right-top:hover:after,.tooltip-right-top:focus:after{transform:translate(0.5em, 0)}.tooltip-right-bottom:after{top:auto;left:100%;right:auto;bottom:0;transform:translate(0, 0)}.tooltip-right-bottom:hover:after,.tooltip-right-bottom:focus:after{transform:translate(0.5em, 0)}.tooltip-bottom:after{top:100%;left:auto;right:50%;bottom:auto;transform:translate(50%, 0)}.tooltip-bottom:hover:after,.tooltip-bottom:focus:after{opacity:1;transform:translate(50%, 0.5em)}.tooltip-bottom-left:after{top:100%;left:0;right:auto;bottom:auto;transform:translate(0, 0)}.tooltip-bottom-left:hover:after,.tooltip-bottom-left:focus:after{opacity:1;transform:translate(0, 0.5em)}.tooltip-bottom-right:after{top:100%;left:auto;right:0;bottom:auto;transform:translate(0, 0)}.tooltip-bottom-right:hover:after,.tooltip-bottom-right:focus:after{opacity:1;transform:translate(0, 0.5em)}ul.list-ascii{font-family:Menlo,Monaco,Consolas,\"Courier New\",monospace;font-size:1em;white-space:nowrap}ul.list-ascii,ul.list-ascii ul{margin:0;padding:0;list-style:none}ul.list-ascii li,ul.list-ascii ul li{margin:0;padding:0}ul.list-ascii strong{color:#2196F3;cursor:pointer}ul.list-ascii strong:before{content:\"↓\";font-family:-apple-system,system-ui,BlinkMacSystemFont,\"Segoe UI\",\"Roboto\",\"Helvetica Neue\",Arial,sans-serif;margin-right:10px}ul.list-ascii strong:hover{color:#1976D2}ul.list-ascii ul{overflow:hidden;max-height:1000px;transition:max-height 0.25s ease-in}ul.list-ascii .hide-children>strong:after{content:\"...\"}ul.list-ascii .hide-children>strong:before{content:\"→\"}ul.list-ascii .hide-children>ul{max-height:0;transition:max-height 0.15s ease-out}ul.list-ascii>li::before{content:\"\"}ul.list-ascii>li>ul>li::before{content:\"├──\\00a0\"}ul.list-ascii>li>ul>li:last-child::before{content:\"└──\\00a0\"}ul.list-ascii>li>ul>li>ul>li::before{content:\"│\\00a0\\00a0\\00a0├──\\00a0\"}ul.list-ascii>li>ul>li>ul>li:last-child::before{content:\"│\\00a0\\00a0\\00a0└──\\00a0\"}ul.list-ascii>li>ul>li:last-child>ul>li::before{content:\"\\00a0\\00a0\\00a0\\00a0├──\\00a0\"}ul.list-ascii>li>ul>li:last-child>ul>li:last-child::before{content:\"\\00a0\\00a0\\00a0\\00a0└──\\00a0\"}ul.list-ascii>li>ul>li>ul>li>ul>li::before{content:\"│\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0├──\\00a0\"}ul.list-ascii>li>ul>li>ul>li>ul>li:last-child::before{content:\"│\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0└──\\00a0\"}ul.list-ascii>li>ul>li>ul>li:last-child>ul>li::before{content:\"│\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0├──\\00a0\"}ul.list-ascii>li>ul>li>ul>li:last-child>ul>li:last-child::before{content:\"│\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0└──\\00a0\"}ul.list-ascii>li>ul>li:last-child>ul>li>ul>li::before{content:\"\\00a0\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0├──\\00a0\"}ul.list-ascii>li>ul>li:last-child>ul>li>ul>li:last-child::before{content:\"\\00a0\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0└──\\00a0\"}ul.list-ascii>li>ul>li:last-child>ul>li:last-child>ul>li::before{content:\"\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0├──\\00a0\"}ul.list-ascii>li>ul>li:last-child>ul>li:last-child>ul>li:last-child::before{content:\"\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0└──\\00a0\"}ul.list-ascii>li>ul>li>ul>li>ul>li>ul>li::before{content:\"│\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0├──\\00a0\"}ul.list-ascii>li>ul>li>ul>li>ul>li>ul>li:last-child::before{content:\"│\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0└──\\00a0\"}ul.list-ascii>li>ul>li>ul>li>ul>li:last-child>ul>li::before{content:\"│\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0├──\\00a0\"}ul.list-ascii>li>ul>li>ul>li>ul>li:last-child>ul>li:last-child::before{content:\"│\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0└──\\00a0\"}ul.list-ascii>li>ul>li>ul>li:last-child>ul>li>ul>li::before{content:\"│\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0├──\\00a0\"}ul.list-ascii>li>ul>li>ul>li:last-child>ul>li>ul>li:last-child::before{content:\"│\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0└──\\00a0\"}ul.list-ascii>li>ul>li>ul>li:last-child>ul>li:last-child>ul>li::before{content:\"│\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0├──\\00a0\"}ul.list-ascii>li>ul>li>ul>li:last-child>ul>li:last-child>ul>li:last-child::before{content:\"│\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0└──\\00a0\"}ul.list-ascii>li>ul>li:last-child>ul>li>ul>li>ul>li::before{content:\"\\00a0\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0├──\\00a0\"}ul.list-ascii>li>ul>li:last-child>ul>li>ul>li>ul>li:last-child::before{content:\"\\00a0\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0└──\\00a0\"}ul.list-ascii>li>ul>li:last-child>ul>li>ul>li:last-child>ul>li::before{content:\"\\00a0\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0├──\\00a0\"}ul.list-ascii>li>ul>li:last-child>ul>li>ul>li:last-child>ul>li:last-child::before{content:\"\\00a0\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0└──\\00a0\"}ul.list-ascii>li>ul>li:last-child>ul>li:last-child>ul>li>ul>li::before{content:\"\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0├──\\00a0\"}ul.list-ascii>li>ul>li:last-child>ul>li:last-child>ul>li>ul>li:last-child::before{content:\"\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0└──\\00a0\"}ul.list-ascii>li>ul>li:last-child>ul>li:last-child>ul>li:last-child>ul>li::before{content:\"\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0├──\\00a0\"}ul.list-ascii>li>ul>li:last-child>ul>li:last-child>ul>li:last-child>ul>li:last-child::before{content:\"\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0└──\\00a0\"}ul.list-ascii>li>ul>li>ul>li>ul>li>ul>li>ul>li::before{content:\"│\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0├──\\00a0\"}ul.list-ascii>li>ul>li>ul>li>ul>li>ul>li>ul>li:last-child::before{content:\"│\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0└──\\00a0\"}ul.list-ascii>li>ul>li>ul>li>ul>li>ul>li:last-child>ul>li::before{content:\"│\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0├──\\00a0\"}ul.list-ascii>li>ul>li>ul>li>ul>li>ul>li:last-child>ul>li:last-child::before{content:\"│\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0└──\\00a0\"}ul.list-ascii>li>ul>li>ul>li>ul>li:last-child>ul>li>ul>li::before{content:\"│\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0├──\\00a0\"}ul.list-ascii>li>ul>li>ul>li>ul>li:last-child>ul>li>ul>li:last-child::before{content:\"│\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0└──\\00a0\"}ul.list-ascii>li>ul>li>ul>li>ul>li:last-child>ul>li:last-child>ul>li::before{content:\"│\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0├──\\00a0\"}ul.list-ascii>li>ul>li>ul>li>ul>li:last-child>ul>li:last-child>ul>li:last-child::before{content:\"│\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0└──\\00a0\"}ul.list-ascii>li>ul>li>ul>li:last-child>ul>li>ul>li>ul>li::before{content:\"│\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0├──\\00a0\"}ul.list-ascii>li>ul>li>ul>li:last-child>ul>li>ul>li>ul>li:last-child::before{content:\"│\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0└──\\00a0\"}ul.list-ascii>li>ul>li>ul>li:last-child>ul>li>ul>li:last-child>ul>li::before{content:\"│\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0├──\\00a0\"}ul.list-ascii>li>ul>li>ul>li:last-child>ul>li>ul>li:last-child>ul>li:last-child::before{content:\"│\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0└──\\00a0\"}ul.list-ascii>li>ul>li>ul>li:last-child>ul>li:last-child>ul>li>ul>li::before{content:\"│\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0├──\\00a0\"}ul.list-ascii>li>ul>li>ul>li:last-child>ul>li:last-child>ul>li>ul>li:last-child::before{content:\"│\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0└──\\00a0\"}ul.list-ascii>li>ul>li>ul>li:last-child>ul>li:last-child>ul>li:last-child>ul>li::before{content:\"│\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0├──\\00a0\"}ul.list-ascii>li>ul>li>ul>li:last-child>ul>li:last-child>ul>li:last-child>ul>li:last-child::before{content:\"│\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0└──\\00a0\"}ul.list-ascii>li>ul>li:last-child>ul>li>ul>li>ul>li>ul>li::before{content:\"\\00a0\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0├──\\00a0\"}ul.list-ascii>li>ul>li:last-child>ul>li>ul>li>ul>li>ul>li:last-child::before{content:\"\\00a0\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0└──\\00a0\"}ul.list-ascii>li>ul>li:last-child>ul>li>ul>li>ul>li:last-child>ul>li::before{content:\"\\00a0\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0├──\\00a0\"}ul.list-ascii>li>ul>li:last-child>ul>li>ul>li>ul>li:last-child>ul>li:last-child::before{content:\"\\00a0\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0└──\\00a0\"}ul.list-ascii>li>ul>li:last-child>ul>li>ul>li:last-child>ul>li>ul>li::before{content:\"\\00a0\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0├──\\00a0\"}ul.list-ascii>li>ul>li:last-child>ul>li>ul>li:last-child>ul>li>ul>li:last-child::before{content:\"\\00a0\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0└──\\00a0\"}ul.list-ascii>li>ul>li:last-child>ul>li>ul>li:last-child>ul>li:last-child>ul>li::before{content:\"\\00a0\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0├──\\00a0\"}ul.list-ascii>li>ul>li:last-child>ul>li>ul>li:last-child>ul>li:last-child>ul>li:last-child::before{content:\"\\00a0\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0└──\\00a0\"}ul.list-ascii>li>ul>li:last-child>ul>li:last-child>ul>li>ul>li>ul>li::before{content:\"\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0├──\\00a0\"}ul.list-ascii>li>ul>li:last-child>ul>li:last-child>ul>li>ul>li>ul>li:last-child::before{content:\"\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0└──\\00a0\"}ul.list-ascii>li>ul>li:last-child>ul>li:last-child>ul>li>ul>li:last-child>ul>li::before{content:\"\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0├──\\00a0\"}ul.list-ascii>li>ul>li:last-child>ul>li:last-child>ul>li>ul>li:last-child>ul>li:last-child::before{content:\"\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0└──\\00a0\"}ul.list-ascii>li>ul>li:last-child>ul>li:last-child>ul>li:last-child>ul>li>ul>li::before{content:\"\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0├──\\00a0\"}ul.list-ascii>li>ul>li:last-child>ul>li:last-child>ul>li:last-child>ul>li>ul>li:last-child::before{content:\"\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0└──\\00a0\"}ul.list-ascii>li>ul>li:last-child>ul>li:last-child>ul>li:last-child>ul>li:last-child>ul>li::before{content:\"\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0├──\\00a0\"}ul.list-ascii>li>ul>li:last-child>ul>li:last-child>ul>li:last-child>ul>li:last-child>ul>li:last-child::before{content:\"\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0└──\\00a0\"}figure{margin:1em 0}.highlight .c{color:#998;font-style:italic}.highlight .err{color:#a61717}.highlight .k{font-weight:bold}.highlight .o{font-weight:bold}.highlight .cm{color:#998;font-style:italic}.highlight .cp{color:#999;font-weight:bold}.highlight .c1{color:#998;font-style:italic}.highlight .cs{color:#999;font-weight:bold;font-style:italic}.highlight .gd{color:#000}.highlight .gd .x{color:#000}.highlight .ge{font-style:italic}.highlight .gr{color:#a00}.highlight .gh{color:#999}.highlight .gi{color:#000}.highlight .gi .x{color:#000}.highlight .go{color:#888}.highlight .gp{color:#555}.highlight .gs{font-weight:bold}.highlight .gu{color:#aaa}.highlight .gt{color:#a00}.highlight .kc{font-weight:bold}.highlight .kd{font-weight:bold}.highlight .kp{font-weight:bold}.highlight .kr{font-weight:bold}.highlight .kt{color:#458;font-weight:bold}.highlight .m{color:#099}.highlight .s{color:#d14}.highlight .na{color:#008080}.highlight .nb{color:#0086B3}.highlight .nc{color:#458;font-weight:bold}.highlight .no{color:#008080}.highlight .ni{color:#800080}.highlight .ne{color:#900;font-weight:bold}.highlight .nf{color:#900;font-weight:bold}.highlight .nn{color:#555}.highlight .nt{color:#000080}.highlight .nv{color:#008080}.highlight .ow{font-weight:bold}.highlight .w{color:#bbb}.highlight .mf{color:#099}.highlight .mh{color:#099}.highlight .mi{color:#099}.highlight .mo{color:#099}.highlight .sb{color:#d14}.highlight .sc{color:#d14}.highlight .sd{color:#d14}.highlight .s2{color:#d14}.highlight .se{color:#d14}.highlight .sh{color:#d14}.highlight .si{color:#d14}.highlight .sx{color:#d14}.highlight .sr{color:#009926}.highlight .s1{color:#d14}.highlight .ss{color:#990073}.highlight .bp{color:#999}.highlight .vc{color:#008080}.highlight .vg{color:#008080}.highlight .vi{color:#008080}.highlight .il{color:#099}.highlight .editor-prefixed:before,.highlight .editor-comment:before{content:\"\\00a0\";margin-right:0.5em;color:#9E9E9E}.highlight .editor-prefixed{color:#2196F3}.highlight .editor-prefixed:before{content:\"$\"}.highlight .editor-comment{color:#9E9E9E}.nav-posts{margin:2em 0;display:flex;align-items:center;justify-content:space-between;flex-direction:column}.nav-posts a{position:relative;display:flex;align-items:center;justify-content:flex-start;width:100%;padding:1em;border:1px solid rgba(0,0,0,0.1);border-radius:3px;text-align:left;white-space:normal;transition:all .25s linear}.nav-posts a:hover{border-color:#1976D2}.nav-posts a .icon{flex:0 0 auto;margin:0 0.75em 0 0;font-size:1.5rem;line-height:1em}.nav-posts a+a{margin-top:1em}.demo{margin:1.5em -1.5em;padding:0.5em 1.5em;overflow:auto;border-top:3px solid #f5f5f5;border-bottom:3px solid #f5f5f5}.demo .box{width:50px;height:50px;margin:0 auto;color:#fff;background:#2196F3;border-radius:3px}@media (min-width: 760px){.demo{margin:1.5em 0;padding:2em 3em;border:3px solid #f5f5f5;border-radius:3px}}.demo .flex-grid{display:flex;flex-wrap:wrap;margin:-5px}.demo .flex-grid>*{margin:5px}.demo-naked{border:none;margin:2em 0;padding:0}.demo.demo-alt,.demo.demo-chips,.demo.demo-badges{padding:1.5em}@media (min-width: 760px){.demo.demo-alt,.demo.demo-chips,.demo.demo-badges{padding:3em}}.demo-inverted{background:#424242;border-color:rgba(0,0,0,0.1)}.demo-show-hide{display:flex;flex-wrap:wrap;margin:1em -0.5em 0}.demo-show-hide .item{position:relative;width:50%}.demo-show-hide .inner,.demo-show-hide .inner>div{padding:1em 1.5em;border-radius:3px}.demo-show-hide .inner{position:relative;margin:0 0.5em 1em;background:#f5f5f5;overflow:auto}.demo-show-hide .inner>div{position:absolute;z-index:2;top:0;left:0;right:0;bottom:0;width:100%;background:#E8F5E9}.demo-show-hide .inner>code{position:relative;z-index:1;color:#9E9E9E}.demo-show-hide .inner>div>code{color:#4CAF50}.add-styles-example{cursor:pointer;padding:0.5em 0;color:#2196F3;border-top:1px solid #2196F3;transition:all .25s linear}.add-styles-example:hover{color:#9C27B0;border-color:#9C27B0}.demo.demo-vertical-center{height:200px}.demo.demo-vertical-center .box{position:relative;top:50%;transform:translateY(-50%)}.demo.demo-add-text-truncate .box{width:150px;height:auto;padding:1em 1.5em;display:block;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.demo.demo-logo-image .logo{display:block;margin:1.5rem auto;padding:0;border:0 none;background:url(\"../img/baseweb-hori-black.svg\") no-repeat left center;background-size:187px 40px;width:187px;height:40px;font-size:0;line-height:0;text-indent:100%;white-space:nowrap;overflow:hidden}.demo.demo-triangle{text-align:center}.demo.demo-triangle:after{content:'';display:table;clear:both}.example-triangle-1,.example-triangle-2,.example-triangle-3{content:'';display:inline-block;width:0;height:0;border:none;border-style:solid;border-color:transparent}.example-triangle-1{border-color:transparent;border-width:14px 14px 14px 0;border-right-color:#2196F3}.example-triangle-2{border-color:transparent;border-width:14px 14px 0 14px;border-top-color:#9C27B0}.example-triangle-3{border-color:transparent;border-width:14px 0 14px 14px;border-left-color:#F44336}.demo-grid{margin:1.5rem 0}.demo-grid .col{margin-top:0.75rem;margin-bottom:0.75rem}.demo-grid .col p{margin:0;padding:1rem;background:rgba(0,0,0,0.05);font-family:Menlo,Monaco,Consolas,\"Courier New\",monospace;font-size:.875em;line-height:1.5em;text-align:center;border-radius:3px}.demo-grid-semantic .demo-wrapper,.demo-grid-semantic .demo-content,.demo-grid-semantic .demo-aside,.demo-grid-semantic .demo-article{background:rgba(33,150,243,0.1)}.demo-grid-semantic .demo-wrapper p,.demo-grid-semantic .demo-content p,.demo-grid-semantic .demo-aside p,.demo-grid-semantic .demo-article p{margin:0;padding:1rem;font-family:Menlo,Monaco,Consolas,\"Courier New\",monospace;font-size:.875em;line-height:1.5em;text-align:center}.demo-grid-semantic .demo-aside p,.demo-grid-semantic .demo-article p{margin:0.75rem 0;background:rgba(0,0,0,0.05);border-radius:3px}.demo-grid-semantic .demo-wrapper{box-sizing:border-box;width:100%;min-width:none;max-width:75rem;margin:0 auto;padding:0 1.5rem}.demo-grid-semantic .demo-wrapper:after{content:'';display:table;clear:both}.demo-grid-semantic .demo-content{box-sizing:border-box;width:auto;margin-left:-.75rem;margin-right:-.75rem}.demo-grid-semantic .demo-content:after{content:'';display:table;clear:both}.demo-grid-semantic .demo-aside,.demo-grid-semantic .demo-article{box-sizing:border-box;min-height:1px;float:left;padding-left:.75rem;padding-right:.75rem}.demo-grid-semantic .demo-aside.col-left,.demo-grid-semantic .demo-article.col-left{float:left}.demo-grid-semantic .demo-aside.col-right,.demo-grid-semantic .demo-article.col-right{float:right}.demo-grid-semantic .demo-aside{width:33.33333%}.demo-grid-semantic .demo-article{width:66.66667%}.demo-grid-prefix-suffix .row{background:rgba(33,150,243,0.1)}@media (min-width: 760px){.demo-grid-prefix-suffix{padding-left:0.75rem;padding-right:0.75rem}}.demo-grid-nested .col{margin-top:0;margin-bottom:0;background:rgba(33,150,243,0.1)}.demo-grid-nested .col p{margin:0.75rem 0;display:block;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}@media (min-width: 760px){.demo-grid-nested{padding-left:0.75rem;padding-right:0.75rem}}.demo-tables .table{margin:1em 0}.demo-tables .table-responsive{margin:1em 0}.demo-forms form{margin:1em 0}.demo-buttons>p{margin:0 0 0.5rem -0.5rem}.demo-buttons>p:after{content:'';display:table;clear:both}.demo-buttons .button{float:left;margin:0.5rem 0 0 0.5rem}.demo-buttons .block{margin:0.5em 0}.demo-icon-button .button-demo-1 .icon{margin-right:.25em;margin-left:-.25em}.demo-icon-button .button-demo-1.small .icon{margin-left:-.125em}.demo-icon-button .button-demo-1.large .icon{margin-left:-.35em}.demo-icon-button .button-demo-2{padding:.75rem}.demo-icon-button .button-demo-2.small{padding:.375rem}.demo-icon-button .button-demo-2.large{padding:1rem}.demo .video-wrapper{margin:1em 0}.demo-chips{text-align:center}.demo-badges{text-align:center}.custom-breadcrumb{display:block;margin:1em 0;font-size:1em;color:#4CAF50}.custom-breadcrumb .current{color:#9E9E9E}.custom-breadcrumb ul,.custom-breadcrumb ol{margin:0;list-style:none}.custom-breadcrumb ul:after,.custom-breadcrumb ol:after{content:'';display:table;clear:both}.custom-breadcrumb li{float:left;margin:0}.custom-breadcrumb li:after{padding:0 0.75em;content:\"/\";color:#BDBDBD}.custom-breadcrumb li:last-child:after{content:none}.demo-notice .notice{margin:1em 0}.demo-notice .item{padding-top:1em;border-top:1px solid rgba(0,0,0,0.1)}@media (min-width: 760px){.demo-notice .flex{display:flex;flex-wrap:wrap}.demo-notice .flex .item{width:48%}.demo-notice .flex .item:nth-child(odd){margin-right:2%}.demo-notice .flex .item:nth-child(even){margin-left:2%}}.demo-dropdown{padding:2em 3em;overflow:visible}.demo-dropdown:after{content:'';display:table;clear:both}.demo-dropdown>.dropdown-trigger,.demo-dropdown>.dropdown,.demo-dropdown>.dropdown-content,.demo-dropdown>.dropdown-menu{float:left;margin:1em 1em 1em 0}.demo-dropdown hr{margin:0}.demo-tabs.inverted{background:#424242}.demo-offcanvas{padding:0}.demo-offcanvas .oc-wrap{height:100%}.demo-offcanvas .oc-inner{padding:1.5em}.demo-offcanvas .oc-aside{position:absolute;padding:1em 2em}.demo-offcanvas .oc-aside .oc-trigger{margin:1em 0 0 0}.demo-offcanvas form{margin:0}.demo-offcanvas .input[readonly]{font-family:Menlo,Monaco,Consolas,\"Courier New\",monospace;color:#F44336;opacity:1;background:rgba(255,255,255,0.5)}.demo-offcanvas .input[readonly]:focus{background:#fff}@media (min-width: 760px){.demo-offcanvas{padding:0}.demo-offcanvas .oc-inner{padding:3em}}.oc-custom .oc-wrap{height:100%;overflow-y:scroll;-webkit-overflow-scrolling:touch;transition:top linear 0.2s, bottom linear 0.2s}.oc-custom .oc-content,.oc-custom .oc-inner,.oc-custom .oc-aside{height:100%}.oc-custom .oc-wrap{position:relative;overflow:hidden}.oc-custom .oc-content{position:relative;left:0;z-index:5;transition:transform 0.5s;background:#f5f5f5}.oc-custom .oc-inner{position:relative;overflow-y:auto}.oc-custom .oc-aside{position:absolute;top:0;z-index:10;visibility:hidden;width:280px;overflow-y:auto;transition:all 0.5s;background:#424242}.oc-custom .oc-content:after{position:absolute;top:0;right:0;width:0;height:0;background:rgba(0,0,0,0.2);content:'';opacity:0;transition:opacity 0.5s,width 0.1s 0.5s,height 0.1s 0.5s}.oc-custom .oc-active>.oc-content:after{width:100%;height:100%;opacity:1;transition:opacity 0.5s}.oc-custom .oc-aside:after{position:absolute;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.2);content:'';opacity:1;transition:opacity 0.5s}.oc-custom .oc-active>.oc-aside:after{width:0;height:0;opacity:0;transition:opacity 0.5s,width 0.1s 0.5s,height 0.1s 0.5s}.oc-custom .oc-aside{color:#fff}.oc-aside-left.oc-active .oc-content{transform:translate3d(280px, 0, 0)}.oc-aside-left.oc-aside{left:0;z-index:1;transform:translate3d(50%, 0, 0)}.oc-aside-left.oc-active .oc-aside-left.oc-aside{visibility:visible;transition:transform 0.5s;transform:translate3d(0, 0, 0)}.oc-aside-right.oc-active .oc-content{transform:translate3d(-280px, 0, 0)}.oc-aside-right.oc-aside{right:0;z-index:1;transform:translate3d(-50%, 0, 0)}.oc-aside-right.oc-active .oc-aside-right.oc-aside{visibility:visible;transition:transform 0.5s;transform:translate3d(0, 0, 0)}.slide-in-left.oc-aside{left:0;visibility:visible;transform:translate3d(-100%, 0, 0)}.slide-in-left.oc-active .slide-in-left.oc-aside{visibility:visible;transform:translate3d(0, 0, 0)}.slide-in-left.oc-aside:after{display:none}.slide-in-right.oc-aside{right:0;visibility:visible;transform:translate3d(100%, 0, 0)}.slide-in-right.oc-active .slide-in-right.oc-aside{visibility:visible;transform:translate3d(0, 0, 0)}.slide-in-right.oc-aside:after{display:none}.reveal-left.oc-active .oc-content{transform:translate3d(280px, 0, 0)}.reveal-left.oc-aside{left:0;z-index:1}.reveal-left.oc-active .reveal-left.oc-aside{visibility:visible;transition:transform 0.5s}.reveal-left.oc-aside:after{display:none}.reveal-right.oc-active .oc-content{transform:translate3d(-280px, 0, 0)}.reveal-right.oc-aside{right:0;z-index:1}.reveal-right.oc-active .reveal-right.oc-aside{visibility:visible;transition:transform 0.5s}.reveal-right.oc-aside:after{display:none}.slide-along-left.oc-active .oc-content{transform:translate3d(280px, 0, 0)}.slide-along-left.oc-aside{left:0;z-index:1;transform:translate3d(-50%, 0, 0)}.slide-along-left.oc-active .slide-along-left.oc-aside{visibility:visible;transition:transform 0.5s;transform:translate3d(0, 0, 0)}.slide-along-left.oc-aside:after{display:none}.slide-along-right.oc-active .oc-content{transform:translate3d(-280px, 0, 0)}.slide-along-right.oc-aside{right:0;z-index:1;transform:translate3d(50%, 0, 0)}.slide-along-right.oc-active .slide-along-right.oc-aside{visibility:visible;transition:transform 0.5s;transform:translate3d(0, 0, 0)}.slide-along-right.oc-aside:after{display:none}.slide-out-left.oc-active .oc-content{transform:translate3d(280px, 0, 0)}.slide-out-left.oc-aside{left:0;z-index:1;transform:translate3d(50%, 0, 0)}.slide-out-left.oc-active .slide-out-left.oc-aside{visibility:visible;transition:transform 0.5s;transform:translate3d(0, 0, 0)}.slide-out-right.oc-active .oc-content{transform:translate3d(-280px, 0, 0)}.slide-out-right.oc-aside{right:0;z-index:1;transform:translate3d(-50%, 0, 0)}.slide-out-right.oc-active .slide-out-right.oc-aside{visibility:visible;transition:transform 0.5s;transform:translate3d(0, 0, 0)}.scale-down-left.oc-wrap{perspective:1500px}.scale-down-left .oc-content{transform-style:preserve-3d}.scale-down-left.oc-active .oc-content{transform:translate3d(0, 0, -280px)}.scale-down-left.oc-aside{left:0;opacity:1;transform:translate3d(-100%, 0, 0)}.scale-down-left.oc-active .scale-down-left.oc-aside{visibility:visible;transition:transform 0.5s;transform:translate3d(0, 0, 0)}.scale-down-left.oc-aside:after{display:none}.scale-down-left.oc-wrap{transition:height 0.1s 0.5s}.scale-down-left.oc-delay.oc-wrap{height:100%}.scale-down-left.oc-active.oc-wrap{height:100%;transition:none}.scale-down-right.oc-wrap{perspective:1500px}.scale-down-right .oc-content{transform-style:preserve-3d}.scale-down-right.oc-active .oc-content{transform:translate3d(0, 0, -280px)}.scale-down-right.oc-aside{right:0;opacity:1;transform:translate3d(100%, 0, 0)}.scale-down-right.oc-active .scale-down-right.oc-aside{visibility:visible;transition:transform 0.5s;transform:translate3d(0, 0, 0)}.scale-down-right.oc-aside:after{display:none}.scale-down-right.oc-wrap{transition:height 0.1s 0.5s}.scale-down-right.oc-delay.oc-wrap{height:100%}.scale-down-right.oc-active.oc-wrap{height:100%;transition:none}.scale-up-left.oc-wrap{perspective:1500px;perspective-origin:0% 50%}.scale-up-left.oc-active .oc-content{transform:translate3d(280px, 0, 0)}.scale-up-left.oc-aside{left:0;z-index:1;opacity:1;transform:translate3d(0, 0, -280px)}.scale-up-left.oc-active .scale-up-left.oc-aside{visibility:visible;transition:transform 0.5s;transform:translate3d(0, 0, 0)}.scale-up-left.oc-wrap{transition:height 0.1s 0.5s}.scale-up-left.oc-delay.oc-wrap{height:100%}.scale-up-left.oc-active.oc-wrap{height:100%;transition:none}.scale-up-right.oc-wrap{perspective:1500px;perspective-origin:100% 50%}.scale-up-right.oc-active .oc-content{transform:translate3d(-280px, 0, 0)}.scale-up-right.oc-aside{right:0;z-index:1;opacity:1;transform:translate3d(0, 0, -280px)}.scale-up-right.oc-active .scale-up-right.oc-aside{visibility:visible;transition:transform 0.5s;transform:translate3d(0, 0, 0)}.scale-up-right.oc-wrap{transition:height 0.1s 0.5s}.scale-up-right.oc-delay.oc-wrap{height:100%}.scale-up-right.oc-active.oc-wrap{height:100%;transition:none}.scale-rotate-left.oc-wrap{perspective:1500px}.scale-rotate-left .oc-content{transform-style:preserve-3d}.scale-rotate-left.oc-active .oc-content{transform:translate3d(100px, 0, -600px) rotateY(-20deg)}.scale-rotate-left.oc-aside{left:0;opacity:1;transform:translate3d(-100%, 0, 0)}.scale-rotate-left.oc-active .scale-rotate-left.oc-aside{visibility:visible;transition:transform 0.5s;transform:translate3d(0, 0, 0)}.scale-rotate-left.oc-aside:after{display:none}.scale-rotate-left.oc-wrap{transition:height 0.1s 0.5s}.scale-rotate-left.oc-delay.oc-wrap{height:100%}.scale-rotate-left.oc-active.oc-wrap{height:100%;transition:none}.scale-rotate-right.oc-wrap{perspective:1500px}.scale-rotate-right .oc-content{transform-style:preserve-3d}.scale-rotate-right.oc-active .oc-content{transform:translate3d(-100px, 0, -600px) rotateY(20deg)}.scale-rotate-right.oc-aside{right:0;opacity:1;transform:translate3d(100%, 0, 0)}.scale-rotate-right.oc-active .scale-rotate-right.oc-aside{visibility:visible;transition:transform 0.5s;transform:translate3d(0, 0, 0)}.scale-rotate-right.oc-aside:after{display:none}.scale-rotate-right.oc-wrap{transition:height 0.1s 0.5s}.scale-rotate-right.oc-delay.oc-wrap{height:100%}.scale-rotate-right.oc-active.oc-wrap{height:100%;transition:none}.open-door-left.oc-wrap{perspective:1500px}.open-door-left .oc-content{transform-origin:100% 50%;transform-style:preserve-3d}.open-door-left.oc-active .oc-content{transform:rotateY(-10deg)}.open-door-left.oc-aside{left:0;opacity:1;transform:translate3d(-100%, 0, 0)}.open-door-left.oc-active .open-door-left.oc-aside{visibility:visible;transition:transform 0.5s;transform:translate3d(0, 0, 0)}.open-door-left.oc-aside:after{display:none}.open-door-left.oc-wrap{transition:height 0.1s 0.5s}.open-door-left.oc-delay.oc-wrap{height:100%}.open-door-left.oc-active.oc-wrap{height:100%;transition:none}.open-door-right.oc-wrap{perspective:1500px}.open-door-right .oc-content{transform-origin:0 50%;transform-style:preserve-3d}.open-door-right.oc-active .oc-content{transform:rotateY(10deg)}.open-door-right.oc-aside{right:0;opacity:1;transform:translate3d(100%, 0, 0)}.open-door-right.oc-active .open-door-right.oc-aside{visibility:visible;transition:transform 0.5s;transform:translate3d(0, 0, 0)}.open-door-right.oc-aside:after{display:none}.open-door-right.oc-wrap{transition:height 0.1s 0.5s}.open-door-right.oc-delay.oc-wrap{height:100%}.open-door-right.oc-active.oc-wrap{height:100%;transition:none}.demo-tooltips{overflow:visible}.demo-tooltips:after{content:'';display:table;clear:both}.demo-tooltips hr{margin:0}.demo-tooltips .button{float:left;margin:1em 1em 1em 0}.swatch{display:inline-block;width:50px;height:50px;border:1px solid rgba(0,0,0,0.1);border-radius:3px}.bg-color{background:#424242}.bg-color-light{background:#9E9E9E}.bg-color-dark{background:#212121}.bg-color-link{background:#2196F3}.bg-color-link-hover{background:#1976D2}.bg-color-heading{background:#212121}.bg-color-heading-link{background:#212121}.bg-color-heading-link-hover{background:#2196F3}.bg-bg-color{background:#f5f5f5}.bg-bg-selection{background:rgba(76,175,80,0.25)}.bg-border-color{background:rgba(0,0,0,0.1)}.swatch-wrap{position:relative;height:44px;min-width:44px}.swatch-wrap .swatch{position:absolute;top:0;left:0}.swatch-wrap .swatch-value{margin-left:60px;display:inline-block;width:auto;font-family:Menlo,Monaco,Consolas,\"Courier New\",monospace}.swatch-card{margin:2em 0}.swatch-card ul{margin:0.5em 0 0;list-style:none}.swatch-card ul li{margin:0}@media (min-width: 760px){.swatch-card-wrap{display:flex;flex-wrap:wrap;justify-content:space-between;margin:0 -2em 3em 0}.swatch-card{flex:1 0 auto;width:40%;margin:2em 2em 0 0}}.swatch-card .swatch{display:block;width:auto;height:auto;padding:1em;border:none;border-radius:0;color:#fff}.swatch-card .swatch.text-dark{color:#212121}.swatch-card .swatch .name{display:block;margin-bottom:3em;padding-bottom:0.5em;border-bottom:1px solid rgba(255,255,255,0.25);text-transform:capitalize}.swatch-card .swatch.text-dark .name{border-color:rgba(0,0,0,0.1)}.swatch-card .swatch .var,.swatch-card .swatch .hex{font-family:Menlo,Monaco,Consolas,\"Courier New\",monospace}.swatch-card .swatch .hex{float:right}.icons-listing{display:grid;grid-template-columns:repeat(auto-fill, minmax(14rem, 1fr));grid-gap:1rem;margin:1em 0}.icons-listing .icon-item{margin:0;padding:1em 1.5em;border-radius:3px;transition:all .25s linear}.icons-listing .icon-item:not(.button){background:#f5f5f5}.icons-listing .icon{font-size:1.5em;margin-right:0.5em;vertical-align:middle}.icons-listing code{font-size:.875em;color:#9E9E9E;transition:all .25s linear}.icons-listing .icon-item:not(.button):hover{background-color:#e8e8e8}.icons-listing .icon-item:not(.button):hover code{color:#424242}@media (min-width: 480px){.icons-listing{flex-direction:row}.icons-listing .icon-item{padding:1.5em 2em}}@media (min-width: 760px){.icons-listing{margin:2em 0}}body{background:#f5f5f5}.main{background:#fff}.header{padding:2em 0}.header .container{display:flex;justify-content:space-between;align-items:center}.header .container:after{content:none;display:none;clear:none}.header .logo{display:flex;align-items:center;border-bottom:none}.header .logo img{margin:0}.header .logo .version{margin-top:8px;margin-left:10px;color:#9E9E9E}.header .logo:hover .version{color:#2196F3}.home .header .logo .version{color:rgba(255,255,255,0.5)}.home .header .logo:hover .version{color:#fff}.header .button{background:rgba(0,0,0,0.05);color:#424242;border:none}.header .button:hover{background:#fff;color:#424242}.home .header .button{background:rgba(255,255,255,0.1);color:#fff}.home .header .button:hover{background:rgba(255,255,255,0.2);color:#fff}.header .oc-trigger{display:inline-block}@media (min-width: 800px){.header .oc-trigger{display:none}}.nav-hori ul{display:none;margin:0;list-style:none}.nav-hori ul li{margin:0 15px}.nav-hori ul li:first-child{margin-left:0}.nav-hori ul li:last-child{margin-right:0}.nav-hori ul a{color:#424242;font-weight:500;border-bottom:none}.nav-hori ul a:hover{color:#2196F3}.nav-hori ul .active a{color:#9E9E9E}@media (min-width: 800px){.nav-hori ul{display:flex;align-items:center}}.home .nav-hori ul li a{color:#fff}.home .nav-hori ul li a:hover{color:rgba(255,255,255,0.5)}.home .nav-hori ul li.active a:not(.button){color:rgba(255,255,255,0.5)}.nav-vert ul{margin:0 1.5em;list-style:none}.nav-vert ul li{margin:1px 0}.nav-vert ul a{display:block;padding:0.5em 1em;color:#9E9E9E;border-bottom:none;border-radius:3px}.nav-vert ul a:hover{background:#f5f5f5;color:#424242}.nav-vert ul .button{margin:1em 0 0 0;text-align:left}.nav-vert ul .button .icon{margin-left:0}.nav-vert ul .button:hover{background:#f5f5f5;color:#424242}.nav-vert ul .active>a{color:#2196F3}.nav-vert ul .active>a:hover{color:#2196F3}.oc-aside .oc-trigger{margin:1em}.hero{position:relative;background:#2196F3;background-image:linear-gradient(to bottom right, #880E4F, #311B92)}.hero-content .container{padding-top:1.5em;padding-bottom:1.5em}@media (min-width: 480px){.hero-content .container{padding:4em 5em 6em}}@media (min-width: 760px){.hero-content .container{padding:8em 5em 10em}}.hero-content{text-align:center}.hero-content .action{margin:2em 0}.hero-content .button{background:rgba(255,255,255,0);border:2px solid #fff;color:#fff;transition:none}.hero-content .button:hover,.hero-content .button:focus{background:#fff;color:#424242}.hero-content h1{margin:0 auto 2em;font-size:1.5em;color:#fff;max-width:500px}@media (min-width: 480px){.hero-content h1{font-size:2em;max-width:600px}}@media (min-width: 760px){.hero-content h1{margin:1em auto 2em;font-size:2.5em;max-width:700px}}@media (min-width: 990px){.hero-content h1{font-size:3em;max-width:800px}}.hero-content .highlight{padding:0;margin-left:-0.75em;background:none;font-size:1.25em}.hero-content .highlight .editor-prefixed{color:#fff}.hero-content .highlight .editor-prefixed:before{color:rgba(255,255,255,0.5)}.main{padding:1.5em 0}.main+.main{margin-top:3px}@media (min-width: 760px){.main{padding:2em 0 3em}}.main-header{max-width:50em;margin:1.5em auto;text-align:center}@media (min-width: 760px){.main-header{margin:3em auto}}.feature{margin:4em 0}.feature+.feature{margin-top:4em}.feature-ill svg{display:block;max-width:100%;margin:1rem auto}@media (min-width: 760px){.feature{display:flex;justify-content:space-between;align-items:center}.feature .feature-content{flex:0 1 50%}.feature .feature-content{margin-left:3em;margin-right:6em}.feature .feature-ill{margin-left:6em;margin-right:0}.feature.reverse{flex-direction:row-reverse}.feature.reverse .feature-content{margin-left:6em;margin-right:3em}.feature.reverse .feature-ill{margin-left:0;margin-right:6em}}.block-file-structure{display:block;margin:1.5em 0}.block-file-structure .item{display:flex;align-items:center}.block-file-structure .item-files{overflow:auto;padding:2em;background:#f5f5f5;border-radius:3px}@media (min-width: 760px){.block-file-structure{display:flex;margin:3em 0}.block-file-structure .item{flex:0 1 50%}.block-file-structure .item+.item{margin-left:2em}.block-file-structure .item-details .widget-list{margin:0}}.expandable{position:relative;margin:2em 0}.expandable .expandable-header{padding-bottom:1em}.expandable .expandable-footer{padding-top:1em}.expandable .expandable-overlay{position:absolute;z-index:5;top:0;left:0;right:0;bottom:0;display:flex;justify-content:center;align-items:center;background:rgba(0,0,0,0.25);border-radius:3px}.expandable .expandable-content{margin:0;height:300px;overflow-y:hidden}.expandable.active .expandable-overlay{position:relative;display:block;padding-bottom:1em;top:auto;left:auto;right:auto;bottom:auto;background:none}.expandable.active .expandable-content{height:auto;overflow-y:auto}.sidebar .widget{margin:0}.widget-grid{display:grid;grid-template-columns:repeat(auto-fill, minmax(18rem, 1fr));grid-gap:1rem;margin:2em 0}.widget-grid .widget{margin:0}.widget-grid .button{display:block}@media (min-width: 480px){.widget-grid .button{display:inline-block}}.widget-list{margin:2em 0}.widget-list .widget{margin:0}.widget-list .widget+.widget{margin-top:1em}.widget{margin:1em 0;padding:0;border-radius:3px}.widget .widget+.widget{border-top:1px solid rgba(0,0,0,0.1)}.widget.card,.widget.fill{padding:0.5em 1.5em}.widget.card{border:1px solid rgba(0,0,0,0.1)}.widget.fill{background:#f5f5f5}@media (min-width: 760px){.widget{margin:2em 0;padding:1em 0}}a.widget-featured{display:block;border-bottom:none;color:#424242;transition:all .25s linear}a.widget-featured h2{transition:all .25s linear}a.widget-featured.color-1:hover{border-color:#FF9800}a.widget-featured.color-2:hover{border-color:#E91E63}a.widget-featured.color-3:hover{border-color:#9C27B0}a.widget-featured.color-4:hover{border-color:#2196F3}a.widget-featured.color-5:hover{border-color:#009688}a.widget-featured.color-1:hover h2{color:#FF9800}a.widget-featured.color-2:hover h2{color:#E91E63}a.widget-featured.color-3:hover h2{color:#9C27B0}a.widget-featured.color-4:hover h2{color:#2196F3}a.widget-featured.color-5:hover h2{color:#009688}@media (min-width: 480px){.widget-featured .widget-icon{float:left;margin:1.5rem 2rem 1.5rem 0}.widget-featured .widget-content{padding-left:5.75rem}}.widget-icon{margin:1.5rem 0;font-size:3.125em;line-height:1em;color:#2196F3}.widget-icon .icon{font-size:1em;stroke-width:1.5px}.widget-icon .icon-color-1{color:#FF9800}.widget-icon .icon-color-2{color:#E91E63}.widget-icon .icon-color-3{color:#9C27B0}.widget-icon .icon-color-4{color:#2196F3}.widget-icon .icon-color-5{color:#009688}.widget-icon .icon-color-6{color:#4CAF50}.widget-icons{margin:2em -1em;display:flex;flex-wrap:wrap;justify-content:center}.widget-icons .widget-icon{margin:0.5em}@media (min-width: 480px){.widget-icons{justify-content:flex-start}}.widget h2 a{color:#424242}.widget h2 a:hover{color:#2196F3}.widget-menu h2{margin:0.5em 0 -0.5em;font-size:1em;font-weight:500}.widget-menu h2 a{margin-left:-1em;margin-right:-1em;border:none}.widget-menu h2 a:hover{background:none}.widget-menu ul{list-style:none;margin:1em 0}.widget-menu ul ul{margin:0 0 0 1em}.widget-menu ul li{margin:1px 0}.widget-menu a{display:block;padding:0.5em 1em;color:#9E9E9E;border-bottom:none;border-radius:3px}.widget-menu a:hover{background:#f5f5f5;color:#424242}.widget-menu .active>a{color:#2196F3}.widget-menu .active>a:hover{color:#2196F3}.widget-menu ul ul{display:none}.widget-menu .active>ul{display:block}@media (min-width: 760px){.widget-menu{margin-right:2em}.widget-menu h2 a{margin-right:0}}.widget-contents .active>a{color:#9E9E9E;border:0 none}.widget-action{display:none}@media (min-width: 760px){.widget-action{display:block}}.widget-back{display:none;text-align:center}.widget-back:first-child,.widget-back:last-child{padding:0}@media (min-width: 760px){.widget-back{display:block;margin:0;text-align:left}.widget-back:first-child,.widget-back:last-child{padding:1em 0}}.toc,.docs-header,.docs-item{margin:1em 0;padding:1em 0;border-top:1px solid rgba(0,0,0,0.1)}.subheading{font-weight:400;color:#9E9E9E}.table-docs p{margin:0}@media screen and (max-width: 759px){.table-docs tr,.table-docs th,.table-docs td{display:block}.table-docs tr{padding:0.5em 0.75em;border-bottom:1px solid rgba(0,0,0,0.1)}.table-docs tr:first-child{border-top:1px solid rgba(0,0,0,0.1)}.table-docs tr th,.table-docs tr td{padding:0.5rem 0;border-bottom:1px dotted rgba(0,0,0,0.1)}.table-docs tr th:last-child,.table-docs tr td:last-child{border-bottom:0 none}.table-docs tbody:first-child tr:first-child th,.table-docs tbody:first-child tr:first-child td{border-top:0 none}}.list-docs{margin:1.5rem 0;list-style:none}.list-docs li{margin:0;padding:1rem 0;border-top:1px solid rgba(0,0,0,0.1)}.list-docs.numbered{counter-reset:list-counter}.list-docs.numbered li{position:relative;padding-left:3em}.list-docs.numbered li:before{content:counter(list-counter);counter-increment:list-counter;position:absolute;top:1.5rem;left:0;font-size:2em;line-height:1.5em;color:#9E9E9E}.article-listing{list-style:none;margin:0}.article-listing .main-header{margin-top:0}.article-listing ol{margin:1em auto;max-width:56rem}.article-listing ol li{display:flex;margin:1em 0}.article-listing .article{flex:1 1 auto;margin:0;padding:0.5em 0;border-top:1px solid rgba(0,0,0,0.1)}.article-listing .article a{border-bottom:none}@media (min-width: 760px){.article-listing ol{display:grid;grid-template-columns:repeat(auto-fill, minmax(18rem, 1fr));grid-gap:4rem;margin:2em auto}.article-listing ol li{margin:0}}.article{position:relative}.featured-image{margin:2em auto;border-radius:3px}.meta{vertical-align:middle;color:#9E9E9E}.meta>span{display:inline-block;vertical-align:middle}.meta>span+span{margin-left:0.5em}.meta a{color:#9E9E9E}.meta a:hover{color:#1976D2}.meta .date{color:#9E9E9E;text-transform:uppercase}.article-header{text-align:center;margin-bottom:3em}@media (min-width: 760px){.article-header{text-align:left}}.article-content{font-size:1em;line-height:1.6em}@media (min-width: 760px){.article .content{font-size:1.125em;line-height:1.8em}}.social-links{margin:2em 0;display:flex;justify-content:center}.social-links a{padding:0.25em 0.75em;background:#424242;border-radius:3px;font-size:0.9em;line-height:1.5em;color:#fff;border-bottom:none}.social-links a:hover{opacity:0.7}.social-links a+a{margin-left:0.25rem}.social-links .social-facebook{background:#3b5998}.social-links .social-twitter{background:#00aced}.social-links .social-google{background:#dd4b39}.social-links .icon{font-size:1.375em;margin-top:0;margin-bottom:-0.2em;fill:currentColor;stroke:currentColor;stroke-width:0}@media (min-width: 760px){.social-links{margin-top:4em}.social-links a{padding:0.5em 1em;font-size:1em}.social-links a+a{margin-left:0.5em}}.img-featured{margin:0 0 2em 0;width:100%;height:auto}.comments-wrapper{margin:2em 0}@media (min-width: 760px){.comments-wrapper{margin:6em 0}}.block-action{max-width:50em;margin:1.5em auto;padding:1.5em 3em;background-image:linear-gradient(45deg, #880E4F, #311B92);border-radius:3px;color:#fff;text-align:center}.block-action h2{color:#fff}.block-action .action{margin:1em 0;display:block}.block-action .action .button{width:100%;display:block;margin:1em 0;background:rgba(255,255,255,0);border:2px solid #fff;color:#fff;transition:none}.block-action .action .button:hover,.block-action .action .button:focus{background:#fff;color:#424242}@media (min-width: 760px){.block-action{margin:3em auto}.block-action .action{display:inline-block}.block-action .action .button{width:auto;display:inline-block;margin:0 0.5em}}.button-totop{opacity:0;transition:all .25s linear}.button-totop.fadeIn{opacity:1}.footer{padding:2em 0;font-size:.875em;color:#9E9E9E;text-align:center}.footer .logo{border:0 none}.footer img{display:inline-block;opacity:0.4}.footer a:not(.button){color:#9E9E9E}.footer a:not(.button):hover{color:#1976D2}.footer .button{margin:1em auto 0;background:#fff}.footer .button:hover{color:#2196F3}@media (min-width: 760px){.footer{text-align:left}.footer .logo{position:relative;top:-3px;float:right}.footer img{margin:0}.footer .button-totop{display:none}}\n","/*!\n * BaseWeb\n * A fresh front-end development framework\n * @version 3.0.6\n *\n * @author Sebastian Nitu\n * @url https://github.com/sebnitu/BaseWeb\n * @url http://sebnitu.com\n *\n * Copyright (c) 2020 Sebastian Nitu (MIT Licensed)\n */\n","// Set file variable\n$filename: 'scss/elements/_base.scss';\n\n////////////////////////////////////////////////////////////////////////////////\n// @Core Map Overrides\n////////////////////////////////////////////////////////////////////////////////\n\n// Extend default component map with overrides if they exist\n@if variable-exists(override) {\n  @if map-has-key($override, 'anchors') {\n    $anchors: map-extend($anchors, map-get($override, 'anchors'), true);\n  }\n  @if map-has-key($override, 'headings') {\n    $headings: map-extend($headings, map-get($override, 'headings'), true);\n  }\n  @if map-has-key($override, 'breakpoints') {\n    $breakpoints: map-extend($breakpoints, map-get($override, 'breakpoints'), true);\n  }\n  @if map-has-key($override, 'grid') {\n    $grid: map-extend($grid, map-get($override, 'grid'), true);\n  }\n}\n\n/*==============================================================================\n  @Base Styles - #{$filename}\n==============================================================================*/\n\n// Remove margins and padding from HTML and Body elements.\nhtml, body {\n  margin: 0;\n  padding: 0;\n}\n\n// Prevents automatic text resizing on mobile devices.\nhtml {\n  -webkit-text-size-adjust: 100%;\n  -ms-text-size-adjust: 100%;\n}\n\n// Make HTML5 elements act like blocks.\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, menu, nav, section {\n  display: block;\n}\n\nhtml {\n  // Set default box layout model to $box-sizing (border-box is default).\n  // Source:\n  //  - http://www.paulirish.com/2012/box-sizing-border-box-ftw/\n  //  - https://css-tricks.com/inheriting-box-sizing-probably-slightly-better-best-practice/\n  box-sizing: $box-sizing;\n}\n\n// Apply a natural box layout model to all elements, while still allowing components to change.\n*, *:before, *:after {\n  box-sizing: inherit;\n}\n\n// Add custom text highlight color if a color is set in $bg-selection.\n@if $bg-selection {\n  ::selection {\n    background: $bg-selection;\n    text-shadow: none;\n  }\n}\n\n// Check if we should output grid system\n@if map-get($grid, 'output') {\n\n/*==============================================================================\n  @Grid System - #{$filename}\n==============================================================================*/\n\n// Check if we should output mobile grid system\n@if map-get($grid, 'output-mobile') {\n  @include build-grid-system('mobile');\n}\n\n@include media-min('medium') {\n  @include build-grid-system();\n}\n\n} // End @if output\n\n/*==============================================================================\n  @Utility Classes - #{$filename}\n==============================================================================*/\n\n// Outputs our cleafix class if one is set in $class-clearfix.\n@if $class-clearfix {\n  .#{$class-clearfix} {\n    @include add-clearfix();\n  }\n}\n\n// Outputs our remove cleafix class if one is set in $class-remove-clearfix.\n@if $class-remove-clearfix {\n  .#{$class-remove-clearfix} {\n    @include remove-clearfix();\n  }\n}\n\n// Outputs our float-left class if one is set in $class-float-left.\n@if $class-float-left {\n  .#{$class-float-left} {\n    float: left;\n  }\n}\n\n// Outputs our float-right class if one is set in $class-float-right.\n@if $class-float-right {\n  .#{$class-float-right} {\n    float: right;\n  }\n}\n\n// Show and Hide classes\n@if ($class-show) {\n  .#{$class-show} {\n    display: block !important;\n  }\n  .#{$class-show}-inline-block {\n    display: inline-block !important;\n  }\n  .#{$class-show}-flex {\n    display: flex !important;\n  }\n  .#{$class-show}-inline-flex {\n    display: inline-flex !important;\n  }\n  .#{$class-show}-inherit {\n    display: inherit !important;\n  }\n}\n\n@if ($class-hide) {\n  .#{$class-hide} {\n    display: none !important;\n  }\n}\n\n// Responsive Show and Hide Classes\n@each $name, $value in $breakpoints {\n  @if $class-show-hide-min or $class-show-hide-max {\n\n    @include media-min($name) {\n      @if ($class-show-hide-min) {\n        .#{$class-show}-#{$name}-#{$class-show-hide-min} {\n          display: none !important;\n        }\n      }\n      @if ($class-show-hide-max) {\n        .#{$class-hide}-#{$name}-#{$class-show-hide-max} {\n          display: none !important;\n        }\n      }\n    }\n    @include media-max($name) {\n      @if ($class-show-hide-min) {\n        .#{$class-hide}-#{$name}-#{$class-show-hide-min} {\n          display: none !important;\n        }\n      }\n      @if ($class-show-hide-max) {\n        .#{$class-show}-#{$name}-#{$class-show-hide-max} {\n          display: none !important;\n        }\n      }\n    }\n\n  }\n}\n","////////////////////////////////////////////////////////////////////////////////\n// @Settings\n////////////////////////////////////////////////////////////////////////////////\n\n// Property defaults\n// @desc The default values used for various CSS properties.\n// @type property values\n\n$bg-color: $gray-100 !default;\n$bg-selection: rgba($green, 0.25) !default;\n\n$border-color: rgba($black, 0.10) !default;\n$border-radius: 3px !default;\n\n$box-sizing: border-box !default;\n$box-shadow: 0 1px 3px rgba($black, 0.1) !default;\n\n$transition-property: all !default;\n$transition-duration: 0.25s !default;\n$transition-timing-function: linear !default;\n$transition-delay: 0.25s !default;\n$transition: $transition-property $transition-duration $transition-timing-function !default;\n\n// Utility classes\n// @desc Used to output various global utility classes.\n// @type string or null\n\n$class-clearfix: 'clearfix' !default;\n$class-remove-clearfix: 'remove-clearfix' !default;\n\n$class-float-left: 'float-left' !default;\n$class-float-right: 'float-right' !default;\n\n$class-show: 'show' !default;\n$class-hide: 'hide' !default;\n$class-show-hide-min: 'down' !default;\n$class-show-hide-max: 'up' !default;\n\n// Typography settings\n// @desc Default values for typography properties.\n// @type property values\n\n$font-family-sans: -apple-system, system-ui, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Helvetica Neue\", Arial, sans-serif !default;\n$font-family-serif: georgia, \"Times New Roman\", times, serif !default;\n$font-family-mono: Menlo, Monaco, Consolas, \"Courier New\", monospace !default;\n\n$base-font-family: $font-family-sans !default;\n$base-font-size: 16px !default;\n$base-line-height: 1.5em !default;\n$base-font-weight: font-weight('normal') !default;\n\n$color: $gray-800 !default;\n$color-light: $gray !default;\n$color-dark: $gray-900 !default;\n\n// Text output options\n// @desc Whether or not to output default text element styles and/or modifiers.\n// @type boolean\n\n$text-elements: true !default;\n$text-modifiers: true !default;\n\n// Anchors Map\n// @desc Default styles for anchor elements.\n// @type map\n\n$anchors: (\n  'output' : true,\n  'color' : $blue,\n  'border-bottom' : 1px solid rgba($black, 0.1),\n  'text-decoration' : none,\n  'hover' : (\n    'color' : $blue-700,\n    'border-color' : $blue-700,\n  ),\n) !default;\n\n// Headings Map\n// @desc Default styles for heading elements.\n// @type map\n\n$headings: (\n  'output' : true,\n  'margin' : 1rem 0,\n  'font-family' : inherit,\n  'line-height' : 1.25em,\n  'font-weight' : font-weight('semi-bold'),\n  'color' : $color-dark,\n  'anchors' : (\n    'output' : true,\n    'color' : $color-dark,\n    'border' : none,\n    'hover' : (\n      'color' : $blue,\n    ),\n  ),\n  'scale' : (\n    'h1' : 2.5em,\n    'h2' : 2em,\n    'h3' : 1.75em,\n    'h4' : 1.5em,\n    'h5' : 1.25em,\n    'h6' : 1em,\n  ),\n) !default;\n\n// Anchors Shorthands\n$anchor-color: map-get($anchors, 'color') !default;\n$anchor-hover-color: map-fetch($anchors, 'hover', 'color') !default;\n\n// Headings Shorthands\n$heading-color: map-get($headings, 'color') !default;\n$heading-anchor-color: map-fetch($headings, 'anchors', 'color') !default;\n$heading-anchor-hover-color: map-fetch($headings, 'anchors', 'hover', 'color') !default;\n\n// Add Styles Map\n// @desc Default settings used in the add-styles mixin.\n// @type map\n\n$add-styles: (\n  'output-base' : true,\n  'output-pseudo' : true,\n  'properties' : (\n    'cursor',\n    'display',\n    'float',\n    'width',\n    'height',\n    'margin',\n    'margin-top',\n    'margin-left',\n    'margin-right',\n    'margin-bottom',\n    'padding',\n    'padding-top',\n    'padding-left',\n    'padding-right',\n    'padding-bottom',\n    'vertical-align',\n    'content',\n    'font-family',\n    'font-size',\n    'line-height',\n    'font-weight',\n    'text-align',\n    'text-indent',\n    'white-space',\n    'letter-spacing',\n    'overflow',\n    'color',\n    'text-shadow',\n    'text-decoration',\n    'background',\n    'background-color',\n    'background-clip',\n    'box-shadow',\n    'border',\n    'border-top',\n    'border-left',\n    'border-right',\n    'border-bottom',\n    'border-color',\n    'border-radius',\n    'transition',\n    'transition-property',\n    'transition-duration',\n    'transition-timing-function',\n    'transition-duration',\n  ),\n  'pseudo-classes' : (\n    'hover',\n    'focus',\n    'active',\n    'visited',\n  ),\n) !default;\n","// Set file variable\n$filename: 'scss/core/_grid.scss';\n\n////////////////////////////////////////////////////////////////////////////////\n// @Grid Map\n////////////////////////////////////////////////////////////////////////////////\n\n$grid: (\n  'output' : true,\n  'output-mobile' : true,\n\n  'class-container' : 'container',\n  'class-row' : 'row',\n  'class-column' : 'col',\n  'class-column-left' : 'col-left',\n  'class-column-right' : 'col-right',\n  'class-prefix' : 'prefix',\n  'class-suffix' : 'suffix',\n\n  'type' : 'normal',\n\n  'total-width' : 100%,\n  'gutter-width' : 0,\n  'inner-gutter-width' : 1.5rem,\n\n  'columns' : 12,\n  'column-float' : left,\n\n  'container-margin' : 0 auto,\n  'container-padding' : 0 1.5rem,\n  'container-min-width' : none,\n  'container-max-width' : 75rem,\n\n) !default;\n\n////////////////////////////////////////////////////////////////////////////////\n// @Grid Functions\n////////////////////////////////////////////////////////////////////////////////\n\n// Column Width\n// A function that returns the width of a column span.\n// @param $index\n//   @type integer\n//   @desc The number of column span you want returned.\n// @param $options\n//   @type map\n//   @default $grid map\n// @return unit (pixel, percentage)\n@function column-width($index, $options: ()) {\n  $o: map-merge($grid, $options);\n  $column-width: (map-get($o, 'total-width') - (map-get($o, 'gutter-width') * (map-get($o, 'columns') - 1))) / map-get($o, 'columns');\n  @return ($column-width * $index) + (map-get($o, 'gutter-width') * ($index - 1));\n}\n\n// Spacing Width\n// A function that returns the spacing of a column span.\n// @param $index\n//   @type integer\n//   @desc The number of column spacing you want returned.\n// @param $options\n//   @type map\n//   @default $grid map\n// @return unit (pixel, percentage)\n@function spacing-width($index, $options: ()) {\n  $o: map-merge($grid, $options);\n  $column-width : column-width( 1, $o );\n  @return ($column-width * $index) + (map-get($o, 'gutter-width') * $index);\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// @Semantic Grid Mixins\n////////////////////////////////////////////////////////////////////////////////\n\n// Make Container\n// Outputs all the styles needed to make an element a grid container.\n// @param $options\n//   @type map\n//   @default $grid map\n@mixin make-container($options: ()) {\n  $o: map-merge($grid, $options);\n  box-sizing: border-box;\n  @if (map-get($o, 'type') == 'mobile') {\n    width: 100%;\n    @if (map-get($o, 'container-min-width')) {\n      min-width: none;\n    }\n    @if (map-get($o, 'container-max-width')) {\n      max-width: none;\n    }\n    margin: 0;\n    padding: map-get($o, 'container-padding');\n  } @else {\n    width: map-get($o, 'total-width');\n    @if (map-get($o, 'container-min-width')) {\n      min-width: map-get($o, 'container-min-width');\n    }\n    @if (map-get($o, 'container-max-width')) {\n      max-width: map-get($o, 'container-max-width');\n    }\n    margin: map-get($o, 'container-margin');\n    padding: map-get($o, 'container-padding');\n    @include add-clearfix();\n  }\n}\n\n// Make Row\n// Outputs all the styles needed to make an element a grid row.\n// @param $options\n//   @type map\n//   @default $grid map\n@mixin make-row($options: ()) {\n  $o: map-merge($grid, $options);\n  box-sizing: border-box;\n  @if (map-get($o, 'type') == 'mobile') {\n    width: 100%;\n    @if (map-get($o, 'inner-gutter-width') != 0) {\n      margin-left: 0;\n      margin-right: 0;\n    }\n  } @else {\n    width: auto;\n    @if (map-get($o, 'inner-gutter-width') != 0) {\n      margin-left: -(map-get($o, 'inner-gutter-width') / 2);\n      margin-right: -(map-get($o, 'inner-gutter-width') / 2);\n    }\n    @include add-clearfix();\n  }\n}\n\n// Make Base Column\n// Creates the base styles for a column but excludes setting the width.\n// @param $options\n//   @type map\n//   @default $grid map\n@mixin make-column-base($options: ()) {\n  $o: map-merge($grid, $options);\n  box-sizing: border-box;\n  @if (map-get($o, 'type') == 'mobile') {\n    width: 100%;\n    float: none;\n    @if (map-get($o, 'gutter-width') != 0) {\n      margin-left: 0;\n    }\n    @if (map-get($o, 'inner-gutter-width') != 0) {\n      padding-left: 0;\n      padding-right: 0;\n    }\n  } @else {\n    min-height: 1px;\n    float: map-get($o, 'column-float');\n    &.#{map-get($o, 'class-column-left')} {\n      float: left;\n    }\n    &.#{map-get($o, 'class-column-right')} {\n      float: right;\n    }\n    @if (map-get($o, 'gutter-width') != 0) {\n      margin-left: map-get($o, 'gutter-width');\n      &:first-child {\n        margin-left: 0;\n      }\n    }\n    @if (map-get($o, 'inner-gutter-width') != 0) {\n      padding-left: (map-get($o, 'inner-gutter-width') / 2);\n      padding-right: (map-get($o, 'inner-gutter-width') / 2);\n    }\n  }\n}\n\n// Make Column\n// Creates all the styles for a column and sets its width.\n// @param $index\n//   @type integer\n//   @desc The number of column span you want set.\n// @param $options\n//   @type map\n//   @default $grid map\n@mixin make-column($index, $options: ()) {\n  $o: map-merge($grid, $options);\n  @include make-column-base($o);\n  width: column-width($index, $o);\n}\n\n// Add Prefix\n// Creates the base styles for a column and sets its width.\n// @param $index\n//   @type integer\n//   @desc The number of column prefix spacing you want set.\n// @param $options\n//   @type map\n//   @default $grid map\n@mixin add-prefix($index, $options: ()) {\n  $o: map-merge($grid, $options);\n  @if (map-get($o, 'gutter-width') != 0) {\n    margin-left: (spacing-width($index, $o) + map-get($o, 'gutter-width'));\n    &:first-child {\n      margin-left: spacing-width($index, $o);\n    }\n  } @else {\n    margin-left: spacing-width($index, $o);\n  }\n}\n\n// Add Suffix\n// Creates the base styles for a spacing suffix.\n// @param $index\n//   @type integer\n//   @desc The number of column suffix spacing you want set.\n// @param $options\n//   @type map\n//   @default $grid map\n@mixin add-suffix($index, $options: ()) {\n  $o: map-merge($grid, $options);\n  margin-right: spacing-width($index, $o);\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// @Build Grid Mixins\n////////////////////////////////////////////////////////////////////////////////\n\n// Build Grid System\n// Outputs all the classes and styles for the class based grid system.\n// @param $grid-type | $options\n//   @type string | map\n//   @default $grid map\n@mixin build-grid-system($options: 'normal') {\n  $o: null;\n\n  // Check if options is map or not\n  // If it's a map, merge it with our global grid map\n  // Else set options as our grid type\n  @if (type-of($options) == map) {\n    $o: map-merge($grid, $options);\n  } @else {\n    $o: map-merge( $grid, ('type': $options));\n  }\n\n  // Output our container class\n  .#{map-get($o, 'class-container')} {\n    @include make-container($o);\n  }\n\n  // Output our row class\n  .#{map-get($o, 'class-row')} {\n    @include make-row($o);\n  }\n\n  // Output our column class\n  .#{map-get($o, 'class-column')} {\n    @include make-column-base($o);\n  }\n\n  // Check that this is not a mobile grid type\n  @if (map-get($o, 'type') != 'mobile') {\n\n    @if (map-get($o, 'gutter-width') != 0) {\n      .#{map-get($o, 'class-column')}-no-gutter {\n        margin-left: 0;\n      }\n    }\n    @if (map-get($o, 'inner-gutter-width') != 0) {\n      .#{map-get($o, 'class-column')}-no-inner-gutter {\n        padding-left: 0;\n        padding-right: 0;\n      }\n    }\n\n    // Output our column classes\n    @for $i from 1 through map-get($o, 'columns') {\n      .#{map-get($o, 'class-column')}-#{$i} {\n        width: column-width( $i, $o );\n      }\n    }\n\n    // Output our prefix classes if a class name is set\n    @if (map-get($o, 'class-prefix')) {\n      @for $i from 1 through (map-get($o, 'columns') - 1) {\n        .#{map-get($o, 'class-prefix')}-#{$i} {\n          @include add-prefix( $i, $o );\n        }\n      }\n    }\n\n    // Output our suffix classes if a class name is set\n    @if (map-get($o, 'class-suffix')) {\n      @for $i from 1 through (map-get($o, 'columns') - 1) {\n        .#{map-get($o, 'class-suffix')}-#{$i} {\n          @include add-suffix( $i, $o );\n        }\n      }\n    }\n  } // End if not mobile\n}\n","////////////////////////////////////////////////////////////////////////////////\n// @Media Queries\n////////////////////////////////////////////////////////////////////////////////\n\n// Local Breakpoints Map\n// @type map\n$tweakpoints: () !default;\n\n// Global Breakpoints Map\n// @type map\n$breakpoints: (\n  'small'  : 480px,\n  'medium' : 760px,\n  'large'  : 990px,\n  'huge'   : 1380px\n) !default;\n\n////////////////////////////////////////////////////////////////////////////////\n// @Media Query Mixins\n////////////////////////////////////////////////////////////////////////////////\n\n// Media Min\n// A media query mixin that deifnes a query using min-width. You can pass in the\n// key to the `$teakpoints()` or `$breakpoints()` maps to access that value, or\n// pass a value to create your media query.\n// @param $point\n//   @type map key | unit (pixel, em, rem)\n// @param @content (passed in brackets)\n//   @type style block\n@mixin media-min($point) {\n  @if map-has-key($tweakpoints, $point) {\n    @media (min-width: map-get($tweakpoints, $point)) {\n      @content;\n    }\n  } @else if map-has-key($breakpoints, $point) {\n    @media (min-width: map-get($breakpoints, $point)) {\n      @content;\n    }\n  } @else {\n    @if (type-of($point) == number) {\n      @media (min-width: $point) {\n        @content;\n      }\n    }\n  }\n}\n\n// Media Max\n// A media query mixin that deifnes a query using max-width. You can pass in the\n// key to the `$teakpoints()` or `$breakpoints()` maps to access that value, or\n// pass a value to create your media query. This mixin will shave a pixel off\n// your breakpoint value so that it never overlaps with a breakpoint that might\n// be used in the `media-min` mixin except when a value is passed directly.\n// @param $point\n//   @type map key | unit (pixel, em, rem)\n// @param @content (passed in brackets)\n//   @type style block\n@mixin media-max($point) {\n  @if map-has-key($tweakpoints, $point) {\n    @media (max-width: (map-get($tweakpoints, $point) - 1)) {\n      @content;\n    }\n  } @else if map-has-key($breakpoints, $point) {\n    @media (max-width: (map-get($breakpoints, $point) - 1)) {\n      @content;\n    }\n  } @else {\n    @if (type-of($point) == number) {\n      @media (max-width: $point) {\n        @content;\n      }\n    }\n  }\n}\n\n// Retina Media Query\n// Media query mixin can be used for setting styles specifically to retina\n// screens. Used when setting higher resolution background images.\n// @param @content (passed in brackets)\n//   @type style block\n@mixin media-retina() {\n  @media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {\n    @content;\n  }\n}\n","////////////////////////////////////////////////////////////////////////////////\n// @Mixins\n////////////////////////////////////////////////////////////////////////////////\n\n// Add Clearfix\n// Allows you to apply a clearfix to an element that contains floats.\n@mixin add-clearfix() {\n  &:after {\n    content: '';\n    display: table;\n    clear: both;\n  }\n}\n\n// Remove Clearfix\n// Removes the clearfix styles from an element. This is typically used when a\n// clearfix is inherited on an element and you'd like it removed.\n@mixin remove-clearfix() {\n  &:after {\n    content: none;\n    display: none;\n    clear: none;\n  }\n}\n\n// Add Float Modifiers\n// Adds the float modifier classes to an element.\n// @param $left\n//   @type class name\n//   @default $class-float-left\n// @param $right\n//   @type class name\n//   @default $class-float-right\n@mixin add-float-modifiers($left: $class-float-left, $right: $class-float-right) {\n  @if $left {\n    &.#{$left} {\n      float: left;\n    }\n  }\n  @if $right {\n    &.#{$right} {\n      float: right;\n    }\n  }\n}\n\n// Add Size\n// Shorthand for adding width and height dimensions to an element. If you only\n// pass in a width, the height will be set to equal the width and create a\n// square. If either the width or height are unit-less, it defaults to pixels.\n// @param $width\n//   @type unit (number, pixel, percentage)\n// @param $height\n//   @type unit (number, pixel, percentage, false)\n//   @default false -> $width\n@mixin add-size(\n    $width,\n    $height : false\n  ) {\n  @if ($width != auto) {\n    @if ($width != none) {\n      @if unitless($width) {\n        $width: 1px * $width;\n      }\n    }\n  }\n  @if ($height != auto) {\n    @if ($height != none) {\n      @if ($height != false) {\n        @if unitless($height) {\n          $height: 1px * $height;\n        }\n      } @else {\n        $height: $width;\n      }\n    }\n  }\n  width: $width;\n  height: $height;\n}\n\n// Vertical Center\n// Centers an element vertically within its parent. Parent element may need to\n// have transform-style set to `preserve-3d` to prevent half pixel bluring.\n// @param $percent\n//   @type unit (percentage)\n//   @default 50%\n@mixin add-vertical-center($percent: 50%) {\n  position: relative;\n  top: $percent;\n  transform: translateY(-$percent);\n}\n\n\n// Scrollable\n// Makes touch devices use momentum-based scrolling for the given element.\n@mixin add-scrollable() {\n  overflow-y: scroll;\n  -webkit-overflow-scrolling: touch;\n  transition: top linear 0.2s, bottom linear 0.2s;\n}\n\n// Make Triangle\n// Creates the base styles for creating CSS triangles.\n@mixin make-triangle() {\n  content: '';\n  display: inline-block;\n  width: 0;\n  height: 0;\n  border: none;\n  border-style: solid;\n  border-color: transparent;\n}\n\n// Add Triangle Styles\n// Uses the \"0x0\" element with borders trick to draw arrow size, color and direction.\n// @param $size\n//   @type unit (pixel, em, rem)\n// @param $color\n//   @type color\n// @param $direction\n//   @desc The direction that the triangle will point.\n//   @type string\n//   @options 'up', 'right', 'down', 'left', 'up-right', 'up-left', 'down-right', 'down-left'\n@mixin add-triangle-styles( $size, $color, $direction ) {\n  border-color: transparent;\n  @if ($direction == 'up') {\n    border-width: 0 $size $size $size;\n    border-bottom-color: $color;\n  } @else if ($direction == 'right') {\n    border-width: $size 0 $size $size;\n    border-left-color: $color;\n  } @else if ($direction == 'down') {\n    border-width: $size $size 0 $size;\n    border-top-color: $color;\n  } @else if ($direction == 'left') {\n    border-width: $size $size $size 0;\n    border-right-color: $color;\n  } @else if ($direction == 'up right' or $direction == 'right up') {\n    border-width: $size;\n    border-top-color: $color;\n    border-right-color: $color;\n  } @else if ($direction == 'up left' or $direction == 'left up') {\n    border-width: $size;\n    border-top-color: $color;\n    border-left-color: $color;\n  } @else if ($direction == 'down right' or $direction == 'right down') {\n    border-width: $size;\n    border-bottom-color: $color;\n    border-right-color: $color;\n  } @else if ($direction == 'down left' or $direction == 'left down') {\n    border-width: $size;\n    border-bottom-color: $color;\n    border-left-color: $color;\n  } @else {\n    @warn \"#{$direction} is not a valid direction for @mixin triangle\";\n  }\n}\n\n// Add Truncate Text\n// Truncates text with an ellipsis. Element this is applied to must be block\n// or inline-block.\n// @param $display\n//   @type display property (block, inline-block)\n//   @default block\n@mixin add-text-truncate( $display : block ) {\n  @if ($display == inline-block or $display == block) {\n    display: $display;\n  }\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n// Add Hide text\n// Hides text from an element. This is most commonly used as an image\n// replacement technique for hiding text in an element to reveal a\n// background image.\n@mixin add-text-hide() {\n  font-size: 0;\n  line-height: 0;\n  text-indent: 100%;\n  white-space: nowrap;\n  overflow: hidden;\n}\n\n// Make Anchor\n// Creates the base anchor styles using the $anchors map for defaults.\n// @param $options\n//   @type map\n//   @default $anchors map\n@mixin make-anchor($options: ()) {\n  $o: map-extend($anchors, $options, true);\n  @include add-styles($o);\n}\n\n// Build Headings\n// Creates the base styles for headings using the $headings map for defaults.\n// @param $options\n//   @type map\n//   @default $headings map\n@mixin build-headings($options: ()) {\n  $o: map-extend($headings, $options, true);\n\n  h1, h2, h3, h4, h5, h6,\n  .h1, .h2, .h3, .h4, .h5, .h6 {\n    @include add-styles($o);\n\n    @if map-fetch($o, 'anchors', 'output') {\n      a {\n        @include make-anchor(map-get($o, 'anchors'));\n      }\n    }\n  }\n\n  @if map-has-key($o, 'scale') {\n    @each $heading, $size in map-get($o, 'scale') {\n      #{$heading}, .#{$heading} {\n        font-size: $size;\n      }\n    }\n  }\n}\n\n// Add Styles\n// Output styles from a component map based on the approved properties and pseudo-classes.\n// @param $input\n//   @desc The styles object to inject properties from\n//   @type map\n//   @default ()\n// @param $settings\n//   @desc Output options and approved pseudo classes and properties\n//   @type map\n//   @default $add-styles\n@mixin add-styles($input: (), $settings: ()) {\n  $s: map-merge($add-styles, $settings);\n\n  // Check if we should output base modifier styles\n  @if map-get($s, 'output-base') {\n    // Loop through properties and set them if they exist\n    @each $prop in map-get($s, 'properties') {\n      @if (map-has-key($input, $prop)) {\n        #{$prop}: map-get($input, $prop);\n      }\n    }\n  }\n\n  // Check if we should output pseudo-class styles\n  @if map-get($s, 'output-pseudo') {\n    // Loop through pseudo-classes and see if they exist in $input\n    @each $pseudo in map-get($s, 'pseudo-classes') {\n      @if (map-has-key($input, $pseudo)) {\n        &:#{$pseudo} {\n          // Loop through properties and set them if they exist\n          @each $prop in map-get($s, 'properties') {\n            @if (map-has-key(map-get($input, $pseudo), $prop)) {\n              #{$prop}: map-fetch($input, $pseudo, $prop);\n            }\n          }\n        }\n      }\n    }\n  }\n\n}\n\n// Add Modifiers\n// Output an array of modifiers for flat components.\n// @param $input\n//   @desc The styles object with optional modifiers to inject properties from\n//   @type map\n//   @default ()\n// @param $key\n//   @desc Specific key to putput from modifiers or null for all\n//   @type String, null\n//   @default null\n// @param $selector\n//   @desc Whether or not to putput a selector\n//   @type boolean\n//   @default true\n// @param $settings\n//   @desc Simply passed on to add-styles()\n//   @type map\n//   @default $add-styles\n@mixin add-modifiers($input: (), $key: null, $selector: true, $settings: ()) {\n  $s: map-merge($add-styles, $settings);\n\n  // Grab the modifier map if it exists\n  @if (map-has-key($input, 'modifiers')) {\n    $input: map-get($input, 'modifiers');\n  }\n\n  // If an output is passed, re-map the input to the selected key.\n  // Also, we don't want to output the default modifier class.\n  @if ($key) {\n    @each $name, $map in $input {\n      @if ($key == $name) {\n        $input: ($name: $map);\n      }\n    }\n  } @else {\n    $input: map-remove($input, 'default');\n  }\n\n  // Loop through our input modifiers\n  @each $name, $map in $input {\n\n    @if ($selector) {\n      @if (map-has-key($map, 'selector')) {\n        $selector: map-get($map, 'selector');\n      } @else {\n        $selector: '&.' + $name;\n      }\n      #{$selector} {\n        @include add-styles($map, $settings);\n      }\n    } @else {\n      @include add-styles($map, $settings);\n    }\n\n  }\n\n}\n","// Set file variable\n$filename: 'scss/elements/_typography.scss';\n\n/*==============================================================================\n  @Typography - #{$filename}\n===============================================================================*/\n\nhtml {\n  font-size: $base-font-size;\n}\n\nbody {\n  font-family: $base-font-family;\n  font-size: $base-font-size;\n  line-height: $base-line-height;\n  font-weight: $base-font-weight;\n  color: $color;\n  -webkit-font-smoothing: subpixel-antialiased;\n}\n\n@if map-get($anchors, 'output') {\n  a {\n    @include make-anchor();\n  }\n}\n\n@if map-get($headings, 'output') {\n  @include build-headings();\n}\n\n@if $text-elements {\n\n  p {\n    margin: 1em 0;\n  }\n  strong {\n    font-weight: bold;\n  }\n  em {\n    font-style: italic;\n  }\n  small {\n    font-size: 0.8em;\n  }\n  mark {\n    background: rgba(#ff0, 0.5);\n  }\n  cite {\n    font-style: italic;\n  }\n  abbr[title],\n  abbr[data-original-title] {\n    cursor: help;\n    text-decoration: underline dotted;\n  }\n\n}\n\n@if $text-modifiers {\n\n  .text-lead {\n    font-size: px-to-em(24px);\n    line-height: 1.4em;\n    color: $color-dark;\n    font-weight: font-weight('light');\n\n    a {\n      text-decoration: none;\n    }\n  }\n\n  .text-small {\n    font-size: 0.8em;\n    line-height: 1.5em;\n  }\n  .text-soften {\n    font-weight: $base-font-weight;\n    color: $color-light;\n  }\n  .text-harden {\n    font-weight: bold;\n    color: $color-dark;\n  }\n\n  .text-left {\n    text-align: left;\n  }\n  .text-center {\n    text-align: center;\n  }\n  .text-right {\n    text-align: right;\n  }\n  .text-justify {\n    text-align: justify;\n  }\n  .text-nowrap {\n    white-space: nowrap;\n  }\n\n  .text-lowercase {\n    text-transform: lowercase;\n  }\n  .text-uppercase {\n    text-transform: uppercase;\n  }\n  .text-capitalize {\n    text-transform: capitalize;\n  }\n\n}\n","////////////////////////////////////////////////////////////////////////////////\n// @Colors\n////////////////////////////////////////////////////////////////////////////////\n\n// Red\n$red-50:  #FFEBEE !default;\n$red-100: #FFCDD2 !default;\n$red-200: #EF9A9A !default;\n$red-300: #E57373 !default;\n$red-400: #EF5350 !default;\n$red-500: #F44336 !default;\n$red-600: #E53935 !default;\n$red-700: #D32F2F !default;\n$red-800: #C62828 !default;\n$red-900: #B71C1C !default;\n$red: $red-500 !default;\n\n// Red Accent\n$red-a100: #FF8A80 !default;\n$red-a200: #FF5252 !default;\n$red-a400: #FF1744 !default;\n$red-a700: #D50000 !default;\n$red-a: $red-a200 !default;\n\n// Pink\n$pink-50:  #FCE4EC !default;\n$pink-100: #F8BBD0 !default;\n$pink-200: #F48FB1 !default;\n$pink-300: #F06292 !default;\n$pink-400: #EC407A !default;\n$pink-500: #E91E63 !default;\n$pink-600: #D81B60 !default;\n$pink-700: #C2185B !default;\n$pink-800: #AD1457 !default;\n$pink-900: #880E4F !default;\n$pink: $pink-500 !default;\n\n// Pink Accent\n$pink-a100: #FF80AB !default;\n$pink-a200: #FF4081 !default;\n$pink-a400: #F50057 !default;\n$pink-a700: #C51162 !default;\n$pink-a: $pink-a200 !default;\n\n// Purple\n$purple-50:  #F3E5F5 !default;\n$purple-100: #E1BEE7 !default;\n$purple-200: #CE93D8 !default;\n$purple-300: #BA68C8 !default;\n$purple-400: #AB47BC !default;\n$purple-500: #9C27B0 !default;\n$purple-600: #8E24AA !default;\n$purple-700: #7B1FA2 !default;\n$purple-800: #6A1B9A !default;\n$purple-900: #4A148C !default;\n$purple: $purple-500 !default;\n\n// Purple Accent\n$purple-a100: #EA80FC !default;\n$purple-a200: #E040FB !default;\n$purple-a400: #D500F9 !default;\n$purple-a700: #AA00FF !default;\n$purple-a: $purple-a200 !default;\n\n// Deep Purple\n$deep-purple-50:  #EDE7F6 !default;\n$deep-purple-100: #D1C4E9 !default;\n$deep-purple-200: #B39DDB !default;\n$deep-purple-300: #9575CD !default;\n$deep-purple-400: #7E57C2 !default;\n$deep-purple-500: #673AB7 !default;\n$deep-purple-600: #5E35B1 !default;\n$deep-purple-700: #512DA8 !default;\n$deep-purple-800: #4527A0 !default;\n$deep-purple-900: #311B92 !default;\n$deep-purple: $deep-purple-500 !default;\n\n// Deep Blue Accent\n$deep-purple-a100: #B388FF !default;\n$deep-purple-a200: #7C4DFF !default;\n$deep-purple-a400: #651FFF !default;\n$deep-purple-a700: #6200EA !default;\n$deep-purple-a: $deep-purple-a200 !default;\n\n// Indigo\n$indigo-50:  #E8EAF6 !default;\n$indigo-100: #C5CAE9 !default;\n$indigo-200: #9FA8DA !default;\n$indigo-300: #7986CB !default;\n$indigo-400: #5C6BC0 !default;\n$indigo-500: #3F51B5 !default;\n$indigo-600: #3949AB !default;\n$indigo-700: #303F9F !default;\n$indigo-800: #283593 !default;\n$indigo-900: #1A237E !default;\n$indigo: $indigo-500 !default;\n\n// Indigo Accent\n$indigo-a100: #8C9EFF !default;\n$indigo-a200: #536DFE !default;\n$indigo-a400: #3D5AFE !default;\n$indigo-a700: #304FFE !default;\n$indigo-a: $indigo-a200 !default;\n\n// Blue\n$blue-50:  #E3F2FD !default;\n$blue-100: #BBDEFB !default;\n$blue-200: #90CAF9 !default;\n$blue-300: #64B5F6 !default;\n$blue-400: #42A5F5 !default;\n$blue-500: #2196F3 !default;\n$blue-600: #1E88E5 !default;\n$blue-700: #1976D2 !default;\n$blue-800: #1565C0 !default;\n$blue-900: #0D47A1 !default;\n$blue: $blue-500 !default;\n\n// Blue Accent\n$blue-a100: #82B1FF !default;\n$blue-a200: #448AFF !default;\n$blue-a400: #2979FF !default;\n$blue-a700: #2962FF !default;\n$blue-a: $blue-a200 !default;\n\n// Light Blue\n$light-blue-50:  #E1F5FE !default;\n$light-blue-100: #B3E5FC !default;\n$light-blue-200: #81D4FA !default;\n$light-blue-300: #4FC3F7 !default;\n$light-blue-400: #29B6F6 !default;\n$light-blue-500: #03A9F4 !default;\n$light-blue-600: #039BE5 !default;\n$light-blue-700: #0288D1 !default;\n$light-blue-800: #0277BD !default;\n$light-blue-900: #01579B !default;\n$light-blue: $light-blue-500 !default;\n\n// Light Blue Accent\n$light-blue-a100: #80D8FF !default;\n$light-blue-a200: #40C4FF !default;\n$light-blue-a400: #00B0FF !default;\n$light-blue-a700: #0091EA !default;\n$light-blue-a: $light-blue-a200 !default;\n\n// Cyan\n$cyan-50:  #E0F7FA !default;\n$cyan-100: #B2EBF2 !default;\n$cyan-200: #80DEEA !default;\n$cyan-300: #4DD0E1 !default;\n$cyan-400: #26C6DA !default;\n$cyan-500: #00BCD4 !default;\n$cyan-600: #00ACC1 !default;\n$cyan-700: #0097A7 !default;\n$cyan-800: #00838F !default;\n$cyan-900: #006064 !default;\n$cyan: $cyan-500 !default;\n\n// Cyan Accent\n$cyan-a100: #84FFFF !default;\n$cyan-a200: #18FFFF !default;\n$cyan-a400: #00E5FF !default;\n$cyan-a700: #00B8D4 !default;\n$cyan-a: $cyan-a200 !default;\n\n// Teal\n$teal-50:  #E0F2F1 !default;\n$teal-100: #B2DFDB !default;\n$teal-200: #80CBC4 !default;\n$teal-300: #4DB6AC !default;\n$teal-400: #26A69A !default;\n$teal-500: #009688 !default;\n$teal-600: #00897B !default;\n$teal-700: #00796B !default;\n$teal-800: #00695C !default;\n$teal-900: #004D40 !default;\n$teal: $teal-500 !default;\n\n// Teal Accent\n$teal-a100: #A7FFEB !default;\n$teal-a200: #64FFDA !default;\n$teal-a400: #1DE9B6 !default;\n$teal-a700: #00BFA5 !default;\n$teal-a: $teal-a200 !default;\n\n// Green\n$green-50:  #E8F5E9 !default;\n$green-100: #C8E6C9 !default;\n$green-200: #A5D6A7 !default;\n$green-300: #81C784 !default;\n$green-400: #66BB6A !default;\n$green-500: #4CAF50 !default;\n$green-600: #43A047 !default;\n$green-700: #388E3C !default;\n$green-800: #2E7D32 !default;\n$green-900: #1B5E20 !default;\n$green: $green-500 !default;\n\n// Green Accent\n$green-a100: #B9F6CA !default;\n$green-a200: #69F0AE !default;\n$green-a400: #00E676 !default;\n$green-a700: #00C853 !default;\n$green-a: $green-a200 !default;\n\n// Light Green\n$light-green-50:  #F1F8E9 !default;\n$light-green-100: #DCEDC8 !default;\n$light-green-200: #C5E1A5 !default;\n$light-green-300: #AED581 !default;\n$light-green-400: #9CCC65 !default;\n$light-green-500: #8BC34A !default;\n$light-green-600: #7CB342 !default;\n$light-green-700: #689F38 !default;\n$light-green-800: #558B2F !default;\n$light-green-900: #33691E !default;\n$light-green: $light-green-500 !default;\n\n// Light Green Accent\n$light-green-a100: #CCFF90 !default;\n$light-green-a200: #B2FF59 !default;\n$light-green-a400: #76FF03 !default;\n$light-green-a700: #64DD17 !default;\n$light-green-a: $light-green-a200 !default;\n\n// Lime\n$lime-50:  #F9FBE7 !default;\n$lime-100: #F0F4C3 !default;\n$lime-200: #E6EE9C !default;\n$lime-300: #DCE775 !default;\n$lime-400: #D4E157 !default;\n$lime-500: #CDDC39 !default;\n$lime-600: #C0CA33 !default;\n$lime-700: #AFB42B !default;\n$lime-800: #9E9D24 !default;\n$lime-900: #827717 !default;\n$lime: $lime-500 !default;\n\n// Lime Accent\n$lime-a100: #F4FF81 !default;\n$lime-a200: #EEFF41 !default;\n$lime-a400: #C6FF00 !default;\n$lime-a700: #AEEA00 !default;\n$lime-a: $lime-a200 !default;\n\n// Yellow\n$yellow-50:  #FFFDE7 !default;\n$yellow-100: #FFF9C4 !default;\n$yellow-200: #FFF59D !default;\n$yellow-300: #FFF176 !default;\n$yellow-400: #FFEE58 !default;\n$yellow-500: #FFEB3B !default;\n$yellow-600: #FDD835 !default;\n$yellow-700: #FBC02D !default;\n$yellow-800: #F9A825 !default;\n$yellow-900: #F57F17 !default;\n$yellow: $yellow-500 !default;\n\n// Yellow Accent\n$yellow-a100: #FFFF8D !default;\n$yellow-a200: #FFFF00 !default;\n$yellow-a400: #FFEA00 !default;\n$yellow-a700: #FFD600 !default;\n$yellow-a: $yellow-a200 !default;\n\n// Amber\n$amber-50:  #FFF8E1 !default;\n$amber-100: #FFECB3 !default;\n$amber-200: #FFE082 !default;\n$amber-300: #FFD54F !default;\n$amber-400: #FFCA28 !default;\n$amber-500: #FFC107 !default;\n$amber-600: #FFB300 !default;\n$amber-700: #FFA000 !default;\n$amber-800: #FF8F00 !default;\n$amber-900: #FF6F00 !default;\n$amber: $amber-500 !default;\n\n// Amber Accent\n$amber-a100: #FFE57F !default;\n$amber-a200: #FFD740 !default;\n$amber-a400: #FFC400 !default;\n$amber-a700: #FFAB00 !default;\n$amber-a: $amber-a200 !default;\n\n// Orange\n$orange-50:  #FFF3E0 !default;\n$orange-100: #FFE0B2 !default;\n$orange-200: #FFCC80 !default;\n$orange-300: #FFB74D !default;\n$orange-400: #FFA726 !default;\n$orange-500: #FF9800 !default;\n$orange-600: #FB8C00 !default;\n$orange-700: #F57C00 !default;\n$orange-800: #EF6C00 !default;\n$orange-900: #E65100 !default;\n$orange: $orange-500 !default;\n\n// Orange Accent\n$orange-a100: #FFD180 !default;\n$orange-a200: #FFAB40 !default;\n$orange-a400: #FF9100 !default;\n$orange-a700: #FF6D00 !default;\n$orange-a: $orange-a200 !default;\n\n// Deep Orange\n$deep-orange-50:  #FBE9E7 !default;\n$deep-orange-100: #FFCCBC !default;\n$deep-orange-200: #FFAB91 !default;\n$deep-orange-300: #FF8A65 !default;\n$deep-orange-400: #FF7043 !default;\n$deep-orange-500: #FF5722 !default;\n$deep-orange-600: #F4511E !default;\n$deep-orange-700: #E64A19 !default;\n$deep-orange-800: #D84315 !default;\n$deep-orange-900: #BF360C !default;\n$deep-orange: $deep-orange-500 !default;\n\n// Deep Orange Accent\n$deep-orange-a100: #FF9E80 !default;\n$deep-orange-a200: #FF6E40 !default;\n$deep-orange-a400: #FF3D00 !default;\n$deep-orange-a700: #DD2C00 !default;\n$deep-orange-a: $deep-orange-a200 !default;\n\n// Brown\n$brown-50:  #EFEBE9 !default;\n$brown-100: #D7CCC8 !default;\n$brown-200: #BCAAA4 !default;\n$brown-300: #A1887F !default;\n$brown-400: #8D6E63 !default;\n$brown-500: #795548 !default;\n$brown-600: #6D4C41 !default;\n$brown-700: #5D4037 !default;\n$brown-800: #4E342E !default;\n$brown-900: #3E2723 !default;\n$brown: $brown-500 !default;\n\n// Gray\n$gray-50:  #FAFAFA !default;\n$gray-100: #F5F5F5 !default;\n$gray-200: #EEEEEE !default;\n$gray-300: #E0E0E0 !default;\n$gray-400: #BDBDBD !default;\n$gray-500: #9E9E9E !default;\n$gray-600: #757575 !default;\n$gray-700: #616161 !default;\n$gray-800: #424242 !default;\n$gray-900: #212121 !default;\n$gray: $gray-500 !default;\n\n// Blue Gray\n$blue-gray-50:  #ECEFF1 !default;\n$blue-gray-100: #CFD8DC !default;\n$blue-gray-200: #B0BEC5 !default;\n$blue-gray-300: #90A4AE !default;\n$blue-gray-400: #78909C !default;\n$blue-gray-500: #607D8B !default;\n$blue-gray-600: #546E7A !default;\n$blue-gray-700: #455A64 !default;\n$blue-gray-800: #37474F !default;\n$blue-gray-900: #263238 !default;\n$blue-gray: $blue-gray-500 !default;\n\n// Black & White\n$black: #000 !default;\n$white: #fff !default;\n\n////////////////////////////////////////////////////////////////////////////////\n// @Social Colors Map\n////////////////////////////////////////////////////////////////////////////////\n\n$social: (\n  'twitter'     : #00aced,\n  'facebook'    : #3b5998,\n  'google'      : #dd4b39,\n  'googleplus'  : #dd4b39,\n  'pinterest'   : #cb2027,\n  'linkedin'    : #007bb6,\n  'youtube'     : #bb0000,\n  'vimeo'       : #1ab7ea,\n  'tumblr'      : #32506d,\n  'instagram'   : #bc2a8d,\n  'flickr'      : #ff0084,\n  'dribbble'    : #ea4c89,\n  'quora'       : #a82400,\n  'foursquare'  : #0072b1,\n  'forrst'      : #5B9A68,\n  'vk'          : #45668e,\n  'wordpress'   : #21759b,\n  'stumbleupon' : #EB4823,\n  'yahoo'       : #7B0099,\n  'blogger'     : #fb8f3d,\n  'soundcloud'  : #ff3a00,\n) !default;\n","////////////////////////////////////////////////////////////////////////////////\n// @Functions\n////////////////////////////////////////////////////////////////////////////////\n\n// Map Extend\n// jQuery-style extend function for when `map-merge()` isn't enough. Use when\n// we need to merge more than two maps and/or need a merge to be recursive.\n// @param $map\n//   @type first map\n// @param $maps\n//   @type list of maps\n// @param $deep\n//   @desc Whether or not to enable recursive mode.\n//   @type boolean\n//   @default false\n// @return merged map\n@function map-extend($map, $maps.../*, $deep */) {\n  $last: nth($maps, -1);\n  $deep: $last == true;\n  $max: if($deep, length($maps) - 1, length($maps));\n\n  // Loop through all maps in $maps...\n  @for $i from 1 through $max {\n    // Store current map\n    $current: nth($maps, $i);\n\n    // If not in deep mode, simply merge current map with map\n    @if not $deep {\n      $map: map-merge($map, $current);\n    } @else {\n      // If in deep mode, loop through all tuples in current map\n      @each $key, $value in $current {\n\n        // If value is a nested map and same key from map is a nested map as well\n        @if type-of($value) == \"map\" and type-of(map-get($map, $key)) == \"map\" {\n          // Recursive extend\n          $value: map-extend(map-get($map, $key), $value, true);\n        }\n\n        // Merge current tuple with map\n        $map: map-merge($map, ($key: $value));\n      }\n    }\n  }\n\n  @return $map;\n}\n\n// Map Fetch\n// An easy way to fetch a deep value in a multi-level map. Works much like\n// map-get() except that you pass multiple keys as the second variable argument\n// to go down multiple levels in the nested map.\n// @param $map\n//   @type map\n// @param $keys\n//   @type list\n// @return map value\n@function map-fetch($map, $keys...) {\n  @each $key in $keys {\n    $map: map-get($map, $key);\n  }\n  @return $map;\n}\n\n// Map Set\n// An easy way to set a deep value in a multi-level map. By passing in a map,\n// value and keys to the original map value you want changed.\n// @param $map\n//   @type map\n// @param $value\n//   @type value\n// @param $keys\n//   @type list\n// @return updated map value\n@function map-set($map, $value, $keys) {\n  $maps: ($map,);\n  $result: null;\n\n  @if type-of(nth($keys, -1)) == \"map\" {\n    @warn \"The last key you specified is a map; it will be overrided with `#{$value}`.\";\n  }\n\n  @if length($keys) == 1 {\n    @return map-merge($map, ($keys: $value));\n  }\n\n  @for $i from 1 through length($keys) - 1 {\n    $current-key: nth($keys, $i);\n    $current-map: nth($maps, -1);\n    $current-get: map-get($current-map, $current-key);\n    @if $current-get == null {\n      @error \"Key `#{$key}` doesn't exist at current level in map.\";\n    }\n    $maps: append($maps, $current-get);\n  }\n\n  @for $i from length($maps) through 1 {\n    $current-map: nth($maps, $i);\n    $current-key: nth($keys, $i);\n    $current-val: if($i == length($maps), $value, $result);\n    $result: map-merge($current-map, ($current-key: $current-val));\n  }\n\n  @return $result;\n}\n\n// Strip Units\n// Srtips the unit from a value. e.g. 12px -> 12.\n// @param $val\n//   @type unit (pixel, em, percent, number)\n// @return number\n@function strip-units($val) {\n  @return ($val / ($val * 0 + 1));\n}\n\n// Pixels to Ems\n// Converts a pixel value to ems.\n// @param $px\n//   @type unit (pixel, number)\n// @param $base-font-size\n//   @type unit (pixel, number)\n//   @default $base-font-size\n// @return unit (em)\n@function px-to-em($px, $base : $base-font-size) {\n  @if unitless($px) {\n    $px: 1px * $px;\n  }\n  @if unitless($base) {\n    $base: 1px * $base;\n  }\n  $px: ($px / $base) * 1em;\n  @return strip-units($px) * 1em;\n}\n\n// Pixels to Rems\n// Converts a pixel value to rems.\n// @param $px\n//   @type unit (pixel, number)\n// @return unit (rem)\n@function px-to-rem($px) {\n  @if unitless($px) {\n    $px: 1px * $px;\n  }\n  @if unitless($base-font-size) {\n    $base-font-size: 1px * $base-font-size;\n  }\n  $px: ($px / $base-font-size) * 1rem;\n  @return strip-units($px) * 1rem;\n}\n\n// Ems to Pixels\n// Converts an em value to pixels.\n// @param $px\n//   @type unit (em, number)\n// @param $base-font-size\n//   @type unit (pixel, number)\n//   @default $base-font-size\n// @return unit (px)\n@function em-to-px($em, $base : $base-font-size) {\n  @if unitless($em) {\n    $em: 1em * $em;\n  }\n  @if unitless($base) {\n    $base: 1px * $base;\n  }\n  $em: ($em * $base) / 1px;\n  @return strip-units($em) * 1px;\n}\n\n// Font Weight\n// Output the font weight value using the a weight keyword.\n// @param $weight\n//   @type string\n//   @options 'hairline', 'thin', 'extra-light', 'light', 'regular', 'normal',\n//     'medium', 'semi-bold', 'bold', 'extra-bold', 'black'\n@function font-weight($keyword) {\n  $value: null !default;\n\n  @if ($keyword == 'hairline' or $keyword == 'thin') {\n    $value: 100;\n  } @else if ($keyword == 'extra-light') {\n    $value: 200;\n  } @else if ($keyword == 'light') {\n    $value: 300;\n  } @else if ($keyword == 'regular' or $keyword == 'normal') {\n    $value: 400;\n  } @else if ($keyword == 'medium') {\n    $value: 500;\n  } @else if ($keyword == 'semi-bold') {\n    $value: 600;\n  } @else if ($keyword == 'bold') {\n    $value: 700;\n  } @else if ($keyword == 'extra-bold') {\n    $value: 800;\n  } @else if ($keyword == 'black') {\n    $value: 900;\n  }\n\n  @return $value;\n}\n","// Set file variable\n$filename: 'scss/elements/_lists.scss';\n\n////////////////////////////////////////////////////////////////////////////////\n// @List Variables\n////////////////////////////////////////////////////////////////////////////////\n\n$lists: (\n  'output' : true,\n  'class' : 'list',\n\n  'nth' : odd,\n  'margin' : 1rem 0,\n  'padding' : 1rem,\n\n  'background' : null,\n  'background-stripe' : rgba($black, 0.025),\n  'background-hover' : $yellow-50,\n  'border' : 1px solid rgba($black, 0.1),\n  'border-radius' : $border-radius,\n\n) !default;\n\n// Extend default component map with overrides if they exist\n@if variable-exists(override) {\n  @if map-has-key($override, 'lists') {\n    $lists: map-extend($lists, map-get($override, 'lists'), true);\n  }\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// @Table Mixins\n////////////////////////////////////////////////////////////////////////////////\n\n// Make List\n// Creates the base styles for a list modifer mixin or class. Usually applied\n// directly through a mixin or `%list-base` placeholder.\n// @param $options\n//   @type map\n//   @default $lists map\n@mixin make-list($options: ()) {\n  $o: map-merge($lists, $options);\n\n  list-style: none;\n  margin: map-get($o, 'margin');\n  background: map-get($o, 'background');\n\n  > li {\n    margin: 0;\n    padding: map-get($o, 'padding');\n    background-clip: padding-box;\n    @include add-clearfix();\n  }\n\n}\n\n// Add List Rowed\n// Adds borders to a list that divide list items.\n// @param $options\n//   @type map\n//   @default $lists map\n@mixin add-list-rowed($options: ()) {\n  $o: map-merge($lists, $options);\n\n  > li {\n    border-bottom: map-get($o, 'border');\n  }\n  > li:first-child  {\n    border-top: map-get($o, 'border');\n  }\n\n}\n\n// Add List Bordered\n// Adds borders to a list that wraps the list and divides list items.\n// @param $options\n//   @type map\n//   @default $lists map\n@mixin add-list-bordered($options: ()) {\n  $o: map-merge($lists, $options);\n\n  border: map-get($o, 'border');\n\n  > li {\n    border-bottom: map-get($o, 'border');\n  }\n  > li:last-child  {\n    border-bottom: 0 none;\n  }\n\n}\n\n// Add List Linked\n// Adds styles for a linked list where the padding is added to the anchor\n// element instead of the list item.\n// @param $options\n//   @type map\n//   @default $lists map\n@mixin add-list-linked($options: ()) {\n  $o: map-merge($lists, $options);\n\n  > li {\n    padding: 0;\n  }\n  > li > a {\n    display: block;\n    padding: map-get($o, 'padding');\n    background-clip: padding-box;\n    text-decoration: none;\n    @include add-clearfix();\n  }\n\n}\n\n// Add List Rounded\n// Gives a list rounded borders depending on parameters passed.\n// @param $radius\n//   @type unit (pixel, percent)\n//   @default default ($lists('border-radius'))\n// @param $options\n//   @type map\n//   @default $lists map\n@mixin add-list-rounded($radius: default, $options: ()) {\n  $o: map-merge($lists, $options);\n\n  @if ($radius != default) {\n    $o: map-merge($o, ('border-radius': $radius));\n  }\n\n  border-radius: map-get($o, 'border-radius');\n  > li:first-child {\n    border-top-left-radius: map-get($o, 'border-radius');\n    border-top-right-radius: map-get($o, 'border-radius');\n  }\n  > li:last-child {\n    border-bottom-left-radius: map-get($o, 'border-radius');\n    border-bottom-right-radius: map-get($o, 'border-radius');\n  }\n}\n\n// Add List Striped\n// Gives a list items alternating background colors.\n// @param $nth\n//   @type nth (odd, even)\n//   @default default ($lists('nth'))\n// @param $options\n//   @type map\n//   @default $lists map\n@mixin add-list-striped($nth: default, $options: ()) {\n  $o: map-merge($lists, $options);\n\n  @if ($nth != default) {\n    $o: map-merge($o, ('nth': $nth));\n  }\n\n  > li:nth-of-type(#{map-get($o, 'nth')}) {\n    background-color: map-get($o, 'background-stripe');\n  }\n\n}\n\n// Add List Hover\n// Gives list hover styles for list items.\n// @param $bg-hover\n//   @type color\n//   @default default ($lists('background-hover'))\n// @param $options\n//   @type map\n//   @default $lists map\n@mixin add-list-hover($bg-hover: default, $options: ()) {\n  $o: map-merge($lists, $options);\n\n  @if ($bg-hover != default) {\n    $o: map-merge($o, ('background-hover': $bg-hover));\n  }\n\n  > li {\n    transition: background-color $transition-duration $transition-timing-function;\n  }\n  > li:hover {\n    background-color: map-get($o, 'background-hover');\n  }\n\n}\n\n/*==============================================================================\n  @Lists - #{$filename}\n==============================================================================*/\n\nul, ol {\n  margin: 1em 0 1em 2em;\n  padding: 0;\n  ul, ol, li {\n    margin-top: 0.5em;\n    margin-bottom: 0.5em;\n  }\n}\n\n/**\n * Unordered Lists\n */\nul, ul ul ul ul {\n  list-style: disc;\n}\nul ul {\n  list-style: circle;\n}\nul ul ul {\n  list-style: disc;\n}\n\n/**\n * Ordered Lists\n */\nol, ol ol ol ol {\n  list-style: decimal;\n}\nol ol {\n  list-style: lower-alpha;\n}\nol ol ol {\n  list-style: lower-roman;\n}\n\n/**\n * Description Lists\n */\ndl {\n  margin: 1em 0;\n  dt {\n    margin: 1em 0 0;\n    font-weight: bold;\n    color: $color-dark;\n  }\n  dd {\n    margin: 0 0 1em 1em;\n  }\n}\n\n// Check if we should output lists\n@if map-get($lists, 'output') {\n\n/*==============================================================================\n  @List Modifiers - #{$filename}\n==============================================================================*/\n\n/**\n * Base Table Styles\n */\n.#{map-get($lists, 'class')} {\n  @include make-list();\n\n  &.flush > li {\n    padding-left: 0;\n    padding-right: 0;\n  }\n}\n\n/**\n * Border Modifiers\n */\n.#{map-get($lists, 'class')}.rowed {\n  @include add-list-rowed();\n}\n.#{map-get($lists, 'class')}.bordered {\n  @include add-list-bordered();\n}\n.#{map-get($lists, 'class')}.linked {\n  @include add-list-linked();\n}\n\n/**\n * Miscellaneous Modifiers\n */\n.#{map-get($lists, 'class')}.rounded {\n  @include add-list-rounded();\n}\n.#{map-get($lists, 'class')}.striped {\n  @include add-list-striped();\n}\n.#{map-get($lists, 'class')}.hover {\n  @include add-list-hover();\n}\n\n} // End @if output\n","// Set file variable\n$filename: 'scss/elements/_tables.scss';\n\n////////////////////////////////////////////////////////////////////////////////\n// @Table Variables\n////////////////////////////////////////////////////////////////////////////////\n\n$tables: (\n  'output' : true,\n  'class' : 'table',\n\n  'valign' : top,\n  'nth' : odd,\n  'stripe' : horizontal,\n\n  'margin' : 2em 0,\n  'padding-condensed' : 0.25em 0.5em,\n  'padding' : 0.5em 0.75em,\n  'padding-expanded' : 1em 1.25em,\n\n  'background' : none,\n  'background-stripe' : rgba($black, 0.05),\n  'background-hover' : $yellow-50,\n  'border' : 1px solid rgba($black, 0.1),\n  'border-radius' : $border-radius,\n\n) !default;\n\n// Extend default component map with overrides if they exist\n@if variable-exists(override) {\n  @if map-has-key($override, 'tables') {\n    $tables: map-extend($tables, map-get($override, 'tables'), true);\n  }\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// @Table Mixins\n////////////////////////////////////////////////////////////////////////////////\n\n// Make Table Base\n// Creates the base styles for a table modifer mixin or class. Usually applied\n// directly through a mixin or `%table-base` placeholder.\n// @param $options\n//   @type map\n//   @default $tables map\n@mixin make-table($options: ()) {\n  $o: map-merge($tables, $options);\n  margin: map-get($o, 'margin');\n  background: map-get($o, 'background');\n  border-collapse: separate;\n  td, th {\n    padding: map-get($o, 'padding');\n  }\n}\n\n// Add Table Rowed\n// Adds borders to a table that divide table rows.\n// @param $options\n//   @type map\n//   @default $tables map\n@mixin add-table-rowed($options: ()) {\n  $o: map-merge($tables, $options);\n  td, th {\n    border-bottom: map-get($o, 'border');\n  }\n  thead:first-child,\n  tfoot:first-child,\n  tbody:first-child {\n    tr:first-child {\n      td, th {\n        border-top: map-get($o, 'border');\n      }\n    }\n  }\n}\n\n// Add Table Columned\n// Adds borders to a table that divide table columns.\n// @param $options\n//   @type map\n//   @default $tables map\n@mixin add-table-columned($options: ()) {\n  $o: map-merge($tables, $options);\n  td, th {\n    border-right: map-get($o, 'border');\n  }\n  tr {\n    td:first-child, th:first-child {\n      border-left: map-get($o, 'border');\n    }\n  }\n}\n\n// Add Table Bordered\n// Adds borders to a table that divide table cells.\n// @param $options\n//   @type map\n//   @default $tables map\n@mixin add-table-bordered($options: ()) {\n  $o: map-merge($tables, $options);\n  @include add-table-rowed($o);\n  @include add-table-columned($o);\n}\n\n// Add Table Size\n// Toggles a tables padding size between condensed, expanded or a custom\n// padding value.\n// @param $size\n//   @type condensed | expanded | unit (pixel, em, percent)\n// @param $options\n//   @type map\n//   @default $tables map\n@mixin add-table-size($size, $options: ()) {\n  $o: map-merge($tables, $options);\n  @if ($size == condensed) {\n    td, th {\n      padding: map-get($o, 'padding-condensed');\n    }\n  } @else if ($size == expanded) {\n    td, th {\n      padding: map-get($o, 'padding-expanded');\n    }\n  } @else {\n    td, th {\n      padding: $size;\n    }\n  }\n}\n\n// Add Table Rounded\n// Gives a table rounded borders depending on parameters passed.\n// @param $radius\n//   @type unit (pixel, percent)\n//   @default default ($tables('border-radius'))\n// @param $options\n//   @type map\n//   @default $tables map\n@mixin add-table-rounded($radius: default, $options: ()) {\n  $o: map-merge($tables, $options);\n\n  @if ($radius != default) {\n    $o: map-merge($o, ('border-radius': $radius));\n  }\n\n  border-radius: map-get($o, 'border-radius');\n\n  thead:first-child,\n  tfoot:first-child,\n  tbody:first-child {\n    tr:first-child {\n      td:first-child, th:first-child {\n        border-top-left-radius: map-get($o, 'border-radius');\n      }\n      td:last-child, th:last-child {\n        border-top-right-radius: map-get($o, 'border-radius');\n      }\n    }\n  }\n  thead:last-child,\n  tfoot:last-child,\n  tbody:last-child {\n    tr:last-child {\n      td:first-child, th:first-child {\n        border-bottom-left-radius: map-get($o, 'border-radius');\n      }\n      td:last-child, th:last-child {\n        border-bottom-right-radius: map-get($o, 'border-radius');\n      }\n    }\n  }\n}\n\n// Add Table Stripes\n// Gives a table stripes either vertical or horizontal depending on\n// parameters passed.\n// @param $nth\n//   @type nth (odd, even)\n//   @default default ($tables('nth'))\n// @param $dir\n//   @type orientation of stripes (vertical, horizontal)\n//   @default default ($tables('stripe'))\n// @param $options\n//   @type map\n//   @default $tables map\n@mixin add-table-stripes($nth: default, $dir: default, $options: ()) {\n  $o: map-merge($tables, $options);\n  @if ($nth != default) {\n    $o: map-merge($o, ('nth': $nth));\n  }\n  @if ($dir != default) {\n    $o: map-merge($o, ('stripe': $dir));\n  }\n  @if (map-get($o, 'stripe') == vertical) {\n    tr {\n      td:nth-of-type(#{map-get($o, 'nth')}),\n      th:nth-of-type(#{map-get($o, 'nth')}) {\n        background-color: map-get($o, 'background-stripe');\n      }\n    }\n  } @else {\n    tbody tr:nth-of-type(#{map-get($o, 'nth')}) {\n      td, th {\n        background-color: map-get($o, 'background-stripe');\n      }\n    }\n  }\n}\n\n// Add Table Hover\n// Gives table hover styles for rows.\n// @param $bg-hover\n//   @type color\n//   @default default ($tables('background-hover'))\n// @param $options\n//   @type map\n//   @default $tables map\n@mixin add-table-hover($bg-hover: default, $options: ()) {\n  $o: map-merge($tables, $options);\n  @if ($bg-hover != default) {\n    $o: map-merge($o, ('background-hover': $bg-hover));\n  }\n  tbody tr td {\n    transition: background-color $transition-duration $transition-timing-function;\n  }\n  tbody tr:hover td {\n    background-color: map-get($o, 'background-hover');\n  }\n}\n\n// Add Table Alignment\n// Sets the vertical and text alignment of a table if a parameter is passed.\n// @param $options\n//   @type map ('vertical-align', 'text-align')\n//   @default map (none, none)\n@mixin add-table-alignment($options: ()) {\n  $o: map-merge((\n    'vertical-align' : none,\n    'text-align' : none,\n  ), $options);\n  @if (map-get($o, 'vertical-align') != none) {\n    tr {\n      vertical-align: map-get($o, 'vertical-align');\n    }\n  }\n  @if (map-get($o, 'text-align') != none) {\n    tr td, tr th {\n      text-align: map-get($o, 'text-align');\n    }\n  }\n}\n\n// Make Table Responsive\n// When added to a wrapping element of a table, will make the table responsive\n// for tablets and below.\n// @param $options\n//   @type map\n//   @default $tables map\n@mixin make-table-responsive($options: ()) {\n  $o: map-merge($tables, $options);\n  margin: map-get($o, 'margin');\n  > table {\n    margin: 0;\n  }\n  @include media-max('medium') {\n    overflow: auto;\n    > table td,\n    > table th {\n      white-space: nowrap;\n    }\n  }\n}\n\n/*==============================================================================\n  @Tables - #{$filename}\n==============================================================================*/\n\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n  width: 100%;\n  max-width: 100%;\n  margin: 1rem 0;\n  overflow: auto;\n\n  tr {\n    vertical-align: map-get($tables, 'valign');\n  }\n  th {\n    color: $color-dark;\n    font-weight: bold;\n    text-align: left;\n  }\n}\n\n// Check if we should output tables\n@if map-get($tables, 'output') {\n\n/*==============================================================================\n  @Table Modifiers - #{$filename}\n==============================================================================*/\n\n/**\n * Base Modifiers Styles\n */\n.#{map-get($tables, 'class')} {\n  @include make-table();\n}\n\n/**\n * Border Variations\n */\n.#{map-get($tables, 'class')}.rowed {\n  @include add-table-rowed();\n}\n.#{map-get($tables, 'class')}.columned {\n  @include add-table-columned();\n}\n.#{map-get($tables, 'class')}.bordered {\n  @include add-table-bordered();\n}\n\n/**\n * Padding Variations\n */\n.#{map-get($tables, 'class')}.condensed {\n  @include add-table-size(condensed);\n}\n.#{map-get($tables, 'class')}.expanded {\n  @include add-table-size(expanded);\n}\n\n/**\n * Miscellaneous Modifiers\n */\n.#{map-get($tables, 'class')}.rounded {\n  @include add-table-rounded();\n}\n.#{map-get($tables, 'class')}.striped {\n  @include add-table-stripes();\n}\n.#{map-get($tables, 'class')}.striped-horizontal {\n  @include add-table-stripes(default, horizontal);\n}\n.#{map-get($tables, 'class')}.striped-vertical {\n  @include add-table-stripes(default, vertical);\n}\n.#{map-get($tables, 'class')}.hover {\n  @include add-table-hover();\n}\n\n/**\n * Table Alignment Modifiers\n */\n.#{map-get($tables, 'class')}.valign-baseline {\n  @include add-table-alignment(('vertical-align': baseline));\n}\n.#{map-get($tables, 'class')}.valign-top {\n  @include add-table-alignment(('vertical-align': top));\n}\n.#{map-get($tables, 'class')}.valign-middle {\n  @include add-table-alignment(('vertical-align': middle));\n}\n.#{map-get($tables, 'class')}.valign-bottom {\n  @include add-table-alignment(('vertical-align': bottom));\n}\n.#{map-get($tables, 'class')}.align-left {\n  @include add-table-alignment(('text-align': left));\n}\n.#{map-get($tables, 'class')}.align-center {\n  @include add-table-alignment(('text-align': center));\n}\n.#{map-get($tables, 'class')}.align-right {\n  @include add-table-alignment(('text-align': right));\n}\n\n/**\n * Responsive Tables\n */\n.#{map-get($tables, 'class')}-responsive {\n  @include make-table-responsive();\n}\n\n} // End @if output\n","// Set file variable\n$filename: 'scss/elements/_blockquotes.scss';\n\n/*==============================================================================\n  @Blockquotes - #{$filename}\n==============================================================================*/\n\nblockquote {\n  margin: 1rem 0;\n  padding: 0.5em 1.5em;\n  background: $bg-color;\n  border-radius: $border-radius;\n\n  footer,\n  .blockquote-footer {\n    display: block;\n    position: relative;\n    margin: 1rem 0;\n    font-size: 100%;\n  }\n}\n\n@include media-min('medium') {\n\n  blockquote {\n    padding: 1em 2em;\n  }\n\n}\n","// Set file variable\n$filename: 'scss/elements/_code.scss';\n\n/*==============================================================================\n  @Code - #{$filename}\n==============================================================================*/\n\ncode, pre {\n  background: $bg-color;\n  font-family: $font-family-mono;\n  font-size: px-to-em(16px);\n  line-height: 1.5em;\n  border-radius: $border-radius;\n}\ncode {\n  display: inline;\n  margin: 0;\n  padding: 0;\n  white-space: nowrap;\n  line-height: inherit;\n  color: $red;\n  background: none;\n}\npre {\n  margin: 1.5rem 0;\n  padding: 0.75rem;\n  overflow: auto;\n  color: $color-dark;\n\n  code {\n    display: block;\n    margin: 0;\n    padding: 0.75rem;\n    overflow: auto;\n    white-space: pre;\n    font-size: 100%;\n    color: inherit;\n    background: none;\n    border: 0 none;\n  }\n  &.max-height {\n    max-height: 400px;\n  }\n}\n","// Set file variable\n$filename: 'scss/elements/_images.scss';\n\n/*==============================================================================\n  @Images - #{$filename}\n==============================================================================*/\n\nimg {\n  display: block;\n  margin: 1rem 0;\n  max-width: 100%;\n  height: auto;\n}\n\n/**\n * Alignment Modifiers\n */\nimg.align-center {\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n}\np img.align-center {\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\nimg.align-left {\n  float: left;\n  margin: 1rem 1.5rem 1rem 0;\n}\np img.align-left {\n  margin-top: 0;\n\n}\n\nimg.align-right {\n  float: right;\n  margin: 1rem 0 1rem 1.5rem;\n}\np img.align-right {\n  margin-top: 0;\n}\n\n/**\n * Stylistic Modifiers\n */\nimg.rounded  {\n  border-radius: $border-radius;\n}\nimg.circle   {\n  border-radius: 50%;\n}\nimg.polaroid {\n  background: $white;\n  background-clip: padding-box;\n  padding: 0.5rem;\n  border: 1px solid rgba($black, 0.2);\n  box-shadow: 0 1px 3px rgba($black, 0.1);\n}\n","// Set file variable\n$filename: 'scss/elements/_videos.scss';\n\n////////////////////////////////////////////////////////////////////////////////\n// @Videos Map\n////////////////////////////////////////////////////////////////////////////////\n\n$videos: (\n  'output' : true,\n  'margin' : 2em 0,\n  'ratio' : 56.25% // The default video ratio (56.25% = 16 by 9)\n) !default;\n\n// Extend default component map with overrides if they exist\n@if variable-exists(override) {\n  @if map-has-key($override, 'videos') {\n    $videos: map-extend($videos, map-get($override, 'videos'), true);\n  }\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// @Video Functions\n////////////////////////////////////////////////////////////////////////////////\n\n// Aspect Ratio\n// Returns the aspect ratio in the form of a percentage.\n// @param $width\n//   @type width aspect ratio (number)\n// @param $height\n//   @type height aspect ratio (number)\n// @return height percentage of aspect ratio\n@function aspect-ratio($width, $height) {\n  @return (($height / $width) * 100%);\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// @Video Mixins\n////////////////////////////////////////////////////////////////////////////////\n\n// Make Video Fluid\n// Adds styles for creating fluid videos. Should be applied to a wrapping\n// element of a video.\n// @param $options\n//   @type map\n//   @default $video map\n@mixin make-video-fluid($options: ()) {\n  $o: map-merge($videos, $options);\n\n  position: relative;\n\tdisplay: block;\n\theight: 0;\n\tmargin: map-get($o, 'margin');\n\tpadding-bottom: map-get($o, 'ratio');\n\toverflow: hidden;\n\n  .video-item,\n  embed,\n  iframe,\n  object,\n  video {\n  \tposition: absolute;\n  \ttop: 0;\n  \tleft: 0;\n  \twidth: 100%;\n  \theight: 100%;\n  \tborder: 0 none;\n  }\n}\n\n// Add Video Ratio\n// Creates a ratio class using an aspect width and height. You can optionally\n// output the bottom padding or a class with the bottom padding.\n// @param $width\n//   @type width aspect ratio (number)\n// @param $height\n//   @type height aspect ratio (number)\n@mixin build-video-ratio($width, $height) {\n  &.ratio-#{$width}x#{$height} {\n    padding-bottom: aspect-ratio($width, $height);\n  }\n}\n\n// Check if we should output videos\n@if map-get($videos, 'output') {\n\n/*==============================================================================\n  @Video - #{$filename}\n==============================================================================*/\n\n.video-wrapper {\n\t@include make-video-fluid();\n}\n\n/**\n * Video Ratios\n */\n.video-wrapper {\n\t@include build-video-ratio(16, 9);\n  @include build-video-ratio(4, 3);\n  @include build-video-ratio(3, 2);\n}\n\n} // End @if output\n","// Set file variable\n$filename: 'scss/elements/_rules.scss';\n\n/*==============================================================================\n  @Rules - #{$filename}\n==============================================================================*/\n\nhr {\n  display: block;\n  height: 0;\n  width: 100%;\n  clear: both;\n  margin: 2rem 0;\n  padding: 0;\n  background: none;\n  border: 0 none;\n  border-bottom: 1px solid $border-color;\n}\n\n/**\n * Stylistic Modifiers\n */\nhr.dotted {\n  border-bottom: 1px dotted rgba($black, 0.25);\n}\nhr.dashed {\n  border-bottom: 1px dashed rgba($black, 0.25);\n}\nhr.double {\n  border-bottom: 3px double $border-color;\n}\n","// Set file variable\n$filename: 'scss/elements/_forms.scss';\n\n////////////////////////////////////////////////////////////////////////////////\n// @Form Variables\n////////////////////////////////////////////////////////////////////////////////\n\n$forms: (\n  'vertical-spacing' : 1.5rem,\n  'vertical-align' : 0.75rem,\n  'font-family' : inherit,\n  'base-font-size' : 1em,\n  'base-line-height' : 1.5em,\n  'font-size' : 1em,\n  'line-height' : 1.5em,\n  'color' : $color,\n  'color-label' : $color-dark,\n  'color-placeholder' : #aaa,\n  'color-select-arrow' : $color-dark,\n  'border-radius' : $border-radius,\n\n  'input' : (\n    'padding' : 0.75em,\n    'background' : rgba($white, 0.5),\n    'border' : 1px solid rgba($black, 0.2),\n    'box-shadow' : (0 1px 3px rgba($black, 0), inset 0 1px 3px rgba($black, 0.05)),\n\n    'focus' : (\n      'background': rgba($white, 1),\n      'border': 1px solid rgba($blue, 1),\n      'box-shadow': (0 1px 3px rgba($black, 0.05), inset 0 1px 3px rgba($black, 0)),\n    )\n  ),\n\n  'choice' : (\n    'padding' : 0.75em 0.75em 0.75em 2.25em,\n    'background' : rgba($black, 0.05),\n    'border' : 1px solid transparent,\n    'box-shadow' : none,\n  )\n) !default;\n\n// Extend default component map with overrides if they exist\n@if variable-exists(override) {\n  @if map-has-key($override, 'forms') {\n    $forms: map-extend($forms, map-get($override, 'forms'), true);\n  }\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// @Form Mixins\n////////////////////////////////////////////////////////////////////////////////\n\n// Placeholder\n// Sets the placeholder text color for input fields that use the\n// placeholder attribute.\n// @param $color\n//   @type color\n//   @default $forms('color-placeholder')\n// @param $options\n//   @type map\n//   @default $forms map\n@mixin placeholder($color: default, $options: ()) {\n  $o: map-merge($forms, $options);\n\n  @if ($color != default) {\n    $o: map-merge($o, ('color-placeholder': $color));\n  }\n\n  &::-webkit-input-placeholder {\n    color: map-get($o, 'color-placeholder');\n  }\n  &::-moz-placeholder {\n    color: map-get($o, 'color-placeholder');\n  }\n  &:-moz-placeholder {\n    color: map-get($o, 'color-placeholder');\n  }\n  &:-ms-input-placeholder {\n    color: map-get($o, 'color-placeholder');\n  }\n  &::placeholder {\n    color: map-get($o, 'color-placeholder');\n  }\n}\n\n// Make Form Group Base\n// Creates the styles for a base form group by applying vertical spacing.\n// @param $options\n//   @type map\n//   @default $forms map\n@mixin make-form-group-base($options: ()) {\n  $o: map-merge($forms, $options);\n\n  margin-bottom: map-get( $o, 'vertical-spacing' );\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n}\n\n// Make Form Group Inline\n// Creates the styles for making an inline form group element.\n// @param $options\n//   @type map\n//   @default $forms map\n@mixin make-form-group-inline($options: ()) {\n  $o: map-merge($forms, $options);\n\n  @include add-clearfix();\n  margin-right: -(map-get( $forms, 'vertical-align' ));\n  margin-bottom: map-get( $o, 'vertical-spacing' ) / 2;\n\n  &:last-child {\n    margin-bottom: -(map-get( $o, 'vertical-spacing' ) / 2);\n  }\n}\n\n// Make Input Inline\n// Creates the styles for making an inline form element.\n// @param $options\n//   @type map\n//   @default $forms map\n@mixin make-input-inline($options: ()) {\n  $o: map-merge($forms, $options);\n\n  float: left;\n  width: auto;\n  margin-right: map-get( $o, 'vertical-align' );\n  margin-bottom: map-get( $o, 'vertical-spacing' ) / 2;\n\n  @if (variable-exists(class-float-right)) {\n    @if ($class-float-right) {\n      &.#{$class-float-right} {\n        float: right;\n      }\n    }\n  }\n}\n\n/*==============================================================================\n  @Form Structure - #{$filename}\n==============================================================================*/\n\n/**\n * Form Structure Elements\n */\nform {\n  margin: (map-get( $forms, 'vertical-spacing' ) * 1.5) 0;\n  font-size: map-get($forms, 'base-font-size');\n  line-height: map-get($forms, 'base-line-height');\n}\n\n/**\n * Fieldset\n */\nfieldset {\n  margin: map-get( $forms, 'vertical-spacing' ) 0;\n  padding: 0;\n  border: 0 none;\n}\n\n/**\n * Legends\n */\nlegend {\n  display: inline-block;\n  margin: 0 -(map-get( $forms, 'vertical-spacing' ) / 2) (map-get( $forms, 'vertical-spacing' ) / 2);\n  padding: 0 (map-get( $forms, 'vertical-spacing' ) / 2);\n  font-size: px-to-em(22px);\n  line-height: 1.5em;\n  font-weight: bold;\n  color: map-get( $forms, 'color-label' );\n  border: 0 none;\n}\n\nform {\n  .row {\n    margin-bottom: map-get( $forms, 'vertical-spacing' ) / 2;\n  }\n  .row:last-child {\n    margin-bottom: 0;\n  }\n  .col {\n    margin-bottom: map-get( $forms, 'vertical-spacing' ) / 2;\n  }\n  .col:last-child {\n    margin-bottom: 0;\n  }\n}\n\n@include media-min('medium') {\n  form .col {\n    margin-bottom: 0;\n  }\n}\n\n/*==============================================================================\n  @Form Groups - #{$filename}\n==============================================================================*/\n\n/**\n * Form Group\n */\n.form-group {\n  @include make-form-group-base();\n}\n.form-group.inline {\n  @include make-form-group-inline();\n\n  > * {\n    @include make-input-inline();\n  }\n  .form-group,\n  .input-group {\n    display: inline-block;\n    vertical-align: top;\n    margin: 0 (map-get( $forms, 'vertical-spacing' ) / 2) 0 0;\n\n    &:last-child {\n      margin-right: 0;\n    }\n  }\n}\n\n/**\n * Header Group\n */\n.form-header {\n  @include make-form-group-base();\n  color: $color-light;\n\n  h1, h2, h3, h4, h5, h6 {\n    margin: (map-get( $forms, 'vertical-spacing' ) / 3) 0;\n    font-size: (map-get($forms, 'font-size') * 1.4);\n    line-height: 1.2em;\n  }\n  p {\n    margin: (map-get( $forms, 'vertical-spacing' ) / 3) 0;\n    color: $color-light;\n  }\n}\n\n/**\n * Action Group\n */\n.form-action {\n  @include make-form-group-base();\n  @include add-clearfix();\n\n  .button,\n  .input-align {\n    float: left;\n    margin: 0 (map-get( $forms, 'vertical-spacing' ) / 2) 0 0;\n\n    &:last-child {\n      margin-right: 0;\n    }\n\n    @if (variable-exists(class-float-right)) {\n      @if ($class-float-right) {\n        &.#{$class-float-right} {\n          float: right;\n        }\n      }\n    }\n  }\n  .input-align {\n    margin-top: map-get( $forms, 'vertical-align' );\n    border-top: map-fetch( $forms, 'input', 'border' );\n    border-color: transparent;\n  }\n\n  &.form-action-center {\n    text-align: center;\n\n    .button,\n    .input-align {\n      display: inline-block;\n      float: none;\n\n    }\n  }\n}\n\n/**\n * Input Group\n */\n.input-group {\n  @include make-form-group-base();\n}\n.input-group.inline {\n  @include make-form-group-inline();\n\n  > * {\n    @include make-input-inline();\n  }\n}\n\n/*==============================================================================\n  @Form Elements - #{$filename}\n==============================================================================*/\n\n/**\n * Labels\n */\nlabel {\n  display: inline-block;\n  margin: 0 0 (map-get( $forms, 'vertical-spacing' ) / 3) 0;\n  font-size: map-get($forms, 'font-size');\n  line-height: map-get($forms, 'line-height');\n  font-weight: 600;\n  color: map-get( $forms, 'color-label' );\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n\n  &.sub {\n    font-weight: normal;\n  }\n  &.hide {\n    position: absolute;\n    width: 1px;\n    height: 1px;\n    padding: 0;\n    margin: -1px;\n    overflow: hidden;\n    clip: rect(0,0,0,0);\n    border: 0;\n  }\n  &.block {\n    display: block;\n    padding-top: map-get( $forms, 'vertical-align' );\n    border-top: map-fetch( $forms, 'input', 'border' );\n    border-color: transparent;\n  }\n  &.inline {\n    display: inline-block;\n    padding-top: map-get( $forms, 'vertical-align' );\n    border-top: map-fetch( $forms, 'input', 'border' );\n    border-color: transparent;\n  }\n}\n.inline {\n  label.block,\n  label.inline {\n    padding-bottom: map-get( $forms, 'vertical-align' );\n    border-top: map-fetch( $forms, 'input', 'border' );\n    border-color: transparent;\n  }\n}\n\n/**\n * Base Inputs\n */\n.input,\n.checkbox,\n.radio,\n.choice {\n  position: relative;\n  display: block;\n  width: 100%;\n  margin: 0 0 (map-get( $forms, 'vertical-spacing' ) / 2) 0;\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n}\n\n/**\n * Text Inputs\n */\n.input {\n  padding: map-fetch( $forms, 'input', 'padding' );\n  font-family: map-get( $forms, 'font-family' );\n  font-size: map-get( $forms, 'font-size' );\n  line-height: map-get( $forms, 'line-height' );\n  color: map-get( $forms, 'color' );\n  background-color: map-fetch( $forms, 'input', 'background' );\n  border: map-fetch( $forms, 'input', 'border' );\n  box-shadow: map-fetch( $forms, 'input', 'box-shadow' );\n  box-sizing: border-box;\n  border-radius: map-get( $forms, 'border-radius' );\n  transition: border-color $transition-duration, background-color $transition-duration, box-shadow $transition-duration;\n  @include placeholder();\n\n  &:focus {\n    outline: none;\n    background-color: map-fetch( $forms, 'input', 'focus', 'background' );\n    border: map-fetch( $forms, 'input', 'focus', 'border' );\n    box-shadow: map-fetch( $forms, 'input', 'focus', 'box-shadow' );\n  }\n\n  &.disabled,\n  &[readonly],\n  &[disabled] {\n    opacity: 0.5;\n    background: rgba($black, 0.05);\n  }\n}\n\n/**\n * Checkbox, Radio & Choice Classes\n */\n.checkbox,\n.radio,\n.choice {\n  cursor: pointer;\n  color: $color;\n  font-weight: normal;\n\n  &.disabled {\n    opacity: 0.5;\n  }\n}\n.choice {\n  padding: map-fetch( $forms, 'choice', 'padding' );\n  background: map-fetch( $forms, 'choice', 'background' );\n  border: map-fetch( $forms, 'choice', 'border' );\n  box-shadow: map-fetch( $forms, 'choice', 'box-shadow' );\n  border-radius: map-get( $forms, 'border-radius' );\n\n  input[type=\"checkbox\"],\n  input[type=\"radio\"] {\n    position: absolute;\n    top: auto;\n    margin: 5px 0 0 -20px;\n  }\n}\n\ninput[type=\"checkbox\"],\ninput[type=\"radio\"] {\n  position: relative;\n  top: -1px;\n  margin: 0 5px 0 0;\n}\n\n/**\n * Other Inputs\n */\ninput[type=\"file\"],\ninput[type=\"range\"] {\n  display: block;\n  margin: 0 0 (map-get( $forms, 'vertical-spacing' ) / 2) 0;\n}\ninput[type=\"range\"] {\n  width: 100%;\n}\ninput[type=\"search\"] {\n  -webkit-appearance: none;\n}\ninput[type=\"color\"].input {\n  width: 3.125rem;\n  height: 3.125rem;\n  padding: (map-fetch( $forms, 'input', 'padding' ) / 3);\n}\n\n/**\n * Textarea\n */\ntextarea.input {\n  height: auto;\n  max-width: 100%;\n}\n\n/**\n * Select\n */\nselect.input {\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  background-image: url(\"data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='20' height='4'><polygon fill='\"+ map-get($forms, 'color-select-arrow') +\"' points='0,0 3,4 3,4 6,0 '/></svg>\");\n  background-position: 100% center;\n  background-repeat: no-repeat;\n  padding-right: 30px;\n}\nselect[multiple].input,\nselect[size].input {\n  height: auto;\n  padding: map-fetch( $forms, 'input', 'padding' );\n  background-image: none;\n}\n\n/*==============================================================================\n  @Form Utilities - #{$filename}\n==============================================================================*/\n\n/**\n * Notes\n */\n.note {\n  margin-bottom: map-get( $forms, 'vertical-spacing' ) / 2;\n  font-size: map-get($forms, 'font-size');\n  color: $color-light;\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n\n  p {\n    margin: 0 0 (map-get( $forms, 'vertical-spacing' ) / 2) 0;\n    &:last-child {\n      margin-bottom: 0;\n    }\n  }\n}\nlabel + .note {\n  margin-top: 0;\n}\n.form-group + .note,\n.input-group + .note {\n  margin-top: -(map-get( $forms, 'vertical-spacing' ) / 2);\n}\n\n/**\n * Required Classes\n */\n.req {\n  color: $red;\n}\n\n/**\n * Inline Inputs\n */\nlabel.inline,\n.button.inline,\n.input.inline,\n.checkbox.inline,\n.radio.inline,\n.choice.inline,\n.inline label,\n.inline .button,\n.inline .input,\n.inline .checkbox,\n.inline .radio,\n.inline .choice {\n  @include make-input-inline();\n}\n\n/**\n * Disabled\n */\n.disabled,\nfieldset[disabled] {\n  input[type=\"file\"],\n  input[type=\"range\"],\n  input[type=\"checkbox\"],\n  input[type=\"radio\"],\n  .input,\n  .checkbox,\n  .radio,\n  .choice {\n    opacity: 0.5;\n  }\n  .input {\n    background: rgba($black, 0.05);\n  }\n}\n\n/*==============================================================================\n  @Validation States - #{$filename}\n==============================================================================*/\n\n/**\n * Success\n */\n// Success class applied to elements\n.input {\n  &.success {\n    border-color: $green;\n  }\n}\n.checkbox,\n.radio,\n.note {\n  &.success {\n    color: $green-900;\n  }\n}\n.choice {\n  &.success {\n    background-color: $green-50;\n  }\n}\n\n// Success class applied to wrapper\n.success {\n  .input {\n    border-color: $green;\n  }\n  .checkbox,\n  .radio,\n  .note {\n    color: $green-900;\n  }\n  .choice {\n    background-color: $green-50;\n  }\n}\n\n/**\n * Warning\n */\n// Warning class applied to elements\n.input {\n  &.warning {\n    border-color: $yellow-700;\n  }\n}\n.checkbox,\n.radio,\n.note {\n  &.warning {\n    color: $yellow-700;\n  }\n}\n.choice {\n  &.warning {\n    background-color: $yellow-100;\n  }\n}\n\n// Warning class applied to wrapper\n.warning {\n  .input {\n    border-color: $yellow-700;\n  }\n  .checkbox,\n  .radio,\n  .note {\n    color: $yellow-700;\n  }\n  .choice {\n    background-color: $yellow-100;\n  }\n}\n\n/**\n * Error\n */\n// Error class applied to elements\n.input {\n  &.error {\n    border-color: $red;\n  }\n}\n.checkbox,\n.radio,\n.note {\n  &.error {\n    color: $red-900;\n  }\n}\n.choice {\n  &.error {\n    background-color: $red-50;\n  }\n}\n\n// Error class applied to wrapper\n.error {\n  .input {\n    border-color: $red;\n  }\n  .checkbox,\n  .radio,\n  .note {\n    color: $red-900;\n  }\n  .choice {\n    background-color: $red-50;\n  }\n}\n\n/**\n * Active\n */\n// Active class applied to elements\n.input {\n  &.active {\n    border-color: $blue;\n  }\n}\n.checkbox,\n.radio,\n.note {\n  &.active {\n    color: $blue-900;\n  }\n}\n.choice {\n  &.active {\n    background-color: $blue-50;\n  }\n}\n\n// Active class applied to wrapper\n.active {\n  .input {\n    border-color: $blue;\n  }\n  .checkbox,\n  .radio,\n  .note {\n    color: $blue-900;\n  }\n  .choice {\n    background-color: $blue-50;\n  }\n}\n","// Set file variable\n$filename: 'scss/elements/_buttons.scss';\n\n////////////////////////////////////////////////////////////////////////////////\n// @Buttons Map\n////////////////////////////////////////////////////////////////////////////////\n\n$buttons: (\n  'output' : true,\n  'output-modifiers' : true,\n  'class' : 'button',\n\n  'display' : inline-block,\n  'margin' : 0,\n  'padding' : px-to-rem(12px) px-to-rem(24px),\n  'vertical-align' : top,\n  'font-family' : inherit,\n  'font-size' : px-to-em(16px),\n  'line-height' : px-to-rem(24px),\n  'font-weight' : inherit,\n  'text-decoration' : none,\n  'background' : $bg-color,\n  'background-clip' : border-box,\n  'border' : 1px solid transparent,\n  'border-radius' : $border-radius,\n  'transition-property' : all,\n  'transition-duration' : 0.75s,\n  'transition-timing-function' : linear,\n\n  'modifiers' : (\n    'default' : (\n      'color' : $color,\n      'background' : $bg-color,\n      'transition-duration' : 0.75s,\n      'hover' : (\n        'color' : $color,\n        'background' : darken($bg-color, 5%),\n        'border-color' : transparent,\n        'transition-duration' : 0.1s,\n      ),\n      'focus' : (\n        'background' : darken($bg-color, 5%),\n        'transition-duration' : 0.1s,\n      ),\n      'active' : (\n        'transition-duration' : 0,\n      ),\n    ),\n    'primary' : (\n      'selector' : '&.primary, &.blue',\n      'color' : $white,\n      'background' : $blue,\n      'hover' : (\n        'color' : $white,\n        'background' : $blue-700,\n      ),\n    ),\n    'secondary' : (\n      'selector' : '&.secondary, &.gray',\n      'color' : $white,\n      'background' : $gray,\n      'hover' : (\n        'color' : $white,\n        'background' : $gray-700,\n      ),\n    ),\n    'success' : (\n      'selector' : '&.success, &.green',\n      'color' : $white,\n      'background' : $green,\n      'hover' : (\n        'color' : $white,\n        'background' : $green-700,\n      ),\n    ),\n    'warning' : (\n      'selector' : '&.warning, &.yellow',\n      'color' : $color,\n      'background' : $yellow,\n      'hover' : (\n        'color' : $color,\n        'background' : $yellow-600,\n      ),\n    ),\n    'danger' : (\n      'selector' : '&.danger, &.red',\n      'color' : $white,\n      'background' : $red,\n      'hover' : (\n        'color' : $white,\n        'background' : $red-700,\n      ),\n    ),\n    'light': (\n      'color': $color,\n      'background': rgba($white, 0.75),\n      'hover': (\n        'color': $color,\n        'background': rgba($white, 1),\n      ),\n    ),\n    'dark': (\n      'color': $white,\n      'background': rgba($black, 0.5),\n      'hover': (\n        'color': $white,\n        'background': rgba($black, 0.75),\n      ),\n    ),\n    'small' : (\n      'padding' : px-to-rem(6px) px-to-rem(14px),\n      'font-size' : px-to-em(14px),\n      'line-height' : px-to-rem(20px),\n    ),\n    'large' : (\n      'padding' : px-to-rem(16px) px-to-rem(32px),\n      'font-size' : px-to-em(20px),\n      'line-height' : px-to-rem(26px),\n    ),\n    'block' : (\n      'display' : block,\n      'width' : 100%,\n    ),\n  ),\n\n) !default;\n\n// Extend default component map with overrides if they exist\n@if variable-exists(override) {\n  @if map-has-key($override, 'buttons') {\n    $buttons: map-extend($buttons, map-get($override, 'buttons'), true);\n  }\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// @Button Mixins\n////////////////////////////////////////////////////////////////////////////////\n\n// Make Button\n// Creates the base styles for a button modifer mixin or class. Usually applied\n// directly through a base list class, mixin or an extend placeholder.\n// @param $options\n//   @type map\n//   @default $buttons map\n@mixin make-button($options: ()) {\n  $o: map-extend($buttons, $options, true);\n\n  cursor: pointer;\n\n  @include add-styles($o);\n  @include add-modifiers($o, 'default', false);\n\n  @content;\n\n}\n\n// Check if we should output buttons\n@if map-get($buttons, 'output') {\n\n/*==============================================================================\n  @Buttons - #{$filename}\n==============================================================================*/\n\n.#{map-get($buttons, 'class')} {\n  @include make-button();\n}\n\n// Check if we should output notice modifiers\n@if map-get($buttons, 'output-modifiers') {\n  .#{map-get($buttons, 'class')} {\n    @include add-modifiers($buttons);\n  }\n} // End @if output-modifiers\n\n} // End @if output\n","// Set file variable\n$filename: 'scss/elements/_icons.scss';\n\n////////////////////////////////////////////////////////////////////////////////\n// @Icons Map\n////////////////////////////////////////////////////////////////////////////////\n\n$icons: (\n  'output' : true,\n  'output-buttons' : true,\n  'class' : 'icon',\n  'class-symbols' : 'svg-symbols',\n\n  'display' : inline-block,\n  'width' : 1em,\n  'height' : 1em,\n  'margin-top' : -0.3em,\n  'margin-bottom' : -0.1em,\n  'font-size' : px-to-rem(24px),\n  'vertical-align' : null,\n\n  'stroke' : currentColor,\n  'stroke-width' : 2px,\n  'stroke-linecap' : round,\n  'stroke-linejoin' : round,\n  'fill' : none,\n\n  'buttons' : (\n    'gap' : 0.25em,\n    'margin-top-small' : null,\n    'margin-top-large' : -0.2em,\n    'font-size-small' : px-to-rem(18px),\n    'font-size-large' : px-to-rem(30px),\n    'indent-small' : -0.125em,\n    'indent' : -0.25em,\n    'indent-large' : -0.35em\n  )\n) !default;\n\n// Extend default component map with overrides if they exist\n@if variable-exists(override) {\n  @if map-has-key($override, 'icons') {\n    $icons: map-extend($icons, map-get($override, 'icons'), true);\n  }\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// @Icons Mixins\n////////////////////////////////////////////////////////////////////////////////\n\n// Hide SVG Symbols\n// Adds styles for hiding your SVG symbols file\n@mixin hide-svg-symbols() {\n  border: 0 !important;\n  clip: rect(0 0 0 0) !important;\n  height: 1px !important;\n  margin: -1px !important;\n  overflow: hidden !important;\n  padding: 0 !important;\n  position: absolute !important;\n  width: 1px !important;\n}\n\n// Make Icon\n// Creates the base styles foricons.\n// @param $options\n//   @type map\n//   @default $icons map\n@mixin make-icon($options: ()) {\n  $o: map-merge($icons, $options);\n\n  @include add-styles($o);\n\n  stroke: map-get($o, 'stroke');\n  stroke-width: map-get($o, 'stroke-width');\n  stroke-linecap: map-get($o, 'stroke-linecap');\n  stroke-linejoin: map-get($o, 'stroke-linejoin');\n  fill: map-get($o, 'fill');\n\n}\n\n// Add Icon Button\n// Adds icon styles based on the context of a button.\n// @param $context\n//   @type string ('base', 'solo', 'left', 'right')\n//   @default 'base'\n// @param $options\n//   @type map\n//   @default $icons map\n@mixin add-icon-button($context: 'base', $options: ()) {\n  $o: map-extend($icons, $options, true);\n\n  @if ($context == 'base') {\n\n    .#{map-get($o, 'class')} {\n      font-size: map-get($o, 'font-size');\n      line-height: 1em;\n      vertical-align: middle;\n    }\n    &.small .#{map-get($o, 'class')} {\n      font-size: map-fetch($o, 'buttons', 'font-size-small');\n      margin-top: map-fetch($o, 'buttons', 'margin-top-small');\n    }\n    &.large .#{map-get($o, 'class')} {\n      font-size: map-fetch($o, 'buttons', 'font-size-large');\n      margin-top: map-fetch($o, 'buttons', 'margin-top-large');\n    }\n\n  } @else if ($context == 'solo') {\n\n    padding: nth(map-get($buttons, 'padding'), 1);\n    &.small {\n      padding: nth(map-fetch($buttons, 'modifiers', 'small', 'padding'), 1);\n    }\n    &.large {\n      padding: nth(map-fetch($buttons, 'modifiers', 'large', 'padding'), 1);\n    }\n\n  } @else if ($context == 'left') {\n\n    .#{map-get($o, 'class')} {\n      margin-right: map-fetch($o, 'buttons', 'gap');\n      margin-left: map-fetch($o, 'buttons', 'indent');\n    }\n    &.small .#{map-get($o, 'class')} {\n      margin-left: map-fetch($o, 'buttons', 'indent-small');\n    }\n    &.large .#{map-get($o, 'class')} {\n      margin-left: map-fetch($o, 'buttons', 'indent-large');\n    }\n\n  } @else if ($context == 'right') {\n\n    .#{map-get($o, 'class')} {\n      margin-left: map-fetch($o, 'buttons', 'gap');\n      margin-right: map-fetch($o, 'buttons', 'indent');\n    }\n    &.small .#{map-get($o, 'class')} {\n      margin-right: map-fetch($o, 'buttons', 'indent-small');\n    }\n    &.large .#{map-get($o, 'class')} {\n      margin-right: map-fetch($o, 'buttons', 'indent-large');\n    }\n\n  }\n}\n\n// Check if we should output icons\n@if map-get($icons, 'output') {\n\n/*==============================================================================\n  @Icons - #{$filename}\n==============================================================================*/\n\n@if (map-get($icons, 'class-symbols')) {\n  .#{map-get($icons, 'class-symbols')} {\n    @include hide-svg-symbols();\n  }\n}\n\n.#{map-get($icons, 'class')} {\n  @include make-icon();\n}\n\n// Check if we should output button modifiers\n@if map-get($icons, 'output-buttons') {\n  // Check if $buttons exists\n  @if variable-exists(buttons) {\n    .#{map-get($buttons, 'class')} {\n      @include add-icon-button();\n    }\n    .#{map-get($buttons, 'class')}-#{map-get($icons, 'class')} {\n      @include add-icon-button('solo');\n    }\n    .#{map-get($buttons, 'class')}-#{map-get($icons, 'class')}-left {\n      @include add-icon-button('left');\n    }\n    .#{map-get($buttons, 'class')}-#{map-get($icons, 'class')}-right {\n      @include add-icon-button('right');\n    }\n  }\n} // End @if output-buttons\n\n} // End @if output\n","// Set file variable\n$filename: 'scss/elements/_chips.scss';\n\n////////////////////////////////////////////////////////////////////////////////\n// @Chips Map\n////////////////////////////////////////////////////////////////////////////////\n\n$chips: (\n  'output' : true,\n  'output-modifiers' : true,\n  'class' : 'chip',\n\n  'margin' : 0,\n  'padding' : 0.25em,\n  'font-size' : 1rem,\n  'border' : none,\n  'border-radius' : 50%,\n  'transition' : $transition,\n\n  'modifiers' : (\n    'default' : (\n      'color' : $white,\n      'background' : rgba($black, 0.25),\n      'hover' : (\n        'color' : $white,\n        'background' : rgba($black, 0.5),\n      ),\n    ),\n    'light' : (\n      'color' : $color,\n      'background' : rgba($white, 0.5),\n      'hover' : (\n        'color' : $color,\n        'background' : rgba($white, 1),\n      ),\n    ),\n    'danger' : (\n      'selector' : '&.red, &.danger',\n      'background' : $red,\n      'hover' : (\n        'background' : $red-700,\n      ),\n    ),\n    'warning' : (\n      'selector' : '&.yellow, &.warning',\n      'background' : $orange,\n      'hover' : (\n        'background' : $orange-700,\n      ),\n    ),\n    'success' : (\n      'selector' : '&.green, &.success',\n      'background' : $green,\n      'hover' : (\n        'background' : $green-700,\n      ),\n    ),\n  ),\n\n) !default;\n\n// Extend default component map with overrides if they exist\n@if variable-exists(override) {\n  @if map-has-key($override, 'chips') {\n    $chips: map-extend($chips, map-get($override, 'chips'), true);\n  }\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// @Chip Mixins\n////////////////////////////////////////////////////////////////////////////////\n\n// Make chip\n// Creates the base styles for the chip element.\n// @param $options\n//   @type map\n//   @default $chips map\n@mixin make-chip($options: ()) {\n  $o: map-merge($chips, $options);\n\n  cursor: pointer;\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n\n  @include add-styles($o);\n  @include add-modifiers($o, 'default', false);\n\n  @content;\n\n  @if (variable-exists(icons)) {\n    .#{map-get($icons, 'class')} {\n      margin: 0;\n      font-size: 1em;\n    }\n  }\n}\n\n// Add Chip Modifiers\n// Creates styles for the chip block along with modifiers.\n// @param $options\n//   @type map\n//   @default ()\n@mixin add-chip-modifiers($options: ()) {\n  $o: $options;\n\n  // Check if $chips exists and if output is set to true\n  @if map-get($chips, 'output') {\n\n    // If chips key exists, output chip styles\n    @if map-has-key($o, 'chips') {\n      .#{map-get($chips, 'class')} {\n        @include add-styles(map-get($o, 'chips'));\n        @if (map-fetch($o, 'chips', 'key')) {\n          @include add-modifiers($chips, map-fetch($o, 'chips', 'key'), false);\n        }\n      }\n    }\n\n    // Check if modifiers exist\n    @if (map-has-key($o, 'modifiers')) {\n      @each $name, $map in map-get($o, 'modifiers') {\n        // If chips key exists, output chip styles\n        @if (map-has-key($map, 'chips')) {\n          &.#{$name} {\n            .#{map-get($chips, 'class')} {\n              @include add-styles(map-get($map, 'chips'));\n              @if (map-fetch($map, 'chips', 'key')) {\n                @include add-modifiers($chips, map-fetch($map, 'chips', 'key'), false);\n              }\n            }\n          }\n        }\n      }\n    }\n\n  }\n\n}\n\n// Check if we should output chip\n@if map-get($chips, 'output') {\n\n/*==============================================================================\n  @Chips - #{$filename}\n==============================================================================*/\n\n.#{map-get($chips, 'class')} {\n  @include make-chip();\n}\n\n// Check if we should output chip modifiers\n@if map-get($chips, 'output-modifiers') {\n/**\n * Modifiers\n */\n  .#{map-get($chips, 'class')} {\n    @include add-modifiers($chips);\n  }\n} // End @if output-modifiers\n\n} // End @if output\n","// Set file variable\n$filename: 'scss/blocks/_badge.scss';\n\n////////////////////////////////////////////////////////////////////////////////\n// @Badges Map\n////////////////////////////////////////////////////////////////////////////////\n\n$badges: (\n  'output' : true,\n  'output-modifiers' : true,\n  'output-buttons' : true,\n  'class' : 'badge',\n\n  'padding' : 0.25rem 0.5rem,\n  'font-size' : 0.9em,\n  'line-height' : 1.4em,\n  'border' : none,\n  'border-radius' : $border-radius,\n  'transition' : $transition,\n\n  'chips' : (\n    'margin' : 0 -0.25em 0 0.5em,\n    'padding' : 0.125em,\n  ),\n\n  'buttons' : (\n    'margin' : 0.5em,\n    'padding' : .25em .5em,\n  ),\n\n  'modifiers' : (\n    'default' : (\n      'color' : $color,\n      'background' : rgba($black, 0.05),\n      'hover' : (\n        'cursor': pointer,\n        'color' : $color,\n        'background' : rgba($black, 0.15),\n      ),\n    ),\n    'inverted' : (\n      'color' : $white,\n      'background' : $gray,\n      'hover' : (\n        'color' : $white,\n        'background' : $gray-700,\n      ),\n    ),\n    'active' : (\n      'color' : $white,\n      'background' : $blue,\n      'hover' : (\n        'color' : $white,\n        'background' : $blue-700,\n      ),\n    ),\n\n    'blue' : (\n      'color' : $blue,\n      'background' : $blue-50,\n      'hover' : (\n        'color' : $blue,\n        'background' : $blue-100,\n      ),\n    ),\n    'blue.inverted' : (\n      'color' : $white,\n      'background' : $blue,\n      'hover' : (\n        'color' : $white,\n        'background' : $blue-700,\n      ),\n    ),\n    'green' : (\n      'color' : $green,\n      'background' : $green-50,\n      'hover' : (\n        'color' : $green-700,\n        'background' : $green-100,\n      ),\n    ),\n    'green.inverted' : (\n      'color' : $white,\n      'background' : $green,\n      'hover' : (\n        'color' : $white,\n        'background' : $green-700,\n      ),\n    ),\n    'yellow' : (\n      'color' : $color,\n      'background' : $yellow-100,\n      'hover' : (\n        'color' : $color,\n        'background' : $yellow-300,\n      ),\n    ),\n    'yellow.inverted' : (\n      'color' : $color,\n      'background' : $yellow,\n      'hover' : (\n        'color' : $color,\n        'background' : $yellow-600,\n      ),\n    ),\n    'orange' : (\n      'color' : $orange-700,\n      'background' : $orange-50,\n      'hover' : (\n        'color' : $orange-700,\n        'background' : $orange-100,\n      ),\n    ),\n    'orange.inverted' : (\n      'color' : $white,\n      'background' : $orange,\n      'hover' : (\n        'color' : $white,\n        'background' : $orange-700,\n      ),\n    ),\n    'red' : (\n      'color' : $red,\n      'background' : $red-50,\n      'hover' : (\n        'color' : $red-700,\n        'background' : $red-100,\n      ),\n    ),\n    'red.inverted' : (\n      'color' : $white,\n      'background' : $red,\n      'hover' : (\n        'color' : $white,\n        'background' : $red-700,\n      ),\n    ),\n    'purple' : (\n      'color' : $purple,\n      'background' : $purple-50,\n      'hover' : (\n        'color' : $purple-700,\n        'background' : $purple-100,\n      ),\n    ),\n    'purple.inverted' : (\n      'color' : $white,\n      'background' : $purple,\n      'hover' : (\n        'color' : $white,\n        'background' : $purple-700,\n      ),\n    ),\n    'light' : (\n      'color' : $color,\n      'background' : rgba($white, 0.75),\n      'hover' : (\n        'color' : $color,\n        'background' : rgba($white, 1),\n      ),\n    ),\n    'dark' : (\n      'color' : $white,\n      'background' : rgba($black, 0.5),\n      'hover' : (\n        'color' : $white,\n        'background' : rgba($black, 0.75),\n      ),\n    ),\n    'square' : (\n      'border-radius' : 0,\n    ),\n    'pill' : (\n      'padding' : 0.25rem 0.75rem,\n      'border-radius' : 3rem,\n      'chips' : (\n        'margin' : 0 -0.5rem 0 0.5rem,\n      ),\n    ),\n    'dot' : (\n      'display' : inline-block,\n      'width' : 8px,\n      'height' : 8px,\n      'padding' : 0,\n      'vertical-align' : top,\n      'border-radius': 50%,\n    ),\n  ),\n\n) !default;\n\n// Extend default component map with overrides if they exist\n@if variable-exists(override) {\n  @if map-has-key($override, 'badges') {\n    $badges: map-extend($badges, map-get($override, 'badges'), true);\n  }\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// @Badges Mixins\n////////////////////////////////////////////////////////////////////////////////\n\n// Make Badge\n// Creates the base styles for a the badge element.\n// @param $options\n//   @type map\n//   @default $badges map\n@mixin make-badge($options: ()) {\n  $o: map-extend($badges, $options, true);\n\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n\n  @include add-styles($o);\n  @include add-modifiers($o, 'default', false, ('output-pseudo': false));\n\n  @if map-fetch($o, 'modifiers', 'dot') {\n    &.dot {\n      @include add-text-hide();\n    }\n  }\n\n  @content;\n}\n\n// Check if we should output badges\n@if map-get($badges, 'output') {\n\n/*==============================================================================\n  @Badges - #{$filename}\n==============================================================================*/\n\n.#{map-get($badges, 'class')} {\n  @include make-badge();\n}\na.#{map-get($badges, 'class')},\nbutton.#{map-get($badges, 'class')} {\n  @include add-modifiers($badges, 'default', false, ('output-base': false));\n}\n\n// Check if we should output badge modifiers\n@if map-get($badges, 'output-modifiers') {\n/**\n * Modifiers\n */\n  .#{map-get($badges, 'class')} {\n    @include add-modifiers($badges, $settings: ('output-pseudo': false));\n    @include add-chip-modifiers($badges);\n  }\n  a.#{map-get($badges, 'class')},\n  button.#{map-get($badges, 'class')} {\n    @include add-modifiers($badges, $settings: ('output-base': false));\n  }\n}\n\n// Check if we should output button modifiers\n@if map-get($badges, 'output-buttons') {\n/**\n * Button Styles\n */\n  // Check if $buttons exists\n  @if (variable-exists(buttons)) {\n    @if map-fetch($badges, 'modifiers', 'dot') {\n      .#{map-get($buttons, 'class')} .#{map-get($badges, 'class')}:not(.dot) {\n        display: inline;\n        padding: map-fetch($badges, 'buttons', 'padding');\n      }\n      .#{map-get($buttons, 'class')}-#{map-get($icons, 'class')} {\n        position: relative;\n\n        .#{map-get($badges, 'class')}.dot {\n          position: absolute;\n          top: 8px;\n          right: 8px;\n        }\n        &.small .#{map-get($badges, 'class')}.dot {\n          width: map-fetch($badges, 'modifiers', 'dot', 'width') - 2px;\n          height: map-fetch($badges, 'modifiers', 'dot', 'width') - 2px;\n          top: 4px;\n          right: 4px;\n        }\n        &.large .#{map-get($badges, 'class')}.dot {\n          width: map-fetch($badges, 'modifiers', 'dot', 'width') + 2px;\n          height: map-fetch($badges, 'modifiers', 'dot', 'width') + 2px;\n          top: 10px;\n          right: 10px;\n        }\n      }\n    }\n    .#{map-get($buttons, 'class')}-#{map-get($badges, 'class')}-left {\n      .#{map-get($badges, 'class')} {\n        margin-left: -(map-fetch($badges, 'buttons', 'margin'));\n        margin-right: map-fetch($badges, 'buttons', 'margin');\n      }\n    }\n    .#{map-get($buttons, 'class')}-#{map-get($badges, 'class')}-right {\n      .#{map-get($badges, 'class')} {\n        margin-left: map-fetch($badges, 'buttons', 'margin');\n        margin-right: -(map-fetch($badges, 'buttons', 'margin'));\n      }\n    }\n  }\n} // End @if output-buttons\n\n} // End @if output\n","// Set file variable\n$filename: 'scss/blocks/_breadcrumb.scss';\n\n////////////////////////////////////////////////////////////////////////////////\n// @Breadcrumbs Map\n////////////////////////////////////////////////////////////////////////////////\n\n$breadcrumbs: (\n  'output' : true,\n  'class' : 'breadcrumb',\n\n  'display' : block,\n  'margin' : 1em 0,\n  'font-size' : 1em,\n\n  'delimiter' : (\n    'content' : '/', // Delimiter element content (e.g: '/', '—', '→', '»')\n    'padding' : 0 0.75em,\n    'color' : $gray-400,\n    'last-child' : false,\n  ),\n\n  'modifiers' : (\n    'current' : (\n      'selector' : '.current',\n      'color' : $color-light,\n    ),\n  ),\n\n) !default;\n\n// Extend default component map with overrides if they exist\n@if variable-exists(override) {\n  @if map-has-key($override, 'breadcrumbs') {\n    $breadcrumbs: map-extend($breadcrumbs, map-get($override, 'breadcrumbs'), true);\n  }\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// @Breadcrumb Mixins\n////////////////////////////////////////////////////////////////////////////////\n\n// Make Breadcrumb\n// Creates the basic breadcrumb styles.\n// @param $options\n//   @type map\n//   @default $breadcrumbs map\n@mixin make-breadcrumb($options: ()) {\n  $o: map-extend($breadcrumbs, $options, true);\n\n  @include add-styles($o);\n  @include add-modifiers($o);\n\n  // Remove default list styles\n  ul,\n  ol {\n    margin: 0;\n    list-style: none;\n    @include add-clearfix();\n  }\n\n  // Float list items to the left to:\n  //   a) Get rid of the extra white spacing from inline items.\n  //   b) Wrap properly if items don't fit on one line.\n  li {\n    float: left;\n    margin: 0;\n  }\n\n  // Delimiter styles\n  li:after {\n    @include add-styles(map-get($breadcrumbs, 'delimiter'));\n  }\n  // Remove last delimiter if ('delimiter', 'last-child') is set to false\n  @if (map-fetch($o, 'delimiter', 'last-child') == false) {\n    li:last-child:after {\n      content: none;\n    }\n  }\n}\n\n// Check if we should output breadcrumbs\n@if map-get($breadcrumbs, 'output') {\n\n/*==============================================================================\n  @Breadcrumb - #{$filename}\n==============================================================================*/\n\n.#{map-get($breadcrumbs, 'class')} {\n  @include make-breadcrumb();\n}\n\n} // End @if output\n","// Set file variable\n$filename: 'scss/blocks/_button-groups.scss';\n\n// Required components warning\n@if (variable-exists(buttons) == false) {\n  @warn \"The button-groups block component requires the buttons element component!\";\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// @Button Groups Map\n////////////////////////////////////////////////////////////////////////////////\n\n$button-groups: (\n  'output' : true,\n  'class' : 'button-group',\n\n  'display' : 'inline',\n  'orientation' : 'horizontal',\n\n  'spacing' : 0.25em,\n  'border-radius' : map-get($buttons, 'border-radius'),\n  'inner-border-radius' : 0,\n\n) !default;\n\n// Extend default component map with overrides if they exist\n@if variable-exists(override) {\n  @if map-has-key($override, 'button-groups') {\n    $button-groups: map-extend($button-groups, map-get($override, 'button-groups'), true);\n  }\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// @Button Groups Mixins\n////////////////////////////////////////////////////////////////////////////////\n\n// Make Button Group\n// Creates the base styles for button groups.\n// @param $defaults\n//   @type boolean\n//   @default true\n// @param $options\n//   @type map\n//   @default $button-groups map\n@mixin make-button-group($defaults: true, $options: ()) {\n  $o: map-merge($button-groups, $options);\n\n  @if $defaults {\n    @include add-button-group-display(map-get($o, 'display'));\n    @include add-button-group-orientation(map-get($o, 'orientation'));\n  }\n\n  > .button {\n    position: relative;\n    z-index: 1;\n    flex: 1 1 auto;\n    margin: 0;\n\n    // Stack order\n    &:hover {\n      z-index: 2;\n    }\n    &:focus {\n      z-index: 3;\n    }\n    &:active {\n      z-index: 4;\n    }\n    &.active {\n      z-index: 5;\n    }\n\n    // Flex modifiers\n    &.static {\n      flex-grow: 0;\n    }\n  }\n}\n\n// Add Button Group Display\n// Adds button styles based on orientation and display type provided.\n// @param $display\n//   @type string 'inline' | 'block'\n//   @default null\n// @param $options\n//   @type map\n//   @default $button-groups map\n@mixin add-button-group-display($display: null, $options: ()) {\n  $o: map-merge($button-groups, $options);\n\n  @if ($display == 'inline') {\n\n    display: inline-flex;\n\n  } @else if ($display == 'block' ) {\n\n    display: flex;\n\n  }\n}\n\n// Add Button Group Orientation\n// Adds button styles based on orientation and display type provided.\n// @param $orientation\n//   @type string 'horizontal' | 'vertical' | 'hori' | 'vert'\n//   @default null\n// @param $options\n//   @type map\n//   @default $button-groups map\n@mixin add-button-group-orientation($orientation: null, $options: ()) {\n  $o: map-merge($button-groups, $options);\n\n  // Horizontal or Vertical\n  @if (($orientation == 'horizontal') or ($orientation == 'hori')) {\n\n    flex-flow: row;\n\n    > .#{map-get($buttons, 'class')} {\n      @if (map-get($o, 'border-radius') != null) {\n        border-radius: map-get($o, 'inner-border-radius');\n      }\n\n      + .#{map-get($buttons, 'class')} {\n        margin-top: 0;\n        margin-left: (map-get($o, 'spacing'));\n      }\n\n      @if (map-get($o, 'border-radius') != null and map-get($o, 'inner-border-radius') != null) {\n        &:first-child {\n          border-radius: map-get($o, 'border-radius') map-get($o, 'inner-border-radius') map-get($o, 'inner-border-radius') map-get($o, 'border-radius');\n        }\n        &:last-child {\n          border-radius: map-get($o, 'inner-border-radius') map-get($o, 'border-radius') map-get($o, 'border-radius') map-get($o, 'inner-border-radius');\n        }\n      }\n    }\n\n  } @else if (($orientation == 'vertical' ) or ($orientation == 'vert' )) {\n\n    flex-flow: column;\n\n    > .#{map-get($buttons, 'class')} {\n      @if (map-get($o, 'border-radius') != null) {\n        border-radius: map-get($o, 'inner-border-radius');\n      }\n\n      + .#{map-get($buttons, 'class')} {\n        margin-top: (map-get($o, 'spacing'));\n        margin-left: 0;\n      }\n\n      @if (map-get($o, 'border-radius') != null and map-get($o, 'inner-border-radius') != null) {\n        &:first-child {\n          border-radius: map-get($o, 'border-radius') map-get($o, 'border-radius') map-get($o, 'inner-border-radius') map-get($o, 'inner-border-radius');\n        }\n        &:last-child {\n          border-radius: map-get($o, 'inner-border-radius') map-get($o, 'inner-border-radius') map-get($o, 'border-radius') map-get($o, 'border-radius');\n        }\n      }\n    }\n  }\n}\n\n// Check if we should output button-groups\n@if map-get($button-groups, 'output') {\n\n/*==============================================================================\n  @Button Groups - #{$filename}\n==============================================================================*/\n\n.#{map-get($button-groups, 'class')} {\n  @include make-button-group();\n}\n\n/**\n * Button Group Modifiers\n */\n.#{map-get($button-groups, 'class')}.inline {\n  @include add-button-group-display('inline');\n}\n.#{map-get($button-groups, 'class')}.block {\n  @include add-button-group-display('block');\n}\n.#{map-get($button-groups, 'class')}.hori,\n.#{map-get($button-groups, 'class')}.horizontal {\n  @include add-button-group-orientation('hori');\n}\n.#{map-get($button-groups, 'class')}.vert,\n.#{map-get($button-groups, 'class')}.vertical {\n  @include add-button-group-orientation('vert');\n}\n\n\n} // End @if output\n","// Set file variable\n$filename: 'scss/blocks/_dropdowns.scss';\n\n////////////////////////////////////////////////////////////////////////////////\n// @Dropdowns Map\n////////////////////////////////////////////////////////////////////////////////\n\n$dropdowns: (\n  'output' : true,\n  'output-position' : true,\n\n  'class-dropdown-trigger' : 'dropdown-trigger',\n  'class-dropdown'         : 'dropdown',\n  'class-dropdown-content' : 'dropdown-content',\n  'class-dropdown-menu'    : 'dropdown-menu',\n  'class-anchor'           : 'anchor',\n\n  'class-active' : 'active',\n  'class-action-hover' : 'on-hover',\n  'class-action-click' : 'on-click',\n\n  'target' : null,\n  'target-action' : null,\n\n  'target-zindex'        : 100,\n  'target-action-zindex' : 105,\n\n  'width'             : 16rem,\n  'padding'           : 1em,\n  'padding-menu'      : 0.5em,\n  'padding-menu-item' : 0.75em 1em,\n\n  'block-margin'      : -0.5em,\n  'block-padding'     : 1em,\n\n  'font-size'   : px-to-rem(14px),\n  'line-height' : 1.35em,\n\n  'background'       : $white,\n  'background-hover' : rgba($black, 0.05),\n  'background-clip'  : padding-box,\n  'border'           : 1px solid rgba($black, 0.1),\n  'border-inner'     : 1px solid rgba($black, 0.1),\n  'border-radius'    : $border-radius,\n  'box-shadow'       : 0 2px 6px rgba($black, 0.15),\n  'color'            : $color,\n  'color-hover'      : $color,\n  'color-active'     : $color-light,\n\n  'content-sep'    : 0.5em,\n  'content-sep-hr' : 1em,\n\n  'offset-margin-one' : -1px, // The first position margin offset\n  'offset-margin-two' : 0,    // The second position margin offset (does not apply to centered dropdowns)\n  'offset-position'   : 0,    // The second position offset (does not apply to centered dropdowns)\n\n  'dropdown-position'      : 'bottom-left',\n  'dropdown-position-menu' : 'right-top',\n\n) !default;\n\n// Extend default component map with overrides if they exist\n@if variable-exists(override) {\n  @if map-has-key($override, 'dropdowns') {\n    $dropdowns: map-extend($dropdowns, map-get($override, 'dropdowns'), true);\n  }\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// @Dropdown Mixins\n////////////////////////////////////////////////////////////////////////////////\n\n// Make Dropdown\n// Creates the base styles for dropdowns.\n// @param $options\n//   @type map\n//   @default $dropdowns map\n@mixin make-dropdown($options: ()) {\n  $o: map-merge($dropdowns, $options);\n\n  position: relative;\n  display: block;\n  width: map-get($o, 'width');\n  margin: 0;\n  font-size: map-get($o, 'font-size');\n  line-height: map-get($o, 'line-height');\n  background: map-get($o, 'background');\n  background-clip: map-get($o, 'background-clip');\n  border: map-get($o, 'border');\n  box-shadow: map-get($o, 'box-shadow');\n  border-radius: map-get($o, 'border-radius');\n}\n\n// Make Dropdown Trigger\n// Creates the base styles for a dropdown trigger.\n// @param $options\n//   @type map\n//   @default $dropdowns map\n@mixin make-dropdown-trigger($options: ()) {\n  $o: map-merge($dropdowns, $options);\n\n  // Set our target action\n  $target : '.' + map-get($o, 'class-dropdown') !default;\n\n  @if (map-get($o, 'target')) {\n    $target : map-get($o, 'target');\n  }\n\n  // Set our target action variable\n  $target-action :\n    '&:not(.#{map-get($o, 'class-action-click')}):not(.#{map-get($o, 'class-action-hover')}):hover > .#{map-get($o, 'class-dropdown')}',\n    '&.#{map-get($o, 'class-active')} > .#{map-get($o, 'class-dropdown')}'\n  !default;\n\n  @if (map-get($o, 'target-action')) {\n    $target-action : map-get($o, 'target-action');\n  }\n\n  // Base trigger styles\n  position: relative;\n\n  // Base target styles\n  #{$target} {\n    position: absolute;\n    z-index: map-get($o, 'target-zindex');\n    display: none;\n  }\n\n  // Base target hover & active styles\n  #{$target-action} {\n    display: block;\n  }\n\n  // Add stack order to hovered dropdowns\n  &:hover > .#{map-get($o, 'class-dropdown')} {\n    z-index: map-get($o, 'target-action-zindex');\n  }\n\n}\n\n// Add Dropdown Style\n// Creates specific dropdown styles for a content type.\n// @param $type\n//   @type string\n//   @options 'dropdown', 'dropdown-content', 'dropdown-menu'\n//   @default 'dropdown'\n// @param $options\n//   @type map\n//   @default $dropdowns map\n@mixin add-dropdown-style($type : 'dropdown', $options: ()) {\n  $o: map-merge($dropdowns, $options);\n\n  @if ($type == 'dropdown') {\n\n    padding: 0;\n\n    > .#{map-get($o, 'class-dropdown-content')},\n    > .#{map-get($o, 'class-dropdown-menu')} {\n      width: auto;\n      margin: 0;\n      background: none;\n      border: none;\n      border-top: map-get($o, 'border-inner');\n      box-shadow: none;\n      border-radius: 0;\n\n      &:first-child {\n        border-top: none;\n        border-top-left-radius: map-get($o, 'border-radius');\n        border-top-right-radius: map-get($o, 'border-radius');\n      }\n      &:last-child {\n        border-bottom-left-radius: map-get($o, 'border-radius');\n        border-bottom-right-radius: map-get($o, 'border-radius');\n      }\n    }\n\n  } @else if ($type == 'dropdown-content') {\n\n    padding: map-get($o, 'padding');\n\n    > * {\n      margin-top: map-get($o, 'content-sep');\n      margin-bottom: map-get($o, 'content-sep');\n    }\n    > :first-child {\n      margin-top: 0;\n    }\n    > :last-child {\n      margin-bottom: 0;\n    }\n\n    > hr {\n      margin: map-get($o, 'content-sep-hr') 0;\n    }\n\n    // Block Links\n    > a.block {\n      display: block;\n      margin: map-get($o, 'block-margin');\n      padding: map-get($o, 'block-padding');\n      color: map-get($o, 'color');\n      text-decoration: none;\n      border: none;\n      border-radius: map-get($o, 'border-radius');\n\n      &:hover {\n        background: map-get($o, 'background-hover');\n        color: map-get($o, 'color-hover');\n      }\n\n      > * {\n        margin-top: map-get($o, 'content-sep');\n        margin-bottom: map-get($o, 'content-sep');\n      }\n      > :first-child {\n        margin-top: 0;\n      }\n      > :last-child {\n        margin-bottom: 0;\n      }\n    }\n\n    > .button {\n      display: block;\n    }\n\n  } @else if ($type == 'dropdown-menu') {\n\n    list-style: none;\n    padding: map-get($o, 'padding-menu');\n\n    // Dropdown Menu Items\n    li {\n      position: relative;\n      margin: 0;\n      border-bottom: map-get($o, 'border-inner');\n    }\n    li:hover {\n      background: map-get($o, 'background-hover');\n      background-clip: padding-box;\n\n      > a {\n        color: map-get($o, 'color-hover');\n      }\n    }\n    li.active {\n      > a {\n        color: map-get($o, 'color-active');\n      }\n      &:hover {\n        background: none;\n      }\n    }\n    li:first-child {\n      border-top-left-radius: map-get($o, 'border-radius');\n      border-top-right-radius: map-get($o, 'border-radius');\n    }\n    li:last-child {\n      border-bottom: none;\n      border-bottom-left-radius: map-get($o, 'border-radius');\n      border-bottom-right-radius: map-get($o, 'border-radius');\n    }\n\n    a {\n      display: block;\n      padding: map-get($o, 'padding-menu-item');\n      color: map-get($o, 'color');\n      border: none;\n      text-decoration: none;\n    }\n\n  } @else {\n    @warn 'The output type \"#{$type}\" is not supported in `add-dropdown-style()`';\n  }\n\n}\n\n// Add Dropdown Position\n// Adds the position styles for a dropdown.\n// @param $anchor\n//   @type string\n//     'bottom-left', 'bottom-right', 'bottom-center',\n//     'top-left', 'top-right', 'top-center',\n//     'left-top', 'left-bottom', 'left-center',\n//     'right-top', 'right-bottom', 'right-center'\n//   @default 'bottom-left'\n// @param $options\n//   @type map\n//   @default $dropdowns map\n@mixin add-dropdown-position($anchor : 'bottom-left', $options: ()) {\n  $o: map-merge($dropdowns, $options);\n\n  // Set our target action\n  $target : '.' + map-get($o, 'class-dropdown') !default;\n\n  @if (map-get($o, 'target')) {\n    $target : map-get($o, 'target');\n  }\n\n  // Set our target action variable\n  $target-action :\n    '&:not(.#{map-get($o, 'class-action-click')}):not(.#{map-get($o, 'class-action-hover')}):hover > .#{map-get($o, 'class-dropdown')}',\n    '&.#{map-get($o, 'class-active')} > .#{map-get($o, 'class-dropdown')}'\n  !default;\n\n  @if (map-get($o, 'target-action')) {\n    $target-action : map-get($o, 'target-action');\n  }\n\n  // Bottom Left\n  @if ($anchor == 'bottom-left') {\n    #{$target} {\n      margin: map-get($o, 'offset-margin-one') 0 0 map-get($o, 'offset-margin-two');\n      top: 100%;\n      left: map-get($o, 'offset-position');\n      right: auto;\n      bottom: auto;\n    }\n\n  // Bottom Right\n  } @else if ($anchor == 'bottom-right') {\n    #{$target} {\n      margin: map-get($o, 'offset-margin-one') map-get($o, 'offset-margin-two') 0 0;\n      top: 100%;\n      left: auto;\n      right: map-get($o, 'offset-position');\n      bottom: auto;\n    }\n\n  // Bottom Center\n  } @else if ($anchor == 'bottom-center') {\n    #{$target} {\n      margin: map-get($o, 'offset-margin-one') 0 0 0;\n      top: 100%;\n      left: 50%;\n      right: auto;\n      bottom: auto;\n      transform: translate3d(-50%, 0, 0);\n    }\n  }\n\n  // Top left\n  @if ($anchor == 'top-left') {\n    #{$target} {\n      margin: 0 0 map-get($o, 'offset-margin-one') map-get($o, 'offset-margin-two');\n      top: auto;\n      left: map-get($o, 'offset-position');\n      right: auto;\n      bottom: 100%;\n    }\n\n  // Top Right\n  } @else if ($anchor == 'top-right') {\n    #{$target} {\n      margin: 0 map-get($o, 'offset-margin-two') map-get($o, 'offset-margin-one') 0;\n      top: auto;\n      left: auto;\n      right: map-get($o, 'offset-position');\n      bottom: 100%;\n    }\n\n  // Top Center\n  } @else if ($anchor == 'top-center') {\n    #{$target} {\n      margin: 0 0 map-get($o, 'offset-margin-one') 0;\n      top: auto;\n      left: 50%;\n      right: auto;\n      bottom: 100%;\n      transform: translate3d(-50%, 0, 0);\n    }\n  }\n\n  // Left Top\n  @if ($anchor == 'left-top') {\n    #{$target} {\n      margin: map-get($o, 'offset-margin-two') map-get($o, 'offset-margin-one') 0 0;\n      top: map-get($o, 'offset-position');\n      left: auto;\n      right: 100%;\n      bottom: auto;\n    }\n\n  // Left Bottom\n  } @else if ($anchor == 'left-bottom') {\n    #{$target} {\n      margin: 0 map-get($o, 'offset-margin-one') map-get($o, 'offset-margin-two') 0;\n      top: auto;\n      left: auto;\n      right: 100%;\n      bottom: map-get($o, 'offset-position');\n    }\n\n  // Left Center\n  } @else if ($anchor == 'left-center') {\n    #{$target} {\n      margin: 0 map-get($o, 'offset-margin-one') 0 0;\n      top: 50%;\n      left: auto;\n      right: 100%;\n      bottom: auto;\n      transform: translate3d(0, -50%, 0);\n    }\n  }\n\n  // Right Top\n  @if ($anchor == 'right-top') {\n    #{$target} {\n      margin: map-get($o, 'offset-margin-two') 0 0 map-get($o, 'offset-margin-one');\n      top: map-get($o, 'offset-position');\n      left: 100%;\n      right: auto;\n      bottom: auto;\n    }\n\n  // Right Bottom\n  } @else if ($anchor == 'right-bottom') {\n    #{$target} {\n      margin: 0 0 map-get($o, 'offset-margin-two') map-get($o, 'offset-margin-one');\n      top: auto;\n      left: 100%;\n      right: auto;\n      bottom: map-get($o, 'offset-position');\n    }\n\n  // Right Center\n  } @else if ($anchor == 'right-center') {\n    #{$target} {\n      margin: 0 0 0 map-get($o, 'offset-margin-one');\n      top: 50%;\n      left: 100%;\n      right: auto;\n      bottom: auto;\n      transform: translate3d(0, -50%, 0);\n    }\n  }\n}\n\n// Check if we should output dropdowns\n@if map-get($dropdowns, 'output') {\n\n/*==============================================================================\n  @Dropdowns - #{$filename}\n==============================================================================*/\n\n.#{map-get($dropdowns, 'class-dropdown')},\n.#{map-get($dropdowns, 'class-dropdown-content')},\n.#{map-get($dropdowns, 'class-dropdown-menu')} {\n  @include make-dropdown();\n}\n\n/**\n * Content\n */\n.#{map-get($dropdowns, 'class-dropdown')} {\n  @include add-dropdown-style('dropdown');\n}\n.#{map-get($dropdowns, 'class-dropdown-content')} {\n  @include add-dropdown-style('dropdown-content');\n}\n.#{map-get($dropdowns, 'class-dropdown-menu')} {\n  @include add-dropdown-style('dropdown-menu');\n}\n\n/*==============================================================================\n  @Dropdown Triggers - #{$filename}\n==============================================================================*/\n\n.#{map-get($dropdowns, 'class-dropdown-trigger')} {\n  @include make-dropdown-trigger();\n  @include add-dropdown-position('bottom-left');\n}\n\n.#{map-get($dropdowns, 'class-dropdown-menu')} {\n  @include make-dropdown-trigger((\n    'target' : '.dropdown-menu',\n    'target-action' : '> li:hover > .dropdown-menu, &.active > li > .dropdown-menu'\n  ));\n  @include add-dropdown-position('right-top', (\n    'target' : '.dropdown-menu',\n    'target-action' : '> li:hover > .dropdown-menu, &.active > li > .dropdown-menu',\n    'offset-margin-two' : -1px,\n    'offset-position' : -0.5em\n  ));\n}\n\n// Check if we should output position classes\n@if map-get($dropdowns, 'output-position') {\n\n/*==============================================================================\n  @Dropdown Anchor Positions - #{$filename}\n==============================================================================*/\n\n.#{map-get($dropdowns, 'class-anchor')}-bottom-left {\n  @include add-dropdown-position($anchor: 'bottom-left');\n}\n.#{map-get($dropdowns, 'class-anchor')}-bottom-right {\n  @include add-dropdown-position($anchor: 'bottom-right');\n}\n.#{map-get($dropdowns, 'class-anchor')}-bottom-center {\n  @include add-dropdown-position($anchor: 'bottom-center');\n}\n\n.#{map-get($dropdowns, 'class-anchor')}-top-left {\n  @include add-dropdown-position($anchor: 'top-left');\n}\n.#{map-get($dropdowns, 'class-anchor')}-top-right {\n  @include add-dropdown-position($anchor: 'top-right');\n}\n.#{map-get($dropdowns, 'class-anchor')}-top-center {\n  @include add-dropdown-position($anchor: 'top-center');\n}\n\n.#{map-get($dropdowns, 'class-anchor')}-left-top {\n  @include add-dropdown-position($anchor: 'left-top');\n}\n.#{map-get($dropdowns, 'class-anchor')}-left-bottom {\n  @include add-dropdown-position($anchor: 'left-bottom');\n}\n.#{map-get($dropdowns, 'class-anchor')}-left-center {\n  @include add-dropdown-position($anchor: 'left-center');\n}\n\n.#{map-get($dropdowns, 'class-anchor')}-right-top {\n  @include add-dropdown-position($anchor: 'right-top');\n}\n.#{map-get($dropdowns, 'class-anchor')}-right-bottom {\n  @include add-dropdown-position($anchor: 'right-bottom');\n}\n.#{map-get($dropdowns, 'class-anchor')}-right-center {\n  @include add-dropdown-position($anchor: 'right-center');\n}\n\n} // End @if output position classes\n\n} // End @if output\n","// Set file variable\n$filename: 'scss/blocks/_notice.scss';\n\n////////////////////////////////////////////////////////////////////////////////\n// @Notices Map\n////////////////////////////////////////////////////////////////////////////////\n\n$notices: (\n  'output' : true,\n  'output-modifiers' : true,\n  'class' : 'notice',\n\n  'margin' : 2em 0,\n  'padding' : 0.25em 1.25em,\n  'font-size' : 1em,\n  'line-height' : 1.5em,\n  'border' : 1px solid rgba($black, 0.15),\n  'border-radius' : $border-radius,\n  'box-shadow' : 0 1px 3px rgba($black, 0.1),\n\n  'chips' : (\n    'float': right,\n    'margin': 1em 0 1em 1em,\n    'padding': 0.25em,\n    'font-size': 1em,\n  ),\n\n  'modifiers' : (\n    'default' : (\n      'color' : $color,\n      'background' : $gray-100,\n    ),\n    'inverted' : (\n      'color' : $white,\n      'background' : $color,\n      'chips' : (\n        'key' : 'light',\n      ),\n    ),\n    'info' : (\n      'background' : $blue-50,\n    ),\n    'info.inverted' : (\n      'color' : $white,\n      'background' : $blue,\n    ),\n    'success' : (\n      'background' : $green-50,\n    ),\n    'success.inverted' : (\n      'color' : $white,\n      'background' : $green,\n    ),\n    'warning' : (\n      'background' : $yellow-100,\n    ),\n    'warning.inverted' : (\n      'color' : $color,\n      'background' : $yellow,\n      'chips' : (\n        'key' : 'default',\n      ),\n    ),\n    'danger' : (\n      'background' : $red-50,\n    ),\n    'danger.inverted' : (\n      'color' : $white,\n      'background' : $red,\n    ),\n  ),\n\n) !default;\n\n// Extend default component map with overrides if they exist\n@if variable-exists(override) {\n  @if map-has-key($override, 'notices') {\n    $notices: map-extend($notices, map-get($override, 'notices'), true);\n  }\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// @Notices Mixins\n////////////////////////////////////////////////////////////////////////////////\n\n// Make Notice\n// Creates the base styles for a notice block.\n// @param $options\n//   @type map\n//   @default $notices map\n@mixin make-notice($options: ()) {\n  $o: map-extend($notices, $options, true);\n\n  @include add-styles($o);\n  @include add-modifiers($o, 'default', false);\n\n  @content;\n\n}\n\n// Check if we should output notices\n@if map-get($notices, 'output') {\n\n/*==============================================================================\n  @Notices - #{$filename}\n==============================================================================*/\n\n.#{map-get($notices, 'class')} {\n  @include make-notice();\n}\n\n// Check if we should output notice modifiers\n@if map-get($notices, 'output-modifiers') {\n  .#{map-get($notices, 'class')} {\n    @include add-modifiers($notices);\n    @include add-chip-modifiers($notices);\n  }\n}\n\n} // End @if output\n","// Set file variable\n$filename: 'scss/custom/offcanvas.scss';\n\n////////////////////////////////////////////////////////////////////////////////\n// @Off-Canvas Map\n////////////////////////////////////////////////////////////////////////////////\n\n$offcanvas: (\n  'output' : true,\n  'class' : 'oc',\n\n  'class-wrap'     : 'oc-wrap',\n  'class-content'  : 'oc-content',\n  'class-inner'    : 'oc-inner',\n  'class-aside'    : 'oc-aside',\n  'class-aside-id' : 'oc-aside-left',\n  'class-active'   : 'oc-active',\n  'class-delay'    : 'oc-delay',\n\n  'screen-content' : rgba($black, 0.2),\n  'screen-aside'   : rgba($black, 0.2),\n\n  'transition' : 'slide-in-left',\n  'transition-duration' : 0.5s,\n  'width' : 280px,\n  'wrap-height' : 100%,\n  'aside-position' : fixed,\n\n  'background-wrap' : null,\n  'background-aside' : $white,\n  'background-content' : null,\n\n) !default;\n\n// Extend default off-canvas map with overrides if they exist\n@if variable-exists(override) {\n  @if map-has-key($override, 'offcanvas') {\n    $offcanvas: map-extend($offcanvas, map-get($override, 'offcanvas'), true);\n  }\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// @Off-Canvas Mixins\n////////////////////////////////////////////////////////////////////////////////\n\n// Make Off-Canvas\n// Creates the base styles for off-canvas content\n// @param $options\n//   @type map\n//   @default $offcanvas map\n@mixin make-offcanvas($options: ()) {\n  $o: map-merge($offcanvas, $options);\n\n  // Base structure styles\n  .#{map-get($o, 'class-wrap')} {\n    height: map-get($o, 'wrap-height');\n    @include add-scrollable();\n  }\n  .#{map-get($o, 'class-content')},\n  .#{map-get($o, 'class-inner')},\n  .#{map-get($o, 'class-aside')} {\n  \theight: 100%;\n  }\n\n  .#{map-get($o, 'class-wrap')} {\n  \tposition: relative;\n  \toverflow: hidden;\n    background: map-get($o, 'background-wrap');\n  }\n  .#{map-get($o, 'class-content')} {\n  \tposition: relative;\n  \tleft: 0;\n  \tz-index: 5;\n  \ttransition: transform map-get($o, 'transition-duration');\n    background: map-get($o, 'background-content');\n  }\n  .#{map-get($o, 'class-inner')} {\n    position: relative;\n    overflow-y: auto;\n  }\n  .#{map-get($o, 'class-aside')} {\n  \tposition: map-get($o, 'aside-position');\n  \ttop: 0;\n  \tz-index: 10;\n  \tvisibility: hidden;\n  \twidth: map-get($o, 'width');\n    overflow-y: auto;\n  \ttransition: all map-get($o, 'transition-duration');\n    background: map-get($o, 'background-aside');\n  }\n\n  // Content screen\n  @if (map-get($o, 'screen-content')) {\n    .#{map-get($o, 'class-content')}:after {\n    \tposition: absolute;\n    \ttop: 0;\n    \tright: 0;\n    \twidth: 0;\n    \theight: 0;\n    \tbackground: map-get($o, 'screen-content');\n    \tcontent: '';\n    \topacity: 0;\n    \ttransition: opacity map-get($o, 'transition-duration'), width 0.1s map-get($o, 'transition-duration'), height 0.1s map-get($o, 'transition-duration');\n    }\n    .#{map-get($o, 'class-active')} > .#{map-get($o, 'class-content')}:after {\n    \twidth: 100%;\n    \theight: 100%;\n    \topacity: 1;\n    \ttransition: opacity map-get($o, 'transition-duration');\n    }\n  }\n\n  // Aside screen\n  @if (map-get($o, 'screen-aside')) {\n    .#{map-get($o, 'class-aside')}:after {\n    \tposition: absolute;\n    \ttop: 0;\n    \tleft: 0;\n    \twidth: 100%;\n    \theight: 100%;\n      background: map-get($o, 'screen-aside');\n    \tcontent: '';\n    \topacity: 1;\n    \ttransition: opacity map-get($o, 'transition-duration');\n    }\n    .#{map-get($o, 'class-active')} > .#{map-get($o, 'class-aside')}:after {\n    \twidth: 0;\n    \theight: 0;\n    \topacity: 0;\n    \ttransition: opacity map-get($o, 'transition-duration'), width 0.1s map-get($o, 'transition-duration'), height 0.1s map-get($o, 'transition-duration');\n    }\n  }\n}\n\n// Add Off-Canvas Transition\n// Creates transition styles for off-canvas elements\n// @param $target\n//   @type string\n//   @options\n//     'slide-in-left', 'slide-in-right'\n//     'reveal-left', 'reveal-right'\n//     'slide-along-left', 'slide-along-right'\n//     'slide-out-left', 'slide-out-right'\n//     'scale-down-left', 'scale-down-right'\n//     'scale-up-left', 'scale-up-right'\n//     'scale-rotate-left', 'scale-rotate-right'\n//     'open-door-left', 'open-door-right'\n//   @default $offcanvas('class-aside-left')\n// @param $style\n//   @type string\n//   @default $offcanvas('transition')\n// @param $options\n//   @type map\n//   @default $offcanvas map\n@mixin add-offcanvas-transition($target: map-get($offcanvas, 'class-aside-id'), $style: map-get($offcanvas, 'transition'), $options: ()) {\n  $o: map-merge($offcanvas, $options);\n\n  // slide in left\n  @if ($style == 'slide-in-left') {\n\n    .#{$target}.#{map-get($o, 'class-aside')} {\n      left: 0;\n    \tvisibility: visible;\n    \ttransform: translate3d(-100%, 0, 0);\n    }\n    .#{$target}.#{map-get($o, 'class-active')} .#{$target}.#{map-get($o, 'class-aside')} {\n    \tvisibility: visible;\n    \ttransform: translate3d(0, 0, 0);\n    }\n    .#{$target}.#{map-get($o, 'class-aside')}:after {\n    \tdisplay: none;\n    }\n\n  // slide in right\n  } @else if ($style == 'slide-in-right') {\n\n    .#{$target}.#{map-get($o, 'class-aside')} {\n      right: 0;\n    \tvisibility: visible;\n    \ttransform: translate3d(100%, 0, 0);\n    }\n    .#{$target}.#{map-get($o, 'class-active')} .#{$target}.#{map-get($o, 'class-aside')} {\n    \tvisibility: visible;\n    \ttransform: translate3d(0, 0, 0);\n    }\n    .#{$target}.#{map-get($o, 'class-aside')}:after {\n    \tdisplay: none;\n    }\n\n  // reveal left\n  } @else if ($style == 'reveal-left') {\n\n    .#{$target}.#{map-get($o, 'class-active')} .#{map-get($o, 'class-content')} {\n    \ttransform: translate3d(map-get($o, 'width'), 0, 0);\n    }\n    .#{$target}.#{map-get($o, 'class-aside')} {\n      left: 0;\n    \tz-index: 1;\n    }\n    .#{$target}.#{map-get($o, 'class-active')} .#{$target}.#{map-get($o, 'class-aside')} {\n    \tvisibility: visible;\n    \ttransition: transform map-get($o, 'transition-duration');\n    }\n    .#{$target}.#{map-get($o, 'class-aside')}:after {\n    \tdisplay: none;\n    }\n\n  // reveal right\n  } @else if ($style == 'reveal-right') {\n\n    .#{$target}.#{map-get($o, 'class-active')} .#{map-get($o, 'class-content')} {\n    \ttransform: translate3d(-(map-get($o, 'width')), 0, 0);\n    }\n    .#{$target}.#{map-get($o, 'class-aside')} {\n      right: 0;\n    \tz-index: 1;\n    }\n    .#{$target}.#{map-get($o, 'class-active')} .#{$target}.#{map-get($o, 'class-aside')} {\n    \tvisibility: visible;\n    \ttransition: transform map-get($o, 'transition-duration');\n    }\n    .#{$target}.#{map-get($o, 'class-aside')}:after {\n    \tdisplay: none;\n    }\n\n  // slide along left\n  } @else if ($style == 'slide-along-left') {\n\n    .#{$target}.#{map-get($o, 'class-active')} .#{map-get($o, 'class-content')} {\n    \ttransform: translate3d(map-get($o, 'width'), 0, 0);\n    }\n    .#{$target}.#{map-get($o, 'class-aside')} {\n      left: 0;\n    \tz-index: 1;\n    \ttransform: translate3d(-50%, 0, 0);\n    }\n    .#{$target}.#{map-get($o, 'class-active')} .#{$target}.#{map-get($o, 'class-aside')} {\n    \tvisibility: visible;\n    \ttransition: transform map-get($o, 'transition-duration');\n    \ttransform: translate3d(0, 0, 0);\n    }\n    .#{$target}.#{map-get($o, 'class-aside')}:after {\n    \tdisplay: none;\n    }\n\n  // slide along right\n  } @else if ($style == 'slide-along-right') {\n\n    .#{$target}.#{map-get($o, 'class-active')} .#{map-get($o, 'class-content')} {\n    \ttransform: translate3d(-(map-get($o, 'width')), 0, 0);\n    }\n    .#{$target}.#{map-get($o, 'class-aside')} {\n      right: 0;\n    \tz-index: 1;\n    \ttransform: translate3d(50%, 0, 0);\n    }\n    .#{$target}.#{map-get($o, 'class-active')} .#{$target}.#{map-get($o, 'class-aside')} {\n    \tvisibility: visible;\n    \ttransition: transform map-get($o, 'transition-duration');\n    \ttransform: translate3d(0, 0, 0);\n    }\n    .#{$target}.#{map-get($o, 'class-aside')}:after {\n    \tdisplay: none;\n    }\n\n  // slide out right\n  } @else if ($style == 'slide-out-left') {\n\n    .#{$target}.#{map-get($o, 'class-active')} .#{map-get($o, 'class-content')} {\n    \ttransform: translate3d(map-get($o, 'width'), 0, 0);\n    }\n    .#{$target}.#{map-get($o, 'class-aside')} {\n      left: 0;\n    \tz-index: 1;\n    \ttransform: translate3d(50%, 0, 0);\n    }\n    .#{$target}.#{map-get($o, 'class-active')} .#{$target}.#{map-get($o, 'class-aside')} {\n    \tvisibility: visible;\n    \ttransition: transform map-get($o, 'transition-duration');\n    \ttransform: translate3d(0, 0, 0);\n    }\n\n  // slide out right\n  } @else if ($style == 'slide-out-right') {\n\n    .#{$target}.#{map-get($o, 'class-active')} .#{map-get($o, 'class-content')} {\n    \ttransform: translate3d(-(map-get($o, 'width')), 0, 0);\n    }\n    .#{$target}.#{map-get($o, 'class-aside')} {\n      right: 0;\n    \tz-index: 1;\n    \ttransform: translate3d(-50%, 0, 0);\n    }\n    .#{$target}.#{map-get($o, 'class-active')} .#{$target}.#{map-get($o, 'class-aside')} {\n    \tvisibility: visible;\n    \ttransition: transform map-get($o, 'transition-duration');\n    \ttransform: translate3d(0, 0, 0);\n    }\n\n  // scale down left\n  } @else if ($style == 'scale-down-left') {\n\n    .#{$target}.#{map-get($o, 'class-wrap')} {\n    \tperspective: 1500px;\n    }\n    .#{$target} .#{map-get($o, 'class-content')} {\n    \ttransform-style: preserve-3d;\n    }\n    .#{$target}.#{map-get($o, 'class-active')} .#{map-get($o, 'class-content')} {\n    \ttransform: translate3d(0, 0, -(map-get($o, 'width')));\n    }\n    .#{$target}.#{map-get($o, 'class-aside')} {\n      left: 0;\n    \topacity: 1;\n    \ttransform: translate3d(-100%, 0, 0);\n    }\n    .#{$target}.#{map-get($o, 'class-active')} .#{$target}.#{map-get($o, 'class-aside')} {\n    \tvisibility: visible;\n    \ttransition: transform map-get($o, 'transition-duration');\n    \ttransform: translate3d(0, 0, 0);\n    }\n    .#{$target}.#{map-get($o, 'class-aside')}:after {\n    \tdisplay: none;\n    }\n\n    @include add-offcanvas-wrap-height($target, $o);\n\n  // scale down right\n  } @else if ($style == 'scale-down-right') {\n\n    .#{$target}.#{map-get($o, 'class-wrap')} {\n    \tperspective: 1500px;\n    }\n    .#{$target} .#{map-get($o, 'class-content')} {\n    \ttransform-style: preserve-3d;\n    }\n    .#{$target}.#{map-get($o, 'class-active')} .#{map-get($o, 'class-content')} {\n    \ttransform: translate3d(0, 0, -(map-get($o, 'width')));\n    }\n    .#{$target}.#{map-get($o, 'class-aside')} {\n      right: 0;\n    \topacity: 1;\n    \ttransform: translate3d(100%, 0, 0);\n    }\n    .#{$target}.#{map-get($o, 'class-active')} .#{$target}.#{map-get($o, 'class-aside')} {\n    \tvisibility: visible;\n    \ttransition: transform map-get($o, 'transition-duration');\n    \ttransform: translate3d(0, 0, 0);\n    }\n    .#{$target}.#{map-get($o, 'class-aside')}:after {\n    \tdisplay: none;\n    }\n\n    @include add-offcanvas-wrap-height($target, $o);\n\n  // scale up left\n  } @else if ($style == 'scale-up-left') {\n\n    .#{$target}.#{map-get($o, 'class-wrap')} {\n    \tperspective: 1500px;\n    \tperspective-origin: 0% 50%;\n    }\n    .#{$target}.#{map-get($o, 'class-active')} .#{map-get($o, 'class-content')} {\n    \ttransform: translate3d(map-get($o, 'width'), 0, 0);\n    }\n    .#{$target}.#{map-get($o, 'class-aside')} {\n      left: 0;\n    \tz-index: 1;\n    \topacity: 1;\n    \ttransform: translate3d(0, 0, -(map-get($o, 'width')));\n    }\n    .#{$target}.#{map-get($o, 'class-active')} .#{$target}.#{map-get($o, 'class-aside')} {\n    \tvisibility: visible;\n    \ttransition: transform map-get($o, 'transition-duration');\n    \ttransform: translate3d(0, 0, 0);\n    }\n\n    @include add-offcanvas-wrap-height($target, $o);\n\n  // scale up right\n  } @else if ($style == 'scale-up-right') {\n\n    .#{$target}.#{map-get($o, 'class-wrap')} {\n    \tperspective: 1500px;\n    \tperspective-origin: 100% 50%;\n    }\n    .#{$target}.#{map-get($o, 'class-active')} .#{map-get($o, 'class-content')} {\n    \ttransform: translate3d(-(map-get($o, 'width')), 0, 0);\n    }\n    .#{$target}.#{map-get($o, 'class-aside')} {\n      right: 0;\n    \tz-index: 1;\n    \topacity: 1;\n    \ttransform: translate3d(0, 0, -(map-get($o, 'width')));\n    }\n    .#{$target}.#{map-get($o, 'class-active')} .#{$target}.#{map-get($o, 'class-aside')} {\n    \tvisibility: visible;\n    \ttransition: transform map-get($o, 'transition-duration');\n    \ttransform: translate3d(0, 0, 0);\n    }\n\n    @include add-offcanvas-wrap-height($target, $o);\n\n  // scale rotate left\n  } @else if ($style == 'scale-rotate-left') {\n\n    .#{$target}.#{map-get($o, 'class-wrap')} {\n    \tperspective: 1500px;\n    }\n    .#{$target} .#{map-get($o, 'class-content')} {\n    \ttransform-style: preserve-3d;\n    }\n    .#{$target}.#{map-get($o, 'class-active')} .#{map-get($o, 'class-content')} {\n    \ttransform: translate3d(100px, 0, -600px) rotateY(-20deg);\n    }\n    .#{$target}.#{map-get($o, 'class-aside')} {\n      left: 0;\n    \topacity: 1;\n    \ttransform: translate3d(-100%, 0, 0);\n    }\n    .#{$target}.#{map-get($o, 'class-active')} .#{$target}.#{map-get($o, 'class-aside')} {\n    \tvisibility: visible;\n    \ttransition: transform map-get($o, 'transition-duration');\n    \ttransform: translate3d(0, 0, 0);\n    }\n    .#{$target}.#{map-get($o, 'class-aside')}:after {\n    \tdisplay: none;\n    }\n\n    @include add-offcanvas-wrap-height($target, $o);\n\n  // scale rotate right\n  } @else if ($style == 'scale-rotate-right') {\n\n    .#{$target}.#{map-get($o, 'class-wrap')} {\n    \tperspective: 1500px;\n    }\n    .#{$target} .#{map-get($o, 'class-content')} {\n    \ttransform-style: preserve-3d;\n    }\n    .#{$target}.#{map-get($o, 'class-active')} .#{map-get($o, 'class-content')} {\n    \ttransform: translate3d(-100px, 0, -600px) rotateY(20deg);\n    }\n    .#{$target}.#{map-get($o, 'class-aside')} {\n      right: 0;\n    \topacity: 1;\n    \ttransform: translate3d(100%, 0, 0);\n    }\n    .#{$target}.#{map-get($o, 'class-active')} .#{$target}.#{map-get($o, 'class-aside')} {\n    \tvisibility: visible;\n    \ttransition: transform map-get($o, 'transition-duration');\n    \ttransform: translate3d(0, 0, 0);\n    }\n    .#{$target}.#{map-get($o, 'class-aside')}:after {\n    \tdisplay: none;\n    }\n\n    @include add-offcanvas-wrap-height($target, $o);\n\n  // open door left\n  } @else if ($style == 'open-door-left') {\n\n    .#{$target}.#{map-get($o, 'class-wrap')} {\n    \tperspective: 1500px;\n    }\n    .#{$target} .#{map-get($o, 'class-content')} {\n    \ttransform-origin: 100% 50%;\n    \ttransform-style: preserve-3d;\n    }\n    .#{$target}.#{map-get($o, 'class-active')} .#{map-get($o, 'class-content')} {\n    \ttransform: rotateY(-10deg);\n    }\n    .#{$target}.#{map-get($o, 'class-aside')} {\n      left: 0;\n    \topacity: 1;\n    \ttransform: translate3d(-100%, 0, 0);\n    }\n    .#{$target}.#{map-get($o, 'class-active')} .#{$target}.#{map-get($o, 'class-aside')} {\n    \tvisibility: visible;\n    \ttransition: transform map-get($o, 'transition-duration');\n    \ttransform: translate3d(0, 0, 0);\n    }\n    .#{$target}.#{map-get($o, 'class-aside')}:after {\n    \tdisplay: none;\n    }\n\n    @include add-offcanvas-wrap-height($target, $o);\n\n  // open door right\n  } @else if ($style == 'open-door-right') {\n\n    .#{$target}.#{map-get($o, 'class-wrap')} {\n    \tperspective: 1500px;\n    }\n    .#{$target} .#{map-get($o, 'class-content')} {\n    \ttransform-origin: 0 50%;\n    \ttransform-style: preserve-3d;\n    }\n    .#{$target}.#{map-get($o, 'class-active')} .#{map-get($o, 'class-content')} {\n    \ttransform: rotateY(10deg);\n    }\n    .#{$target}.#{map-get($o, 'class-aside')} {\n      right: 0;\n    \topacity: 1;\n    \ttransform: translate3d(100%, 0, 0);\n    }\n    .#{$target}.#{map-get($o, 'class-active')} .#{$target}.#{map-get($o, 'class-aside')} {\n    \tvisibility: visible;\n    \ttransition: transform map-get($o, 'transition-duration');\n    \ttransform: translate3d(0, 0, 0);\n    }\n    .#{$target}.#{map-get($o, 'class-aside')}:after {\n    \tdisplay: none;\n    }\n\n    @include add-offcanvas-wrap-height($target, $o);\n\n  // transition doesn't exist\n  } @else {\n    @warn 'The off-canvas transition of `#{$style}` does not exist';\n  }\n}\n\n// Add Off-Canvas Wrap Height\n// Sets the oc-wrap height to 100% with delay. This is used for specific\n// transitions which use 3D transforms.\n// @param $target\n//   @type string\n// @param $options\n//   @type map\n//   @default $offcanvas map\n@mixin add-offcanvas-wrap-height($target, $options: ()) {\n  $o: map-merge($offcanvas, $options);\n\n  .#{$target}.#{map-get($o, 'class-wrap')} {\n    transition: height 0.1s map-get($o, 'transition-duration');\n  }\n  .#{$target}.#{map-get($o, 'class-delay')}.#{map-get($o, 'class-wrap')} {\n    height: 100%;\n  }\n  .#{$target}.#{map-get($o, 'class-active')}.#{map-get($o, 'class-wrap')} {\n    height: 100%;\n    transition: none;\n  }\n\n}\n\n// Check if we should output off-canvas\n@if map-get($offcanvas, 'output') {\n/*==============================================================================\n  @Off-Canvas - #{$filename}\n==============================================================================*/\n\n@include make-offcanvas();\n\n// Available transitions\n// ---\n// slide-in-left, slide-in-right\n// reveal-left, reveal-right\n// slide-along-left, slide-along-right\n// slide-out-left, slide-out-right\n// scale-down-left, scale-down-right\n// scale-up-left, scale-up-right\n// scale-rotate-left, scale-rotate-right\n// open-door-left, open-door-right\n// ---\n// Example usage:\n// @include add-offcanvas-transition('oc-aside-id', 'scale-rotate-left');\n@if (map-get($offcanvas, 'transition')) {\n  @include add-offcanvas-transition();\n}\n\n} // End @if output\n","// Set file variable\n$filename: 'scss/blocks/_tabs.scss';\n\n////////////////////////////////////////////////////////////////////////////////\n// @Tabs Map\n////////////////////////////////////////////////////////////////////////////////\n\n$tabs: (\n  'output' : true,\n  'class' : 'tabs',\n\n  'class-wrapper'       : 'tabs',\n  'class-nav'           : 'tabs-nav',\n  'class-content'       : 'tabs-content',\n  'class-content-panel' : 'tabs-panel',\n\n  'margin'             : 2em 0,\n  'padding-nav'        : 1em,\n  'padding-nav-inline' : 1em 2em,\n  'padding-content'    : 1em 2em,\n\n  'background'        : $gray-100,\n  'background-fade'   : $gray-200,\n  'background-accent' : $white,\n\n  'border'            : 1px solid $gray-300,\n  'border-radius'     : $border-radius,\n\n  'color'        : $color,\n  'color-fade'   : $color-light,\n  'color-accent' : $blue,\n\n  'transition' : null,\n\n) !default;\n\n// Extend default component map with overrides if they exist\n@if variable-exists(override) {\n  @if map-has-key($override, 'tabs') {\n    $tabs: map-extend($tabs, map-get($override, 'tabs'), true);\n  }\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// @Tabs Mixins\n////////////////////////////////////////////////////////////////////////////////\n\n// Make Tabs\n// Creates the base styles for a the tabs block including tab wrapper,\n// navigation and content.\n// @param $options\n//   @type map\n//   @default $tabs map\n@mixin make-tabs($options: ()) {\n  $o: map-merge($tabs, $options);\n\n  // Tab Wrapper\n  .#{map-get($tabs, 'class-wrapper')} {\n    position: relative;\n    margin: map-get($o, 'margin');\n\n    .#{map-get($o, 'class-nav')},\n    .#{map-get($o, 'class-content')} {\n      margin: 0;\n    }\n    .#{map-get($o, 'class-nav')} {\n      z-index: 10;\n    }\n    .#{map-get($o, 'class-content')} {\n      z-index: 5;\n    }\n  }\n\n  // Tab Navigation\n  .#{map-get($tabs, 'class-nav')} {\n    margin: map-get($o, 'margin');\n    text-align: center;\n\n    ul {\n      display: flex;\n      list-style: none;\n      margin: 0;\n    }\n    ul li {\n      flex: 1 0 auto;\n      margin: 0;\n    }\n    a {\n      display: block;\n      padding: map-get($o, 'padding-nav');\n      border: none;\n      text-decoration: none;\n    }\n\n    &.inline {\n      ul {\n        flex-wrap: wrap;\n      }\n      ul li {\n        flex: 0 0 auto;\n\n        a {\n          padding: map-get($o, 'padding-nav-inline');\n        }\n      }\n    }\n  }\n\n  // Tab Content\n  .#{map-get($tabs, 'class-content')} {\n    margin: map-get($o, 'margin');\n\n    .#{map-get($o, 'class-content-panel')} {\n      display: none;\n    }\n    .#{map-get($o, 'class-content-panel')}.active {\n      display: block;\n    }\n  }\n\n}\n\n// Add Tab Style\n// Creates the styles for tabs.\n// @param $style\n//   @type string\n//   @options 'fold', 'line'\n//   @default 'fold'\n// @param $class\n//   @type string\n//   @default 'style-#{$style}'\n// @param $options\n//   @type map\n//   @default $tabs map\n@mixin add-tab-style($style: 'fold', $class: null, $options: ()) {\n  $o: map-merge($tabs, $options);\n\n  @if ($class == null) {\n    $class: 'style-#{$style}';\n  }\n\n  @if ($style == 'fold') {\n\n    .#{$class} .#{map-get($o, 'class-nav')},\n    .#{map-get($o, 'class-nav')}.#{$class} {\n      ul {\n        background: map-get($o, 'background');\n        border: map-get($o, 'border');\n        border-radius: map-get($o, 'border-radius');\n      }\n      ul li {\n        border-right: map-get($o, 'border');\n        @if (map-get($o, 'transition') != null) {\n          @include transition(map-get($o, 'transition'));\n        }\n\n        &:first-child {\n          border-top-left-radius: map-get($o, 'border-radius');\n          border-bottom-left-radius: map-get($o, 'border-radius');\n        }\n        &:last-child {\n          border-right: none;\n          border-top-right-radius: map-get($o, 'border-radius');\n          border-bottom-right-radius: map-get($o, 'border-radius');\n        }\n      }\n      a {\n        color: map-get($o, 'color');\n        @if (map-get($o, 'transition') != null) {\n          @include transition(map-get($o, 'transition'));\n        }\n\n        &:hover {\n          background: map-get($o, 'background-fade');\n          color: map-get($o, 'color');\n        }\n      }\n\n      // Active State\n      ul li.active {\n        background: map-get($o, 'background-accent');\n      }\n      .active a {\n        color: map-get($o, 'color');\n        &:hover {\n          background: map-get($o, 'background-accent');\n        }\n      }\n\n      // Inline styles\n      &.inline ul li:last-child {\n        border-right: map-get($o, 'border');\n      }\n    }\n    .#{$class} .#{map-get($o, 'class-nav')} {\n      ul {\n        border-bottom-left-radius: 0;\n        border-bottom-right-radius: 0;\n      }\n      ul li {\n        border-bottom: 1px solid transparent;\n        margin-bottom: -1px;\n      }\n      ul li:first-child {\n        border-bottom-left-radius: 0;\n      }\n      ul li:last-child {\n        border-bottom-right-radius: 0;\n      }\n      ul li.active {\n        border-bottom: 1px solid map-get($o, 'background-accent');\n      }\n    }\n    .#{$class} .#{map-get($o, 'class-content')} {\n      padding: map-get($o, 'padding-content');\n      border: map-get($o, 'border');\n      border-top: none;\n      border-bottom-left-radius: map-get($o, 'border-radius');\n      border-bottom-right-radius: map-get($o, 'border-radius');\n    }\n\n  } @else if ($style == 'line') {\n\n    .#{$class} .#{map-get($o, 'class-nav')},\n    .#{map-get($o, 'class-nav')}.#{$class} {\n      ul {\n        border-bottom: map-get($o, 'border');\n      }\n      ul li {\n        border-bottom: 3px solid transparent;\n        margin-bottom: -1px;\n        @if (map-get($o, 'transition') != null) {\n          @include transition(map-get($o, 'transition'));\n        }\n      }\n      a {\n        color: map-get($o, 'color-fade');\n        @if (map-get($o, 'transition') != null) {\n          @include transition(map-get($o, 'transition'));\n        }\n        &:hover {\n          color: map-get($o, 'color-accent');\n          text-decoration: none;\n        }\n      }\n      // Active State\n      ul li.active {\n        border-bottom: 3px solid map-get($o, 'color-accent');\n      }\n      .active a {\n        color: map-get($o, 'color');\n        &:hover {\n          color: map-get($o, 'color-accent');\n        }\n      }\n    }\n    .#{$class} .#{map-get($o, 'class-content')} {\n      padding: map-get($o, 'padding-content');\n      border: map-get($o, 'border');\n      border-top: none;\n    }\n\n  } @else {\n    @warn 'The tabs style of `#{$style}` does not exist';\n  }\n}\n\n// Check if we should output tabs\n@if map-get($tabs, 'output') {\n\n/*==============================================================================\n  @Tabs - #{$filename}\n==============================================================================*/\n\n/**\n * Base styles for tab wrapper, nav and content\n */\n@include make-tabs();\n\n/**\n * Tabs Style: Fold\n */\n@include add-tab-style($style: 'fold');\n\n/**\n * Tabs Style: Line\n */\n@include add-tab-style($style: 'line');\n\n} // End @if output\n","// Set file variable\n$filename: 'scss/blocks/_tooltips.scss';\n\n////////////////////////////////////////////////////////////////////////////////\n// @Tooltips Map\n////////////////////////////////////////////////////////////////////////////////\n\n$tooltips: (\n  'output' : true,\n  'output-position' : true,\n  'class' : 'tooltip',\n\n  'z-index' : 100,\n  'max-width' : 30em,\n  'padding' : 0.5em 1em,\n\n  'transition-duration' : 0.2s,\n\n  'background' : rgba($color, 0.9),\n  'border-radius' : $border-radius,\n\n  'font-size' : px-to-rem(12px),\n  'line-height' : 1.5em,\n  'color' : $white,\n\n  'position-start' : 0,\n  'position-end'   : 0.5em,\n\n) !default;\n\n// Extend default component map with overrides if they exist\n@if variable-exists(override) {\n  @if map-has-key($override, 'tooltips') {\n    $tooltips: map-extend($tooltips, map-get($override, 'tooltips'), true);\n  }\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// @Tooltips Mixins\n////////////////////////////////////////////////////////////////////////////////\n\n// Make Tooltips\n// Creates the base styles for tooltips element.\n// @param $options\n//   @type map\n//   @default $tooltips map\n@mixin make-tooltip($options: ()) {\n  $o: map-merge($tooltips, $options);\n\n  position: relative;\n\n  &:after {\n    content: attr(data-tooltip); // Get the content of the data-tooltip attribute\n    pointer-events: none; // Turns off hover effect on the pseudo element\n    position: absolute;\n    z-index: map-get($o, 'z-index');\n\n    display: block;\n    max-width: map-get($o, 'max-width');\n    padding: map-get($o, 'padding');\n\n    background: map-get($o, 'background');\n    border-radius: map-get($o, 'border-radius');\n\n    font-size: map-get($o, 'font-size');\n    line-height: map-get($o, 'line-height');\n    color: map-get($o, 'color');\n\n    opacity: 0;\n    transition: opacity map-get($o, 'transition-duration'), transform map-get($o, 'transition-duration');\n\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n  }\n}\n\n// Add Tooltip Position\n// Adds the position styles for a tooltip.\n// @param $anchor\n//   @type string\n//   @options 'top', 'left', 'right', 'bottom'\n//   @default 'top'\n// @param $class\n//   @type string\n//   @options null, default, string...\n//   @default null\n// @param $options\n//   @type map\n//   @default $tooltips map\n@mixin add-tooltip-position($anchor : 'top', $class : null, $options: ()) {\n  $o: map-merge($tooltips, $options);\n\n  @if ($class == null) {\n    $class: '&';\n  } @else if ($class == default) {\n    $class: '.#{map-get($o, 'class')}-#{$anchor}';\n  } @else {\n    $class: '.#{$class}';\n  }\n\n  @if ($anchor == 'top') {\n    #{$class}:after {\n      top: auto;\n      left: 50%;\n      right: auto;\n      bottom: 100%;\n      transform: translate(-50%, -(map-get($o, 'position-start')));\n    }\n    #{$class}:hover:after,\n    #{$class}:focus:after {\n      opacity: 1;\n      transform: translate(-50%, -(map-get($o, 'position-end')));\n    }\n  } @else if ($anchor == 'top-left') {\n    #{$class}:after {\n      top: auto;\n      left: 0;\n      right: auto;\n      bottom: 100%;\n      transform: translate(0, -(map-get($o, 'position-start')));\n    }\n    #{$class}:hover:after,\n    #{$class}:focus:after {\n      opacity: 1;\n      transform: translate(0, -(map-get($o, 'position-end')));\n    }\n  } @else if ($anchor == 'top-right') {\n    #{$class}:after {\n      top: auto;\n      left: auto;\n      right: 0;\n      bottom: 100%;\n      transform: translate(0, -(map-get($o, 'position-start')));\n    }\n    #{$class}:hover:after,\n    #{$class}:focus:after {\n      opacity: 1;\n      transform: translate(0, -(map-get($o, 'position-end')));\n    }\n  } @else if ($anchor == 'left') {\n    #{$class}:after {\n      top: 50%;\n      left: auto;\n      right: 100%;\n      bottom: auto;\n      transform: translate(-(map-get($o, 'position-start')), -50%);\n    }\n    #{$class}:hover:after,\n    #{$class}:focus:after {\n      transform: translate(-(map-get($o, 'position-end')), -50%);\n    }\n  } @else if ($anchor == 'left-top') {\n    #{$class}:after {\n      top: 0;\n      left: auto;\n      right: 100%;\n      bottom: auto;\n      transform: translate(-(map-get($o, 'position-start')), 0);\n    }\n    #{$class}:hover:after,\n    #{$class}:focus:after {\n      transform: translate(-(map-get($o, 'position-end')), 0);\n    }\n  } @else if ($anchor == 'left-bottom') {\n    #{$class}:after {\n      top: auto;\n      left: auto;\n      right: 100%;\n      bottom: 0;\n      transform: translate(-(map-get($o, 'position-start')), 0);\n    }\n    #{$class}:hover:after,\n    #{$class}:focus:after {\n      transform: translate(-(map-get($o, 'position-end')), 0);\n    }\n  } @else if ($anchor == 'right') {\n    #{$class}:after {\n      top: auto;\n      left: 100%;\n      right: auto;\n      bottom: 50%;\n      transform: translate(map-get($o, 'position-start'), 50%);\n    }\n    #{$class}:hover:after,\n    #{$class}:focus:after {\n      transform: translate(map-get($o, 'position-end'), 50%);\n    }\n  } @else if ($anchor == 'right-top') {\n    #{$class}:after {\n      top: 0;\n      left: 100%;\n      right: auto;\n      bottom: auto;\n      transform: translate(map-get($o, 'position-start'), 0);\n    }\n    #{$class}:hover:after,\n    #{$class}:focus:after {\n      transform: translate(map-get($o, 'position-end'), 0);\n    }\n  } @else if ($anchor == 'right-bottom') {\n    #{$class}:after {\n      top: auto;\n      left: 100%;\n      right: auto;\n      bottom: 0;\n      transform: translate(map-get($o, 'position-start'), 0);\n    }\n    #{$class}:hover:after,\n    #{$class}:focus:after {\n      transform: translate(map-get($o, 'position-end'), 0);\n    }\n  } @else if ($anchor == 'bottom') {\n    #{$class}:after {\n      top: 100%;\n      left: auto;\n      right: 50%;\n      bottom: auto;\n      transform: translate(50%, map-get($o, 'position-start'));\n    }\n    #{$class}:hover:after,\n    #{$class}:focus:after {\n      opacity: 1;\n      transform: translate(50%, map-get($o, 'position-end'));\n    }\n  } @else if ($anchor == 'bottom-left') {\n    #{$class}:after {\n      top: 100%;\n      left: 0;\n      right: auto;\n      bottom: auto;\n      transform: translate(0, map-get($o, 'position-start'));\n    }\n    #{$class}:hover:after,\n    #{$class}:focus:after {\n      opacity: 1;\n      transform: translate(0, map-get($o, 'position-end'));\n    }\n  } @else if ($anchor == 'bottom-right') {\n    #{$class}:after {\n      top: 100%;\n      left: auto;\n      right: 0;\n      bottom: auto;\n      transform: translate(0, map-get($o, 'position-start'));\n    }\n    #{$class}:hover:after,\n    #{$class}:focus:after {\n      opacity: 1;\n      transform: translate(0, map-get($o, 'position-end'));\n    }\n  } @else {\n    @warn 'The tooltip position of `#{$anchor}` does not exist';\n  }\n}\n\n// Check if we should output tooltips\n@if map-get($tooltips, 'output') {\n\n/*==============================================================================\n  @Tooltips - #{$filename}\n==============================================================================*/\n\n/**\n * Base styles for tooltips\n */\n.#{map-get($tooltips, 'class')} {\n  @include make-tooltip();\n}\n\n/**\n * Default Tooltip Position\n */\n.#{map-get($tooltips, 'class')} {\n  @include add-tooltip-position();\n}\n\n// Check if we should output position classes\n@if map-get($tooltips, 'output-position') {\n\n/**\n * Tooltip Positions\n */\n@include add-tooltip-position('top', default);\n@include add-tooltip-position('top-left', default);\n@include add-tooltip-position('top-right', default);\n\n@include add-tooltip-position('left', default);\n@include add-tooltip-position('left-top', default);\n@include add-tooltip-position('left-bottom', default);\n\n@include add-tooltip-position('right', default);\n@include add-tooltip-position('right-top', default);\n@include add-tooltip-position('right-bottom', default);\n\n@include add-tooltip-position('bottom', default);\n@include add-tooltip-position('bottom-left', default);\n@include add-tooltip-position('bottom-right', default);\n\n} // End @if output position classes\n\n} // End @if output\n","// Set file variable\n$filename: 'scss/elements/_lists-ascii.scss';\n\n/*==============================================================================\n  @Lists - ascii - #{$filename}\n==============================================================================*/\n\n/**\n * Base styles\n */\nul.list-ascii {\n  font-family: $font-family-mono;\n  font-size: px-to-em(16px);\n  white-space: nowrap;\n}\nul.list-ascii, ul.list-ascii ul {\n  margin: 0;\n  padding: 0;\n  list-style: none;\n\n  li {\n    margin: 0;\n    padding: 0;\n  }\n}\n\n/**\n * Behavior\n */\nul.list-ascii {\n  strong {\n    color: map-get($anchors, 'color');\n    cursor: pointer;\n\n    &:before {\n      content: \"↓\";\n      font-family: $base-font-family;\n      margin-right: 10px;\n    }\n\n    &:hover {\n      color: map-fetch($anchors, 'hover', 'color');\n    }\n  }\n  ul {\n    overflow: hidden;\n    max-height: 1000px;\n    transition: max-height 0.25s ease-in;\n  }\n\n  .hide-children {\n    > strong {\n      &:after {\n        content: \"...\";\n      }\n      &:before {\n        content: \"→\";\n      }\n    }\n    > ul {\n      max-height: 0;\n      transition: max-height 0.15s ease-out;\n    }\n  }\n}\n\n/**\n * Level 1\n */\nul.list-ascii > li::before { content: \"\"; }\n\n/**\n * Level 2\n */\nul.list-ascii > li > ul > li::before { content: \"├──\\00a0\"; }\nul.list-ascii > li > ul > li:last-child::before { content: \"└──\\00a0\"; }\n\n/**\n * Level 3\n */\nul.list-ascii > li > ul > li > ul > li::before { content: \"│\\00a0\\00a0\\00a0├──\\00a0\"}\nul.list-ascii > li > ul > li > ul > li:last-child::before { content: \"│\\00a0\\00a0\\00a0└──\\00a0\"; }\nul.list-ascii > li > ul > li:last-child > ul > li::before { content: \"\\00a0\\00a0\\00a0\\00a0├──\\00a0\"}\nul.list-ascii > li > ul > li:last-child > ul > li:last-child::before { content: \"\\00a0\\00a0\\00a0\\00a0└──\\00a0\"; }\n\n/**\n * Level 4\n */\nul.list-ascii > li > ul > li > ul > li > ul > li::before { content: \"│\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0├──\\00a0\"}\nul.list-ascii > li > ul > li > ul > li > ul > li:last-child::before { content: \"│\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0└──\\00a0\"; }\nul.list-ascii > li > ul > li > ul > li:last-child > ul > li::before { content: \"│\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0├──\\00a0\"}\nul.list-ascii > li > ul > li > ul > li:last-child > ul > li:last-child::before { content: \"│\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0└──\\00a0\"; }\nul.list-ascii > li > ul > li:last-child > ul > li > ul > li::before { content: \"\\00a0\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0├──\\00a0\"}\nul.list-ascii > li > ul > li:last-child > ul > li > ul > li:last-child::before { content: \"\\00a0\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0└──\\00a0\"; }\nul.list-ascii > li > ul > li:last-child > ul > li:last-child > ul > li::before { content: \"\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0├──\\00a0\"}\nul.list-ascii > li > ul > li:last-child > ul > li:last-child > ul > li:last-child::before { content: \"\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0└──\\00a0\"; }\n\n/**\n * Level 5\n */\nul.list-ascii > li > ul > li > ul > li > ul > li > ul > li::before { content: \"│\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0├──\\00a0\"}\nul.list-ascii > li > ul > li > ul > li > ul > li > ul > li:last-child::before { content: \"│\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0└──\\00a0\"; }\nul.list-ascii > li > ul > li > ul > li > ul > li:last-child > ul > li::before { content: \"│\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0├──\\00a0\"}\nul.list-ascii > li > ul > li > ul > li > ul > li:last-child > ul > li:last-child::before { content: \"│\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0└──\\00a0\"; }\nul.list-ascii > li > ul > li > ul > li:last-child > ul > li > ul > li::before { content: \"│\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0├──\\00a0\"}\nul.list-ascii > li > ul > li > ul > li:last-child > ul > li > ul > li:last-child::before { content: \"│\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0└──\\00a0\"; }\nul.list-ascii > li > ul > li > ul > li:last-child > ul > li:last-child > ul > li::before { content: \"│\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0├──\\00a0\"}\nul.list-ascii > li > ul > li > ul > li:last-child > ul > li:last-child > ul > li:last-child::before { content: \"│\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0└──\\00a0\"; }\nul.list-ascii > li > ul > li:last-child > ul > li > ul > li > ul > li::before { content: \"\\00a0\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0├──\\00a0\"}\nul.list-ascii > li > ul > li:last-child > ul > li > ul > li > ul > li:last-child::before { content: \"\\00a0\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0└──\\00a0\"; }\nul.list-ascii > li > ul > li:last-child > ul > li > ul > li:last-child > ul > li::before { content: \"\\00a0\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0├──\\00a0\"}\nul.list-ascii > li > ul > li:last-child > ul > li > ul > li:last-child > ul > li:last-child::before { content: \"\\00a0\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0└──\\00a0\"; }\nul.list-ascii > li > ul > li:last-child > ul > li:last-child > ul > li > ul > li::before { content: \"\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0├──\\00a0\"}\nul.list-ascii > li > ul > li:last-child > ul > li:last-child > ul > li > ul > li:last-child::before { content: \"\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0└──\\00a0\"; }\nul.list-ascii > li > ul > li:last-child > ul > li:last-child > ul > li:last-child > ul > li::before { content: \"\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0├──\\00a0\"}\nul.list-ascii > li > ul > li:last-child > ul > li:last-child > ul > li:last-child > ul > li:last-child::before { content: \"\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0└──\\00a0\"; }\n\n/**\n * Level 6\n */\nul.list-ascii > li > ul > li > ul > li > ul > li > ul > li > ul > li::before { content: \"│\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0├──\\00a0\"}\nul.list-ascii > li > ul > li > ul > li > ul > li > ul > li > ul > li:last-child::before { content: \"│\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0└──\\00a0\"; }\nul.list-ascii > li > ul > li > ul > li > ul > li > ul > li:last-child > ul > li::before { content: \"│\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0├──\\00a0\"}\nul.list-ascii > li > ul > li > ul > li > ul > li > ul > li:last-child > ul > li:last-child::before { content: \"│\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0└──\\00a0\"; }\nul.list-ascii > li > ul > li > ul > li > ul > li:last-child > ul > li > ul > li::before { content: \"│\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0├──\\00a0\"}\nul.list-ascii > li > ul > li > ul > li > ul > li:last-child > ul > li > ul > li:last-child::before { content: \"│\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0└──\\00a0\"; }\nul.list-ascii > li > ul > li > ul > li > ul > li:last-child > ul > li:last-child > ul > li::before { content: \"│\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0├──\\00a0\"}\nul.list-ascii > li > ul > li > ul > li > ul > li:last-child > ul > li:last-child > ul > li:last-child::before { content: \"│\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0└──\\00a0\"; }\nul.list-ascii > li > ul > li > ul > li:last-child > ul > li > ul > li > ul > li::before { content: \"│\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0├──\\00a0\"}\nul.list-ascii > li > ul > li > ul > li:last-child > ul > li > ul > li > ul > li:last-child::before { content: \"│\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0└──\\00a0\"; }\nul.list-ascii > li > ul > li > ul > li:last-child > ul > li > ul > li:last-child > ul > li::before { content: \"│\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0├──\\00a0\"}\nul.list-ascii > li > ul > li > ul > li:last-child > ul > li > ul > li:last-child > ul > li:last-child::before { content: \"│\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0└──\\00a0\"; }\nul.list-ascii > li > ul > li > ul > li:last-child > ul > li:last-child > ul > li > ul > li::before { content: \"│\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0├──\\00a0\"}\nul.list-ascii > li > ul > li > ul > li:last-child > ul > li:last-child > ul > li > ul > li:last-child::before { content: \"│\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0└──\\00a0\"; }\nul.list-ascii > li > ul > li > ul > li:last-child > ul > li:last-child > ul > li:last-child > ul > li::before { content: \"│\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0├──\\00a0\"}\nul.list-ascii > li > ul > li > ul > li:last-child > ul > li:last-child > ul > li:last-child > ul > li:last-child::before { content: \"│\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0└──\\00a0\"; }\nul.list-ascii > li > ul > li:last-child > ul > li > ul > li > ul > li > ul > li::before { content: \"\\00a0\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0├──\\00a0\"}\nul.list-ascii > li > ul > li:last-child > ul > li > ul > li > ul > li > ul > li:last-child::before { content: \"\\00a0\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0└──\\00a0\"; }\nul.list-ascii > li > ul > li:last-child > ul > li > ul > li > ul > li:last-child > ul > li::before { content: \"\\00a0\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0├──\\00a0\"}\nul.list-ascii > li > ul > li:last-child > ul > li > ul > li > ul > li:last-child > ul > li:last-child::before { content: \"\\00a0\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0└──\\00a0\"; }\nul.list-ascii > li > ul > li:last-child > ul > li > ul > li:last-child > ul > li > ul > li::before { content: \"\\00a0\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0├──\\00a0\"}\nul.list-ascii > li > ul > li:last-child > ul > li > ul > li:last-child > ul > li > ul > li:last-child::before { content: \"\\00a0\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0└──\\00a0\"; }\nul.list-ascii > li > ul > li:last-child > ul > li > ul > li:last-child > ul > li:last-child > ul > li::before { content: \"\\00a0\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0├──\\00a0\"}\nul.list-ascii > li > ul > li:last-child > ul > li > ul > li:last-child > ul > li:last-child > ul > li:last-child::before { content: \"\\00a0\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0└──\\00a0\"; }\nul.list-ascii > li > ul > li:last-child > ul > li:last-child > ul > li > ul > li > ul > li::before { content: \"\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0├──\\00a0\"}\nul.list-ascii > li > ul > li:last-child > ul > li:last-child > ul > li > ul > li > ul > li:last-child::before { content: \"\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0└──\\00a0\"; }\nul.list-ascii > li > ul > li:last-child > ul > li:last-child > ul > li > ul > li:last-child > ul > li::before { content: \"\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0├──\\00a0\"}\nul.list-ascii > li > ul > li:last-child > ul > li:last-child > ul > li > ul > li:last-child > ul > li:last-child::before { content: \"\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0└──\\00a0\"; }\nul.list-ascii > li > ul > li:last-child > ul > li:last-child > ul > li:last-child > ul > li > ul > li::before { content: \"\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0├──\\00a0\"}\nul.list-ascii > li > ul > li:last-child > ul > li:last-child > ul > li:last-child > ul > li > ul > li:last-child::before { content: \"\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0│\\00a0\\00a0\\00a0└──\\00a0\"; }\nul.list-ascii > li > ul > li:last-child > ul > li:last-child > ul > li:last-child > ul > li:last-child > ul > li::before { content: \"\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0├──\\00a0\"}\nul.list-ascii > li > ul > li:last-child > ul > li:last-child > ul > li:last-child > ul > li:last-child > ul > li:last-child::before { content: \"\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0\\00a0└──\\00a0\"; }\n","// Set file variable\n$filename: 'scss/docs/_code-highlight.scss';\n\n/*==============================================================================\n  @Code - highlights - #{$filename}\n==============================================================================*/\n\nfigure {\n  margin: 1em 0;\n}\n\n.highlight {\n  .c     { color: #998; font-style: italic } // Comment\n  .err   { color: #a61717; } // Error\n  .k     { font-weight: bold } // Keyword\n  .o     { font-weight: bold } // Operator\n  .cm    { color: #998; font-style: italic } // Comment.Multiline\n  .cp    { color: #999; font-weight: bold } // Comment.Preproc\n  .c1    { color: #998; font-style: italic } // Comment.Single\n  .cs    { color: #999; font-weight: bold; font-style: italic } // Comment.Special\n  .gd    { color: #000; } // Generic.Deleted\n  .gd .x { color: #000; } // Generic.Deleted.Specific\n  .ge    { font-style: italic } // Generic.Emph\n  .gr    { color: #a00 } // Generic.Error\n  .gh    { color: #999 } // Generic.Heading\n  .gi    { color: #000; } // Generic.Inserted\n  .gi .x { color: #000; } // Generic.Inserted.Specific\n  .go    { color: #888 } // Generic.Output\n  .gp    { color: #555 } // Generic.Prompt\n  .gs    { font-weight: bold } // Generic.Strong\n  .gu    { color: #aaa } // Generic.Subheading\n  .gt    { color: #a00 } // Generic.Traceback\n  .kc    { font-weight: bold } // Keyword.Constant\n  .kd    { font-weight: bold } // Keyword.Declaration\n  .kp    { font-weight: bold } // Keyword.Pseudo\n  .kr    { font-weight: bold } // Keyword.Reserved\n  .kt    { color: #458; font-weight: bold } // Keyword.Type\n  .m     { color: #099 } // Literal.Number\n  .s     { color: #d14 } // Literal.String\n  .na    { color: #008080 } // Name.Attribute\n  .nb    { color: #0086B3 } // Name.Builtin\n  .nc    { color: #458; font-weight: bold } // Name.Class\n  .no    { color: #008080 } // Name.Constant\n  .ni    { color: #800080 } // Name.Entity\n  .ne    { color: #900; font-weight: bold } // Name.Exception\n  .nf    { color: #900; font-weight: bold } // Name.Function\n  .nn    { color: #555 } // Name.Namespace\n  .nt    { color: #000080 } // Name.Tag\n  .nv    { color: #008080 } // Name.Variable\n  .ow    { font-weight: bold } // Operator.Word\n  .w     { color: #bbb } // Text.Whitespace\n  .mf    { color: #099 } // Literal.Number.Float\n  .mh    { color: #099 } // Literal.Number.Hex\n  .mi    { color: #099 } // Literal.Number.Integer\n  .mo    { color: #099 } // Literal.Number.Oct\n  .sb    { color: #d14 } // Literal.String.Backtick\n  .sc    { color: #d14 } // Literal.String.Char\n  .sd    { color: #d14 } // Literal.String.Doc\n  .s2    { color: #d14 } // Literal.String.Double\n  .se    { color: #d14 } // Literal.String.Escape\n  .sh    { color: #d14 } // Literal.String.Heredoc\n  .si    { color: #d14 } // Literal.String.Interpol\n  .sx    { color: #d14 } // Literal.String.Other\n  .sr    { color: #009926 } // Literal.String.Regex\n  .s1    { color: #d14 } // Literal.String.Single\n  .ss    { color: #990073 } // Literal.String.Symbol\n  .bp    { color: #999 } // Name.Builtin.Pseudo\n  .vc    { color: #008080 } // Name.Variable.Class\n  .vg    { color: #008080 } // Name.Variable.Global\n  .vi    { color: #008080 } // Name.Variable.Instance\n  .il    { color: #099 } // Literal.Number.Integer.Long\n}\n\n/**\n * Console Editor\n */\n.highlight {\n  .editor-prefixed,\n  .editor-comment {\n    &:before {\n      content: \"\\00a0\";\n      margin-right: 0.5em;\n      color: $color-light;\n    }\n  }\n  .editor-prefixed {\n    color: $blue;\n\n    &:before {\n      content: \"$\";\n    }\n  }\n  .editor-comment {\n    color: $color-light;\n  }\n}\n","// Set file variable\n$filename: 'scss/custom/_nav-posts.scss';\n\n/*==============================================================================\n  @Nav Posts - #{$filename}\n==============================================================================*/\n\n.nav-posts {\n  margin: 2em 0;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  flex-direction: column;\n\n  a {\n    position: relative;\n    display: flex;\n    align-items: center;\n    justify-content: flex-start;\n    width: 100%;\n    padding: 1em;\n    border: 1px solid rgba($black, 0.1);\n    border-radius: $border-radius;\n    text-align: left;\n    white-space: normal;\n    transition: $transition;\n\n    &:hover {\n      border-color: map-fetch($anchors, 'hover', 'color');\n    }\n\n    .icon {\n      flex: 0 0 auto;\n      margin: 0 0.75em 0 0;\n      font-size: 1.5rem;\n      line-height: 1em;\n    }\n  }\n  a + a {\n    margin-top: 1em;\n  }\n}\n","// Set file variable\n$filename: 'scss/custom/_docs-demos.scss';\n\n/*==============================================================================\n  @Docs Demos - #{$filename}\n==============================================================================*/\n\n.demo {\n  margin: 1.5em -1.5em;\n  padding: 0.5em 1.5em;\n  overflow: auto;\n  border-top: 3px solid $bg-color;\n  border-bottom: 3px solid $bg-color;\n\n  .box {\n    @include add-size(50px);\n    margin: 0 auto;\n    color: $white;\n    background: $blue;\n    border-radius: $border-radius;\n  }\n}\n@include media-min('medium') {\n  .demo {\n    margin: 1.5em 0;\n    padding: 2em 3em;\n    border: 3px solid $bg-color;\n    border-radius: $border-radius;\n  }\n}\n\n/**\n * Demo Flex Grid\n */\n.demo {\n  .flex-grid {\n    display: flex;\n    flex-wrap: wrap;\n    margin: -5px;\n\n    > * {\n      margin: 5px;\n    }\n  }\n}\n\n/**\n * Demo Naked\n */\n.demo-naked {\n  border: none;\n  margin: 2em 0;\n  padding: 0;\n}\n\n/**\n * Demo Alternate Styles\n */\n.demo.demo-alt {\n  padding: 1.5em;\n}\n@include media-min('medium') {\n  .demo.demo-alt {\n    padding: 3em;\n  }\n}\n\n/**\n * Demo Inverted\n */\n.demo-inverted {\n  background: $gray-800;\n  border-color: rgba($black, 0.1);\n}\n\n/**\n * Show-Hide\n */\n.demo-show-hide {\n  display: flex;\n  flex-wrap: wrap;\n  margin: 1em -0.5em 0;\n\n  .item {\n    position: relative;\n    width: 50%;\n  }\n  .inner,\n  .inner > div {\n    padding: 1em 1.5em;\n    border-radius: $border-radius;\n  }\n  .inner {\n    position: relative;\n    margin: 0 0.5em 1em;\n    background: $gray-100;\n    overflow: auto;\n  }\n  .inner > div {\n    position: absolute;\n    z-index: 2;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    width: 100%;\n    background: $green-50;\n  }\n  .inner > code {\n    position: relative;\n    z-index: 1;\n    color: $color-light;\n  }\n  .inner > div > code {\n    color: $green;\n  }\n}\n\n/**\n * Add Styles Demo\n */\n$add-styles-example: (\n  'other' : 'Option to ignore',\n  'cursor' : pointer,\n  'color' : $blue,\n  'padding' : 0.5em 0,\n  'border-top' : 1px solid $blue,\n  'transition' : $transition,\n  'hover' : (\n    'color' : $purple,\n    'border-color' : $purple\n  )\n);\n\n.add-styles-example {\n  @include add-styles($add-styles-example);\n}\n\n/**\n * Vertical Center\n */\n.demo.demo-vertical-center {\n  height: 200px;\n\n  .box {\n    @include add-vertical-center();\n  }\n}\n\n/**\n * Text Truncate\n */\n.demo.demo-add-text-truncate {\n  .box {\n    @include add-size(150px, auto);\n    padding: 1em 1.5em;\n    @include add-text-truncate();\n  }\n}\n\n/**\n * Text Hide\n */\n.demo.demo-logo-image {\n  .logo {\n    display: block;\n    margin: 1.5rem auto;\n    padding: 0;\n    border: 0 none;\n    background: url(\"../img/baseweb-hori-black.svg\") no-repeat left center;\n    background-size: 187px 40px;\n    @include add-size(187px, 40px);\n    @include add-text-hide();\n  }\n}\n\n/**\n * Triangle\n */\n.demo.demo-triangle {\n  text-align: center;\n  @include add-clearfix();\n}\n%triangle {\n  @include make-triangle();\n}\n.example-triangle-1 {\n  @extend %triangle;\n  @include add-triangle-styles( 14px, $blue, 'left' );\n}\n.example-triangle-2 {\n  @extend %triangle;\n  @include add-triangle-styles( 14px, $purple, 'down' );\n}\n.example-triangle-3 {\n  @extend %triangle;\n  @include add-triangle-styles( 14px, $red, 'right' );\n}\n\n/**\n * Grid System\n */\n.demo-grid {\n  margin: 1.5rem 0;\n}\n.demo-grid .col {\n  margin-top: 0.75rem;\n  margin-bottom: 0.75rem;\n}\n.demo-grid .col p {\n  margin: 0;\n  padding: 1rem;\n  background: rgba($black, 0.05);\n  font-family: $font-family-mono;\n  font-size: px-to-em(14px);\n  line-height: 1.5em;\n  text-align: center;\n  border-radius: $border-radius;\n}\n\n/**\n * Semantic Grid Demo\n */\n.demo-grid-semantic {\n  .demo-wrapper,\n  .demo-content,\n  .demo-aside,\n  .demo-article {\n    background: rgba($blue, 0.1);\n\n    p {\n      margin: 0;\n      padding: 1rem;\n      font-family: $font-family-mono;\n      font-size: px-to-em(14px);\n      line-height: 1.5em;\n      text-align: center;\n    }\n  }\n\n  .demo-aside,\n  .demo-article {\n    p {\n      margin: 0.75rem 0;\n      background: rgba($black, 0.05);\n      border-radius: $border-radius;\n    }\n  }\n\n  .demo-wrapper {\n    @include make-container();\n  }\n  .demo-content {\n    @include make-row();\n  }\n  .demo-aside,\n  .demo-article {\n    @include make-column-base();\n  }\n  .demo-aside {\n    width: column-width(4);\n  }\n  .demo-article {\n    width: column-width(8);\n  }\n}\n\n/**\n * Prefix and Suffix Grid Demo\n */\n.demo-grid-prefix-suffix {\n  .row {\n    background: rgba($blue, 0.1);\n  }\n}\n@include media-min('medium') {\n  .demo-grid-prefix-suffix {\n    padding-left: 0.75rem;\n    padding-right: 0.75rem;\n  }\n}\n\n/**\n * Nested Grid Demo\n */\n.demo-grid-nested .col {\n  margin-top: 0;\n  margin-bottom: 0;\n  background: rgba($blue, 0.1);\n}\n.demo-grid-nested .col p {\n  margin: 0.75rem 0;\n  @include add-text-truncate();\n}\n@include media-min('medium') {\n  .demo-grid-nested {\n    padding-left: 0.75rem;\n    padding-right: 0.75rem;\n  }\n}\n\n/**\n * Tables\n */\n.demo-tables {\n  .table {\n    margin: 1em 0;\n  }\n  .table-responsive {\n    margin: 1em 0;\n  }\n}\n\n/**\n * Forms\n */\n.demo-forms {\n  form {\n    margin: 1em 0;\n  }\n}\n\n/**\n * Buttons\n */\n.demo-buttons {\n  > p {\n    @include add-clearfix();\n    margin: 0 0 0.5rem -0.5rem;\n  }\n\n  .button {\n    float: left;\n    margin: 0.5rem 0 0 0.5rem;\n  }\n  .block {\n    margin: 0.5em 0;\n  }\n}\n\n/**\n * Icons\n */\n.demo-icon-button {\n  .button-demo-1 {\n    @include add-icon-button('left');\n  }\n  .button-demo-2 {\n    @include add-icon-button('solo');\n  }\n}\n\n/**\n * Video\n */\n.demo {\n  .video-wrapper {\n    margin: 1em 0;\n  }\n}\n\n/**\n * Chips\n */\n.demo-chips {\n  text-align: center;\n  @extend .demo-alt;\n}\n\n/**\n * Badges\n */\n.demo-badges {\n  text-align: center;\n  @extend .demo-alt;\n}\n\n/**\n * Breadcrumb\n */\n.custom-breadcrumb {\n  @include make-breadcrumb((\n    'color' : $green,\n    'color-hover' : $red,\n    'delimiter' : (\n      'element' : '»'\n    ),\n  ));\n}\n\n/**\n * Notices\n */\n.demo-notice {\n  .notice {\n    margin: 1em 0;\n  }\n  .item {\n    padding-top: 1em;\n    border-top: 1px solid rgba($black, 0.1);\n  }\n}\n\n@include media-min('medium') {\n  .demo-notice {\n    .flex {\n      display: flex;\n      flex-wrap: wrap;\n\n      .item {\n        width: 48%;\n      }\n      .item:nth-child(odd) {\n        margin-right: 2%;\n      }\n      .item:nth-child(even) {\n        margin-left: 2%;\n      }\n    }\n  }\n}\n\n/**\n * Dropdown\n */\n.demo-dropdown {\n  @include add-clearfix();\n  padding: 2em 3em;\n  overflow: visible;\n\n  > .dropdown-trigger,\n  > .dropdown,\n  > .dropdown-content,\n  > .dropdown-menu {\n    float: left;\n    margin: 1em 1em 1em 0;\n  }\n  hr {\n    margin: 0;\n  }\n}\n\n/**\n * Tabs\n */\n.demo-tabs.inverted {\n  background: $color;\n}\n\n/**\n * Off-Canvas\n */\n.demo-offcanvas {\n  padding: 0;\n\n  .oc-wrap {\n    height: 100%;\n  }\n  .oc-content {}\n  .oc-inner {\n    padding: 1.5em;\n  }\n  .oc-aside {\n    position: absolute;\n    padding: 1em 2em;\n\n    .oc-trigger {\n      margin: 1em 0 0 0;\n    }\n  }\n\n  form {\n    margin: 0;\n  }\n  .input[readonly] {\n    font-family: $font-family-mono;\n    color: $red;\n    opacity: 1;\n    background: rgba($white, 0.5);\n\n    &:focus {\n      background: $white;\n    }\n  }\n}\n\n@include media-min('medium') {\n  .demo-offcanvas {\n    padding: 0;\n\n    .oc-inner {\n      padding: 3em;\n    }\n  }\n}\n\n.oc-custom {\n  @include make-offcanvas((\n    'aside-position' : absolute,\n    'background-aside' : $gray-800,\n    'background-content' : $gray-100\n  ));\n  .oc-aside {\n    color: $white;\n  }\n}\n\n@include add-offcanvas-transition('oc-aside-left', 'slide-out-left');\n@include add-offcanvas-transition('oc-aside-right', 'slide-out-right');\n\n// All transition effects\n@include add-offcanvas-transition('slide-in-left', 'slide-in-left');\n@include add-offcanvas-transition('slide-in-right', 'slide-in-right');\n\n@include add-offcanvas-transition('reveal-left', 'reveal-left');\n@include add-offcanvas-transition('reveal-right', 'reveal-right');\n\n@include add-offcanvas-transition('slide-along-left', 'slide-along-left');\n@include add-offcanvas-transition('slide-along-right', 'slide-along-right');\n\n@include add-offcanvas-transition('slide-out-left', 'slide-out-left');\n@include add-offcanvas-transition('slide-out-right', 'slide-out-right');\n\n@include add-offcanvas-transition('scale-down-left', 'scale-down-left');\n@include add-offcanvas-transition('scale-down-right', 'scale-down-right');\n\n@include add-offcanvas-transition('scale-up-left', 'scale-up-left');\n@include add-offcanvas-transition('scale-up-right', 'scale-up-right');\n\n@include add-offcanvas-transition('scale-rotate-left', 'scale-rotate-left');\n@include add-offcanvas-transition('scale-rotate-right', 'scale-rotate-right');\n\n@include add-offcanvas-transition('open-door-left', 'open-door-left');\n@include add-offcanvas-transition('open-door-right', 'open-door-right');\n\n/**\n * Tooltips\n */\n.demo-tooltips {\n  @include add-clearfix();\n  overflow: visible;\n\n  hr {\n    margin: 0;\n  }\n}\n.demo-tooltips .button {\n  float: left;\n  margin: 1em 1em 1em 0;\n}\n","// Set file variable\n$filename: 'scss/custom/_docs-swatches.scss';\n\n/*==============================================================================\n  @Docs Swatches - #{$filename}\n==============================================================================*/\n\n/**\n * Swatch\n */\n.swatch {\n  display: inline-block;\n  @include add-size(50px);\n  border: 1px solid rgba($black, 0.1);\n  border-radius: $border-radius;\n}\n\n// Typography\n.bg-color { background: $color; }\n.bg-color-light { background: $color-light; }\n.bg-color-dark { background: $color-dark; }\n.bg-color-link { background: $anchor-color; }\n.bg-color-link-hover { background: $anchor-hover-color; }\n.bg-color-heading { background: $heading-color; }\n.bg-color-heading-link { background: $heading-anchor-color; }\n.bg-color-heading-link-hover { background: $heading-anchor-hover-color; }\n\n// Global\n.bg-bg-color { background: $bg-color; }\n.bg-bg-selection { background: $bg-selection; }\n.bg-border-color { background: $border-color; }\n\n/**\n * Swatch and Value combo\n */\n.swatch-wrap {\n  position: relative;\n  height: 44px;\n  min-width: 44px;\n\n  .swatch {\n    position: absolute;\n    top: 0;\n    left: 0;\n  }\n  .swatch-value {\n    margin-left: 60px;\n    display: inline-block;\n    width: auto;\n    font-family: $font-family-mono;\n  }\n}\n\n/**\n * Swatch Cards\n */\n.swatch-card {\n  margin: 2em 0;\n\n  ul {\n    margin: 0.5em 0 0;\n    list-style: none;\n  }\n  ul li {\n    margin: 0;\n  }\n}\n\n@include media-min('medium') {\n  .swatch-card-wrap {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-between;\n    margin: 0 -2em 3em 0;\n  }\n  .swatch-card {\n    flex: 1 0 auto;\n    width: 40%;\n    margin: 2em 2em 0 0;\n  }\n}\n\n.swatch-card .swatch {\n  display: block;\n  width: auto;\n  height: auto;\n  padding: 1em;\n  border: none;\n  border-radius: 0;\n  color: $white;\n\n  &.text-dark {\n    color: $color-dark;\n  }\n\n  .name {\n    display: block;\n    margin-bottom: 3em;\n    padding-bottom: 0.5em;\n    border-bottom: 1px solid rgba($white, 0.25);\n    text-transform: capitalize;\n  }\n  &.text-dark .name {\n    border-color: rgba($black, 0.1);\n  }\n\n  .var,\n  .hex {\n    font-family: $font-family-mono;\n  }\n  .hex {\n    float: right;\n  }\n}\n","// Set file variable\n$filename: 'scss/custom/_docs-icons.scss';\n\n/*==============================================================================\n  @Docs Icons - #{$filename}\n==============================================================================*/\n\n.icons-listing {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(14rem, 1fr));\n  grid-gap: 1rem;\n  margin: 1em 0;\n\n  .icon-item {\n    margin: 0;\n    padding: 1em 1.5em;\n    border-radius: $border-radius;\n    transition: $transition;\n  }\n  .icon-item:not(.button) {\n    background: $bg-color;\n  }\n\n  .icon {\n    font-size: 1.5em;\n    margin-right: 0.5em;\n    vertical-align: middle;\n  }\n  code {\n    font-size: px-to-em(14px);\n    color: $color-light;\n    transition: $transition;\n  }\n\n  .icon-item:not(.button):hover {\n    background-color: darken($bg-color, 5%);\n    code {\n      color: $color;\n    }\n  }\n}\n\n@include media-min('small') {\n  .icons-listing {\n    flex-direction: row;\n    .icon-item {\n      padding: 1.5em 2em;\n    }\n  }\n}\n\n@include media-min('medium') {\n  .icons-listing {\n    margin: 2em 0;\n  }\n}\n","// Set file variable\n$filename: 'scss/custom/_custom.scss';\n\n/*==============================================================================\n  @Structure - #{$filename}\n==============================================================================*/\n\nbody {\n  background: $bg-color;\n}\n.main {\n  background: $white;\n}\n\n/*==============================================================================\n  @Header - #{$filename}\n==============================================================================*/\n\n.header {\n  padding: 2em 0;\n}\n.header .container {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  @include remove-clearfix();\n}\n\n/**\n * Logo\n */\n.header .logo {\n  display: flex;\n  align-items: center;\n  border-bottom: none;\n\n  img {\n    margin: 0;\n  }\n  .version {\n    margin-top: 8px;\n    margin-left: 10px;\n    color: $color-light;\n  }\n  &:hover {\n    .version {\n      color: $anchor-color;\n    }\n  }\n}\n\n.home .header .logo {\n  .version {\n    color: rgba($white, 0.5);\n  }\n  &:hover {\n    .version {\n      color: rgba($white, 1);\n    }\n  }\n}\n\n/**\n * Button\n */\n.header .button {\n  background: rgba($black, 0.05);\n  color: $color;\n  border: none;\n\n  &:hover {\n    background: rgba($white, 1);\n    color: $color;\n  }\n}\n.home .header .button {\n  background: rgba($white, 0.1);\n  color: $white;\n\n  &:hover {\n    background: rgba($white, 0.2);\n    color: $white;\n  }\n}\n\n/**\n * Off-canvas Trigger\n */\n.header .oc-trigger {\n  display: inline-block;\n}\n@include media-min(800px) {\n  .header .oc-trigger {\n    display: none;\n  }\n}\n\n/**\n * Menu Horizontal\n */\n.nav-hori ul {\n  display: none;\n  margin: 0;\n  list-style: none;\n\n  li {\n    margin: 0 15px;\n\n    &:first-child {\n      margin-left: 0;\n    }\n    &:last-child {\n      margin-right: 0;\n    }\n  }\n\n  a {\n    color: $color;\n    font-weight: font-weight('medium');\n    border-bottom: none;\n\n    &:hover {\n      color: $anchor-color;\n    }\n  }\n\n  .active a {\n    color: $color-light;\n  }\n}\n\n@include media-min(800px) {\n  .nav-hori ul {\n    display: flex;\n    align-items: center;\n  }\n}\n\n.home .nav-hori ul {\n  li a {\n    color: $white;\n\n    &:hover {\n      color: rgba($white, 0.5);\n    }\n  }\n  li.active a:not(.button) {\n    color: rgba($white, 0.5);\n  }\n}\n\n/**\n * Menu Vertical\n */\n.nav-vert ul {\n  margin: 0 1.5em;\n  list-style: none;\n\n  li {\n    margin: 1px 0;\n  }\n\n  a {\n    display: block;\n    padding: 0.5em 1em;\n    color: $color-light;\n    border-bottom: none;\n    border-radius: $border-radius;\n\n    &:hover {\n      background: $bg-color;\n      color: $color;\n    }\n  }\n\n  .button {\n    margin: 1em 0 0 0;\n    text-align: left;\n\n    .icon {\n      margin-left: 0;\n    }\n\n    &:hover {\n      background: $bg-color;\n      color: $color;\n    }\n  }\n\n  .active > a {\n    color: $anchor-color;\n\n    &:hover {\n      color: $anchor-color;\n    }\n  }\n}\n\n/**\n * Off-Canvas Menu\n */\n.oc-aside .oc-trigger {\n  margin: 1em;\n}\n\n/*==============================================================================\n  @Hero - #{$filename}\n==============================================================================*/\n\n.hero {\n  position: relative;\n  background: $blue;\n  background-image: linear-gradient(to bottom right, $pink-900, $deep-purple-900);\n}\n\n/**\n * Hero Content Container\n */\n.hero-content .container {\n  padding-top: 1.5em;\n  padding-bottom: 1.5em;\n}\n@include media-min('small') {\n  .hero-content .container {\n    padding: 4em 5em 6em;\n  }\n}\n@include media-min('medium') {\n  .hero-content .container {\n    padding: 8em 5em 10em;\n  }\n}\n\n/**\n * Hero Content\n */\n.hero-content {\n  text-align: center;\n\n  .action {\n    margin: 2em 0;\n  }\n  .button {\n    background: rgba($white, 0);\n    border: 2px solid rgba($white, 1);\n    color: $white;\n    transition: none;\n\n    &:hover,\n    &:focus {\n      background: $white;\n      color: $color;\n    }\n  }\n}\n\n/**\n * Hero Heading\n */\n.hero-content h1 {\n  margin: 0 auto 2em;\n  font-size: 1.5em;\n  color: $white;\n  max-width: 500px;\n}\n@include media-min('small') {\n  .hero-content h1 {\n    font-size: 2em;\n    max-width: 600px;\n  }\n}\n@include media-min('medium') {\n  .hero-content h1 {\n    margin: 1em auto 2em;\n    font-size: 2.5em;\n    max-width: 700px;\n  }\n}\n@include media-min('large') {\n  .hero-content h1 {\n    font-size: 3em;\n    max-width: 800px;\n  }\n}\n\n/**\n * Hero Code\n */\n.hero-content .highlight {\n  padding: 0;\n  margin-left: -0.75em;\n  background: none;\n  font-size: 1.25em;\n\n  .editor-prefixed {\n    color: rgba($white, 1);\n    &:before {\n      color: rgba($white, 0.5);\n    }\n  }\n}\n\n/*==============================================================================\n  @Main - #{$filename}\n==============================================================================*/\n\n/**\n * Main\n */\n.main {\n  padding: 1.5em 0;\n}\n.main + .main {\n  margin-top: 3px;\n}\n@include media-min('medium') {\n  .main {\n    padding: 2em 0 3em;\n  }\n}\n\n/**\n * Main Header\n */\n.main-header {\n  max-width: px-to-em(800px);\n  margin: 1.5em auto;\n  text-align: center;\n}\n@include media-min('medium') {\n  .main-header {\n    margin: 3em auto;\n  }\n}\n\n/**\n * Feature\n */\n.feature {\n  margin: 4em 0;\n}\n.feature + .feature {\n  margin-top: 4em;\n}\n.feature-ill {\n  svg {\n    display: block;\n    max-width: 100%;\n    margin: 1rem auto;\n  }\n}\n\n@include media-min('medium') {\n\n  .feature {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n    .feature-content {\n      flex: 0 1 50%;\n    }\n    .feature-content {\n      margin-left: 3em;\n      margin-right: 6em;\n    }\n    .feature-ill {\n      margin-left: 6em;\n      margin-right: 0;\n    }\n  }\n\n  .feature.reverse {\n    flex-direction: row-reverse;\n\n    .feature-content {\n      margin-left: 6em;\n      margin-right: 3em;\n    }\n    .feature-ill {\n      margin-left: 0;\n      margin-right: 6em;\n    }\n  }\n\n}\n\n/**\n * File Structure\n */\n.block-file-structure {\n  display: block;\n  margin: 1.5em 0;\n\n  .item {\n    display: flex;\n    align-items: center;\n  }\n  .item-files {\n    overflow: auto;\n    padding: 2em;\n    background: $bg-color;\n    border-radius: $border-radius;\n  }\n}\n\n@include media-min('medium') {\n  .block-file-structure {\n    display: flex;\n    margin: 3em 0;\n\n    .item {\n      flex: 0 1 50%;\n    }\n    .item + .item {\n      margin-left: 2em;\n    }\n\n    .item-details {\n      .widget-list {\n        margin: 0;\n      }\n    }\n  }\n}\n\n/**\n * Expandable\n */\n.expandable {\n  position: relative;\n  margin: 2em 0;\n\n  .expandable-header {\n    padding-bottom: 1em;\n  }\n  .expandable-footer {\n    padding-top: 1em;\n  }\n  .expandable-overlay {\n    position: absolute;\n    z-index: 5;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background: rgba($black, 0.25);\n    border-radius: $border-radius;\n  }\n  .expandable-content {\n    margin: 0;\n    height: 300px;\n    overflow-y: hidden;\n  }\n}\n.expandable.active {\n  .expandable-overlay {\n    position: relative;\n    display: block;\n    padding-bottom: 1em;\n    top: auto;\n    left: auto;\n    right: auto;\n    bottom: auto;\n    background: none;\n  }\n  .expandable-content {\n    height: auto;\n    overflow-y: auto;\n  }\n}\n\n/*==============================================================================\n  @Sidebar - #{$filename}\n==============================================================================*/\n\n.sidebar {\n  .widget {\n    margin: 0;\n  }\n}\n\n/*==============================================================================\n  @Widget Group - #{$filename}\n==============================================================================*/\n\n.widget-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(18rem, 1fr));\n  grid-gap: 1rem;\n  margin: 2em 0;\n\n  .widget {\n    margin: 0;\n  }\n  .button {\n    display: block;\n  }\n}\n\n@include media-min('small') {\n  .widget-grid .button {\n    display: inline-block;\n  }\n}\n\n/*==============================================================================\n  @Widget List - #{$filename}\n==============================================================================*/\n\n.widget-list {\n  margin: 2em 0;\n\n  .widget {\n    margin: 0;\n  }\n  .widget + .widget {\n    margin-top: 1em;\n  }\n}\n\n/*==============================================================================\n  @Widgets - #{$filename}\n==============================================================================*/\n\n/**\n * Widget\n */\n.widget {\n  margin: 1em 0;\n  padding: 0;\n  border-radius: $border-radius;\n\n  .widget + .widget {\n    border-top: 1px solid rgba($black, 0.1);\n  }\n\n  &.card,\n  &.fill {\n    padding: 0.5em 1.5em;\n  }\n  &.card {\n    border: 1px solid $border-color;\n  }\n  &.fill {\n    background: $bg-color;\n  }\n}\n\n@include media-min('medium') {\n  .widget {\n    margin: 2em 0;\n    padding: 1em 0;\n  }\n}\n\n/**\n * Widget Featured\n */\na.widget-featured {\n  display: block;\n  border-bottom: none;\n  color: $color;\n  transition: $transition;\n\n  h2 {\n    transition: $transition;\n  }\n\n  &.color-1:hover { border-color: $orange; }\n  &.color-2:hover { border-color: $pink; }\n  &.color-3:hover { border-color: $purple; }\n  &.color-4:hover { border-color: $blue; }\n  &.color-5:hover { border-color: $teal; }\n\n  &.color-1:hover h2 { color: $orange; }\n  &.color-2:hover h2 { color: $pink; }\n  &.color-3:hover h2 { color: $purple; }\n  &.color-4:hover h2 { color: $blue; }\n  &.color-5:hover h2 { color: $teal; }\n}\n@include media-min('small') {\n  .widget-featured {\n    .widget-icon {\n      float: left;\n      margin: 1.5rem 2rem 1.5rem 0;\n    }\n    .widget-content {\n      padding-left: 5.75rem;\n    }\n  }\n}\n\n/**\n * Widget Icon\n */\n.widget-icon {\n  margin: 1.5rem 0;\n  font-size: px-to-em(50px);\n  line-height: 1em;\n  color: $blue;\n\n  .icon {\n    font-size: 1em;\n    stroke-width: 1.5px;\n  }\n  .icon-color-1 { color: $orange; }\n  .icon-color-2 { color: $pink; }\n  .icon-color-3 { color: $purple; }\n  .icon-color-4 { color: $blue; }\n  .icon-color-5 { color: $teal; }\n  .icon-color-6 { color: $green; }\n}\n\n/**\n * Widget Icons\n */\n.widget-icons {\n  margin: 2em -1em;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n\n  .widget-icon {\n    margin: 0.5em;\n  }\n}\n@include media-min('small') {\n  .widget-icons {\n    justify-content: flex-start;\n  }\n}\n\n/**\n * Widget Title\n */\n.widget h2 {\n  @extend .h5;\n\n  a {\n    color: $color;\n  }\n  a:hover {\n    color: $anchor-color;\n  }\n}\n\n/**\n * Widget Menu\n */\n.widget-menu {\n\n  h2 {\n    margin: 0.5em 0 -0.5em;\n    font-size: 1em;\n    font-weight: font-weight('medium');\n\n    a {\n      margin-left: -1em;\n      margin-right: -1em;\n      border: none;\n    }\n  }\n  h2 a:hover {\n    background: none;\n  }\n\n  ul {\n    list-style: none;\n    margin: 1em 0;\n  }\n  ul ul {\n    margin: 0 0 0 1em;\n  }\n  ul li {\n    margin: 1px 0;\n  }\n\n  a {\n    display: block;\n    padding: 0.5em 1em;\n    color: $color-light;\n    border-bottom: none;\n    border-radius: $border-radius;\n\n    &:hover {\n      background: $bg-color;\n      color: $color;\n    }\n  }\n\n  .active > a {\n    color: $anchor-color;\n\n    &:hover {\n      color: $anchor-color;\n    }\n  }\n\n  // Display Toggle\n  ul ul {\n    display: none;\n  }\n  .active > ul {\n    display: block;\n  }\n}\n\n@include media-min('medium') {\n  .widget-menu {\n    margin-right: 2em;\n\n    h2 a {\n      margin-right: 0;\n    }\n  }\n}\n\n/**\n * Widget Contents\n */\n.widget-contents {\n  .active > a {\n    color: $color-light;\n    border: 0 none;\n  }\n}\n\n/**\n * Widget Action\n */\n.widget-action {\n  display: none;\n}\n@include media-min('medium') {\n  .widget-action {\n    display: block;\n  }\n}\n\n/**\n * Widget Back\n */\n.widget-back {\n  display: none;\n  text-align: center;\n\n  &:first-child,\n  &:last-child {\n    padding: 0;\n  }\n}\n@include media-min('medium') {\n  .widget-back {\n    display: block;\n    margin: 0;\n    text-align: left;\n\n    &:first-child,\n    &:last-child {\n      padding: 1em 0;\n    }\n  }\n}\n\n/*==============================================================================\n  @Main - #{$filename}\n==============================================================================*/\n\n/**\n * Table of Contents\n * Docs Header\n * Docs Item\n */\n.toc,\n.docs-header,\n.docs-item {\n  margin: 1em 0;\n  padding: 1em 0;\n  border-top: 1px solid rgba($black, 0.1);\n}\n\n/**\n * Subheading\n */\n.subheading {\n  @extend .h5;\n  font-weight: font-weight('regular');\n  color: $color-light;\n}\n\n/**\n * Table of Contents (toc)\n */\n.toc {}\n\n/**\n * Tables\n */\n.table-docs {\n  @extend .table.rowed;\n  @extend .table.expanded;\n  @extend .table.valign-middle;\n\n  p {\n    margin: 0;\n  }\n}\n@media screen and (max-width: 759px) {\n  .table-docs {\n    tr, th, td {\n      display: block;\n    }\n\n    tr {\n      padding: map-get($tables, 'padding');\n      border-bottom: map-get($tables, 'border');\n\n      &:first-child {\n        border-top: map-get($tables, 'border');\n      }\n    }\n\n    tr {\n      th,\n      td {\n        padding: 0.5rem 0;\n        border-bottom: 1px dotted rgba($black, 0.1);\n      }\n    }\n    tr {\n      th:last-child,\n      td:last-child {\n        border-bottom: 0 none;\n      }\n    }\n\n    tbody:first-child tr:first-child {\n      th,\n      td {\n        border-top: 0 none;\n      }\n    }\n  }\n}\n\n/**\n * Lists\n */\n.list-docs {\n  margin: 1.5rem 0;\n  list-style: none;\n\n  li {\n    margin: 0;\n    padding: 1rem 0;\n    border-top: 1px solid rgba($black, 0.1);\n  }\n}\n.list-docs.numbered {\n  counter-reset: list-counter;\n\n  li {\n    position: relative;\n    padding-left: 3em;\n\n    &:before {\n      content: counter(list-counter);\n    \tcounter-increment: list-counter;\n      position: absolute;\n      top: 1.5rem;\n      left: 0;\n      font-size: 2em;\n      line-height: 1.5em;\n      color: $color-light;\n    }\n  }\n}\n\n/**\n * Article Listing\n */\n.article-listing {\n  list-style: none;\n  margin: 0;\n\n  .main-header {\n    margin-top: 0;\n  }\n\n  ol {\n    margin: 1em auto;\n    max-width: 56rem;\n  }\n  ol li {\n    display: flex;\n    margin: 1em 0;\n  }\n\n  .article {\n    flex: 1 1 auto;\n    margin: 0;\n    padding: 0.5em 0;\n    border-top: 1px solid rgba($black, 0.1);\n\n    a {\n      border-bottom: none;\n    }\n  }\n}\n\n@include media-min('medium') {\n  .article-listing ol {\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(18rem, 1fr));\n    grid-gap: 4rem;\n    margin: 2em auto;\n\n    li {\n      margin: 0;\n    }\n  }\n}\n\n/**\n * Article\n */\n.article {\n  position: relative;\n}\n\n/**\n * Featured Image\n */\n.featured-image {\n  margin: 2em auto;\n  border-radius: $border-radius;\n}\n\n/**\n * Meta\n */\n.meta {\n  vertical-align: middle;\n  color: $color-light;\n\n  > span {\n    display: inline-block;\n    vertical-align: middle;\n  }\n  > span + span {\n    margin-left: 0.5em;\n  }\n\n  a {\n    color: $color-light;\n\n    &:hover {\n      color: $anchor-hover-color;\n    }\n  }\n\n  .date {\n    color: $color-light;\n    text-transform: uppercase;\n  }\n}\n\n.meta .version {\n  @extend .yellow.inverted;\n}\n\n/**\n * Article Header\n */\n.article-header {\n  text-align: center;\n  margin-bottom: 3em;\n}\n@include media-min('medium') {\n  .article-header {\n    text-align: left;\n  }\n}\n\n/**\n * Article Content\n */\n.article-content {\n  font-size: px-to-em(16em);\n  line-height: 1.6em;\n}\n@include media-min('medium') {\n  .article .content {\n    font-size: px-to-em(18em);\n    line-height: 1.8em;\n  }\n}\n\n/**\n * Social Links\n */\n.social-links {\n  margin: 2em 0;\n  display: flex;\n  justify-content: center;\n\n  a {\n    padding: 0.25em 0.75em;\n    background: $color;\n    border-radius: $border-radius;\n    font-size: 0.9em;\n    line-height: 1.5em;\n    color: $white;\n    border-bottom: none;\n\n    &:hover {\n      opacity: 0.7;\n    }\n  }\n  a + a {\n    margin-left: 0.25rem;\n  }\n\n  .social-facebook {\n    background: map-get($social, 'facebook');\n  }\n  .social-twitter {\n    background: map-get($social, 'twitter');\n  }\n  .social-google {\n    background: map-get($social, 'google');\n  }\n  .icon {\n    font-size: px-to-em(22px);\n    margin-top: 0;\n    margin-bottom: -0.2em;\n    fill: currentColor;\n    stroke: currentColor;\n    stroke-width: 0;\n  }\n}\n\n@include media-min('medium') {\n  .social-links {\n    margin-top: 4em;\n\n    a {\n      padding: 0.5em 1em;\n      font-size: 1em;\n    }\n    a + a {\n      margin-left: 0.5em;\n    }\n  }\n}\n\n/**\n * Featured Images\n */\n.img-featured {\n  margin: 0 0 2em 0;\n  width: 100%;\n  height: auto;\n}\n\n/**\n * Comments\n */\n.comments-wrapper {\n  margin: 2em 0;\n}\n@include media-min('medium') {\n  .comments-wrapper {\n    margin: 6em 0;\n  }\n}\n\n/*==============================================================================\n  @Blocks - #{$filename}\n==============================================================================*/\n\n/**\n * Action Block\n */\n.block-action {\n  max-width: px-to-em(800px);\n  margin: 1.5em auto;\n  padding: 1.5em 3em;\n  background-image: linear-gradient(45deg, $pink-900, $deep-purple-900);\n  border-radius: $border-radius;\n  color: $white;\n  text-align: center;\n\n  h2 {\n    @extend .h4;\n    color: $white;\n  }\n}\n\n.block-action .action {\n  margin: 1em 0;\n  display: block;\n\n  .button {\n    width: 100%;\n    display: block;\n    margin: 1em 0;\n    background: rgba($white, 0);\n    border: 2px solid rgba($white, 1);\n    color: $white;\n    transition: none;\n\n    &:hover,\n    &:focus {\n      background: $white;\n      color: $color;\n    }\n  }\n}\n\n@include media-min('medium') {\n  .block-action {\n    margin: 3em auto;\n  }\n  .block-action .action {\n    display: inline-block;\n    .button {\n      width: auto;\n      display: inline-block;\n      margin: 0 0.5em;\n    }\n  }\n}\n\n/*==============================================================================\n  @Button-totop - #{$filename}\n==============================================================================*/\n\n.button-totop {\n  opacity: 0;\n  transition: $transition;\n}\n.button-totop.fadeIn {\n  opacity: 1;\n}\n\n/*==============================================================================\n  @Footer - #{$filename}\n==============================================================================*/\n\n.footer {\n  padding: 2em 0;\n  font-size: px-to-em(14px);\n  color: $color-light;\n  text-align: center;\n\n  .logo {\n    border: 0 none;\n  }\n\n  img {\n    display: inline-block;\n    opacity: 0.4;\n  }\n\n  a:not(.button) {\n    color: $color-light;\n\n    &:hover {\n      color: $anchor-hover-color;\n    }\n  }\n\n  .button {\n    margin: 1em auto 0;\n    background: $white;\n\n    &:hover {\n      color: $anchor-color;\n    }\n  }\n}\n\n@include media-min('medium') {\n  .footer {\n    text-align: left;\n\n    .logo {\n      position: relative;\n      top: -3px;\n      float: right;\n    }\n    img {\n      margin: 0;\n    }\n\n    .button-totop {\n      display: none;\n    }\n  }\n}\n\n/*==============================================================================\n  @End - #{$filename}\n==============================================================================*/\n"]}